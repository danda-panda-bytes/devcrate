{
  "version": 3,
  "sources": ["src/app/app.component.ts", "src/app/app.component.html"],
  "sourcesContent": ["import { Component, ViewEncapsulation, inject } from '@angular/core';\nimport {RouterOutlet} from '@angular/router';\nimport {MatCheckbox} from \"@angular/material/checkbox\";\nimport {MatMenu, MatMenuItem, MatMenuTrigger} from \"@angular/material/menu\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIcon, MatIconRegistry} from \"@angular/material/icon\";\nimport {NgxDcNavbarModule} from \"@devcrate/ngx-dc-navbar\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    imports: [\n        MatIcon,\n        MatButtonModule,\n        NgxDcNavbarModule,\n        RouterOutlet,\n    ],\n    styleUrl: './app.component.scss',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  private matIconRegistry = inject(MatIconRegistry);\n\n  public darkTheme = true\n\n  constructor() {\n    this.matIconRegistry.setDefaultFontSetClass('material-symbols-outlined');\n  }\n\n  public changeTheme() {\n    this.darkTheme = !this.darkTheme\n    if (this.darkTheme && document.body.classList.contains('light-theme')) {\n      document.body.classList.remove('light-theme')\n    }\n    if (!this.darkTheme && !document.body.classList.contains('light-theme')) {\n      document.body.classList.add('light-theme')\n    }\n  }\n}\n", "<ngx-dc-navbar\n  mainTitle=\"DevCrate\"\n  appLogo=\"assets/images/devcrate.png\"\n  appLogoUrl=\"/\"\n  collapseButtonText=\"Collapse\"\n>\n  <ng-container *ngxDcNavbarRightTopBarContent>\n    <button mat-icon-button color=\"accent\" (click)=\"changeTheme()\">\n      <mat-icon>{{ darkTheme ? 'light_mode' : 'dark_mode' }}</mat-icon>\n    </button>\n  </ng-container>\n\n  <ng-container *ngxDcNavbarMainContent>\n    <router-outlet />\n  </ng-container>\n</ngx-dc-navbar>\n"],
  "mappings": "8eCMEA,EAAA,CAAA,EACEC,EAAA,EAAA,SAAA,CAAA,EAAuCC,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAASF,EAAAG,YAAA,CAAa,CAAA,CAAA,EAC3DP,EAAA,EAAA,UAAA,EAAUQ,EAAA,CAAA,EAA4CC,EAAA,EAAW,wBAAvDC,EAAA,CAAA,EAAAC,EAAAP,EAAAQ,UAAA,aAAA,WAAA,yBAIdb,EAAA,CAAA,EACEc,EAAA,EAAA,eAAA,ODOJ,IAAaC,GAAY,IAAA,CAAnB,MAAOA,CAAY,CACfC,gBAAkBC,EAAOC,CAAe,EAEzCL,UAAY,GAEnBM,aAAA,CACE,KAAKH,gBAAgBI,uBAAuB,2BAA2B,CACzE,CAEOZ,aAAW,CAChB,KAAKK,UAAY,CAAC,KAAKA,UACnB,KAAKA,WAAaQ,SAASC,KAAKC,UAAUC,SAAS,aAAa,GAClEH,SAASC,KAAKC,UAAUE,OAAO,aAAa,EAE1C,CAAC,KAAKZ,WAAa,CAACQ,SAASC,KAAKC,UAAUC,SAAS,aAAa,GACpEH,SAASC,KAAKC,UAAUG,IAAI,aAAa,CAE7C,4CAjBWX,EAAY,2BAAZA,EAAYY,UAAA,CAAA,CAAA,UAAA,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,YAAA,WAAA,UAAA,6BAAA,aAAA,IAAA,qBAAA,UAAA,EAAA,CAAA,EAAA,+BAAA,EAAA,CAAA,EAAA,wBAAA,EAAA,CAAA,kBAAA,GAAA,QAAA,SAAA,EAAA,OAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICpBzB/B,EAAA,EAAA,gBAAA,CAAA,EAMEiC,EAAA,EAAAC,EAAA,EAAA,EAAA,eAAA,CAAA,EAA6C,EAAAC,EAAA,EAAA,EAAA,eAAA,CAAA,EAS/C1B,EAAA,kBDHQ2B,EACAC,EAAeC,EACfC,EAAiBC,EAAAC,EAAAC,EACjBC,CAAY,EAAAC,OAAA,CAAA;;CAAA,EAAAC,cAAA,CAAA,CAAA,SAKP/B,CAAY,GAAA",
  "names": ["\u0275\u0275elementContainerStart", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "changeTheme", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "darkTheme", "\u0275\u0275element", "AppComponent", "matIconRegistry", "inject", "MatIconRegistry", "constructor", "setDefaultFontSetClass", "document", "body", "classList", "contains", "remove", "add", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "AppComponent_ng_container_1_Template", "AppComponent_ng_container_2_Template", "MatIcon", "MatButtonModule", "MatIconButton", "NgxDcNavbarModule", "NgxDcNavbarComponent", "NgxDcNavbarRightTopBarContentDirective", "NgxDcNavbarMainContentDirective", "RouterOutlet", "styles", "encapsulation"]
}
