{"version":3,"sources":["node_modules/@angular/material/fesm2022/card.mjs","node_modules/@angular/cdk/fesm2022/observers/private.mjs","node_modules/@angular/material/fesm2022/tabs.mjs","projects/devcrate/ngx-dc-demo-card/src/lib/demo-card.directives.ts","projects/devcrate/ngx-dc-demo-card/src/lib/demo-card.component.ts","projects/devcrate/ngx-dc-demo-card/src/lib/demo-card.component.html","projects/devcrate/ngx-dc-demo-card/src/lib/file.service.ts","projects/devcrate/ngx-dc-demo-card/src/lib/demo-file-viewer/demo-file-viewer.component.ts","projects/devcrate/ngx-dc-demo-card/src/lib/demo-file-viewer/demo-file-viewer.component.html","projects/devcrate/ngx-dc-demo-card/src/lib/ngx-markdown-open-modal-on-file-links.utils.ts","projects/devcrate/ngx-dc-demo-card/src/lib/ngx-markdown-open-modal-on-file-links.directive.ts","projects/devcrate/ngx-dc-demo-card/src/lib/demo-card.module.ts","projects/devcrate/ngx-dc-demo-card/src/lib/code-modal/code-modal.component.ts","projects/devcrate/ngx-dc-demo-card/src/lib/code-modal/code-modal.component.html","projects/devcrate/ngx-dc-demo-card/src/public-api.ts","projects/devcrate/ngx-dc-demo-card/src/devcrate-ngx-dc-demo-card.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Directive, NgModule } from '@angular/core';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"], [\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"], [\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"], [\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"], [\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], \"*\"];\nconst _c2 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\", \"*\"];\nconst _c3 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c4 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst MAT_CARD_CONFIG = /*#__PURE__*/new InjectionToken('MAT_CARD_CONFIG');\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCard = /*#__PURE__*/(() => {\n  class MatCard {\n    appearance;\n    constructor() {\n      const config = inject(MAT_CARD_CONFIG, {\n        optional: true\n      });\n      this.appearance = config?.appearance || 'raised';\n    }\n    static ɵfac = function MatCard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCard)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatCard,\n      selectors: [[\"mat-card\"]],\n      hostAttrs: [1, \"mat-mdc-card\", \"mdc-card\"],\n      hostVars: 8,\n      hostBindings: function MatCard_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-card-outlined\", ctx.appearance === \"outlined\")(\"mdc-card--outlined\", ctx.appearance === \"outlined\")(\"mat-mdc-card-filled\", ctx.appearance === \"filled\")(\"mdc-card--filled\", ctx.appearance === \"filled\");\n        }\n      },\n      inputs: {\n        appearance: \"appearance\"\n      },\n      exportAs: [\"matCard\"],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatCard_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-elevated-container-elevation, var(--mat-sys-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mat-card-outlined-container-color, var(--mat-sys-surface));border-radius:var(--mat-card-outlined-container-shape, var(--mat-sys-corner-medium));border-width:var(--mat-card-outlined-outline-width, 1px);border-color:var(--mat-card-outlined-outline-color, var(--mat-sys-outline-variant));box-shadow:var(--mat-card-outlined-container-elevation, var(--mat-sys-level0))}.mat-mdc-card-outlined::after{border:none}.mat-mdc-card-filled{background-color:var(--mat-card-filled-container-color, var(--mat-sys-surface-container-highest));border-radius:var(--mat-card-filled-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-filled-container-elevation, var(--mat-sys-level0))}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-sys-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-sys-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-sys-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-sys-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-sys-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-sys-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-sys-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-sys-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-sys-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-sys-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-sys-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatCard;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardTitle = /*#__PURE__*/(() => {\n  class MatCardTitle {\n    static ɵfac = function MatCardTitle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardTitle)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardTitle,\n      selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-card-title\"]\n    });\n  }\n  return MatCardTitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nlet MatCardTitleGroup = /*#__PURE__*/(() => {\n  class MatCardTitleGroup {\n    static ɵfac = function MatCardTitleGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardTitleGroup)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatCardTitleGroup,\n      selectors: [[\"mat-card-title-group\"]],\n      hostAttrs: [1, \"mat-mdc-card-title-group\"],\n      ngContentSelectors: _c2,\n      decls: 4,\n      vars: 0,\n      template: function MatCardTitleGroup_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵdomElementStart(0, \"div\");\n          i0.ɵɵprojection(1);\n          i0.ɵɵdomElementEnd();\n          i0.ɵɵprojection(2, 1);\n          i0.ɵɵprojection(3, 2);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatCardTitleGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardContent = /*#__PURE__*/(() => {\n  class MatCardContent {\n    static ɵfac = function MatCardContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardContent)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardContent,\n      selectors: [[\"mat-card-content\"]],\n      hostAttrs: [1, \"mat-mdc-card-content\"]\n    });\n  }\n  return MatCardContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardSubtitle = /*#__PURE__*/(() => {\n  class MatCardSubtitle {\n    static ɵfac = function MatCardSubtitle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardSubtitle)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardSubtitle,\n      selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-card-subtitle\"]\n    });\n  }\n  return MatCardSubtitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardActions = /*#__PURE__*/(() => {\n  class MatCardActions {\n    // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n    // as to not conflict with the native `align` attribute.\n    /** Position of the actions inside the card. */\n    align = 'start';\n    static ɵfac = function MatCardActions_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardActions)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardActions,\n      selectors: [[\"mat-card-actions\"]],\n      hostAttrs: [1, \"mat-mdc-card-actions\", \"mdc-card__actions\"],\n      hostVars: 2,\n      hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-card-actions-align-end\", ctx.align === \"end\");\n        }\n      },\n      inputs: {\n        align: \"align\"\n      },\n      exportAs: [\"matCardActions\"]\n    });\n  }\n  return MatCardActions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardHeader = /*#__PURE__*/(() => {\n  class MatCardHeader {\n    static ɵfac = function MatCardHeader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardHeader)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatCardHeader,\n      selectors: [[\"mat-card-header\"]],\n      hostAttrs: [1, \"mat-mdc-card-header\"],\n      ngContentSelectors: _c4,\n      decls: 4,\n      vars: 0,\n      consts: [[1, \"mat-mdc-card-header-text\"]],\n      template: function MatCardHeader_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c3);\n          i0.ɵɵprojection(0);\n          i0.ɵɵdomElementStart(1, \"div\", 0);\n          i0.ɵɵprojection(2, 1);\n          i0.ɵɵdomElementEnd();\n          i0.ɵɵprojection(3, 2);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatCardHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardFooter = /*#__PURE__*/(() => {\n  class MatCardFooter {\n    static ɵfac = function MatCardFooter_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardFooter)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardFooter,\n      selectors: [[\"mat-card-footer\"]],\n      hostAttrs: [1, \"mat-mdc-card-footer\"]\n    });\n  }\n  return MatCardFooter;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardImage = /*#__PURE__*/(() => {\n  class MatCardImage {\n    static ɵfac = function MatCardImage_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardImage)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardImage,\n      selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-card-image\", \"mdc-card__media\"]\n    });\n  }\n  return MatCardImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but small. */\nlet MatCardSmImage = /*#__PURE__*/(() => {\n  class MatCardSmImage {\n    static ɵfac = function MatCardSmImage_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardSmImage)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardSmImage,\n      selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-card-sm-image\", \"mdc-card__media\"]\n    });\n  }\n  return MatCardSmImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but medium. */\nlet MatCardMdImage = /*#__PURE__*/(() => {\n  class MatCardMdImage {\n    static ɵfac = function MatCardMdImage_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardMdImage)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardMdImage,\n      selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-card-md-image\", \"mdc-card__media\"]\n    });\n  }\n  return MatCardMdImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but large. */\nlet MatCardLgImage = /*#__PURE__*/(() => {\n  class MatCardLgImage {\n    static ɵfac = function MatCardLgImage_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardLgImage)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardLgImage,\n      selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-card-lg-image\", \"mdc-card__media\"]\n    });\n  }\n  return MatCardLgImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but extra-large. */\nlet MatCardXlImage = /*#__PURE__*/(() => {\n  class MatCardXlImage {\n    static ɵfac = function MatCardXlImage_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardXlImage)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardXlImage,\n      selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-card-xl-image\", \"mdc-card__media\"]\n    });\n  }\n  return MatCardXlImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardAvatar = /*#__PURE__*/(() => {\n  class MatCardAvatar {\n    static ɵfac = function MatCardAvatar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardAvatar)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCardAvatar,\n      selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-card-avatar\"]\n    });\n  }\n  return MatCardAvatar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst CARD_DIRECTIVES = [MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage];\nlet MatCardModule = /*#__PURE__*/(() => {\n  class MatCardModule {\n    static ɵfac = function MatCardModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatCardModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatCardModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n  return MatCardModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MAT_CARD_CONFIG, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n","import * as i0 from '@angular/core';\nimport { inject, NgZone, RendererFactory2, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = e => {\n  if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n    console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n  }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n  _box;\n  /** Stream that emits when the shared observer is destroyed. */\n  _destroyed = /*#__PURE__*/new Subject();\n  /** Stream of all events from the ResizeObserver. */\n  _resizeSubject = /*#__PURE__*/new Subject();\n  /** ResizeObserver used to observe element resize events. */\n  _resizeObserver;\n  /** A map of elements to streams of their resize events. */\n  _elementObservables = /*#__PURE__*/new Map();\n  constructor(/** The box type to observe for resizes. */\n  _box) {\n    this._box = _box;\n    if (typeof ResizeObserver !== 'undefined') {\n      this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n    }\n  }\n  /**\n   * Gets a stream of resize events for the given element.\n   * @param target The element to observe.\n   * @return The stream of resize events for the element.\n   */\n  observe(target) {\n    if (!this._elementObservables.has(target)) {\n      this._elementObservables.set(target, new Observable(observer => {\n        const subscription = this._resizeSubject.subscribe(observer);\n        this._resizeObserver?.observe(target, {\n          box: this._box\n        });\n        return () => {\n          this._resizeObserver?.unobserve(target);\n          subscription.unsubscribe();\n          this._elementObservables.delete(target);\n        };\n      }).pipe(filter(entries => entries.some(entry => entry.target === target)),\n      // Share a replay of the last event so that subsequent calls to observe the same element\n      // receive initial sizing info like the first one. Also enable ref counting so the\n      // element will be automatically unobserved when there are no more subscriptions.\n      shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }), takeUntil(this._destroyed)));\n    }\n    return this._elementObservables.get(target);\n  }\n  /** Destroys this instance. */\n  destroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._resizeSubject.complete();\n    this._elementObservables.clear();\n  }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nlet SharedResizeObserver = /*#__PURE__*/(() => {\n  class SharedResizeObserver {\n    _cleanupErrorListener;\n    /** Map of box type to shared resize observer. */\n    _observers = new Map();\n    /** The Angular zone. */\n    _ngZone = inject(NgZone);\n    constructor() {\n      if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        this._ngZone.runOutsideAngular(() => {\n          const renderer = inject(RendererFactory2).createRenderer(null, null);\n          this._cleanupErrorListener = renderer.listen('window', 'error', loopLimitExceededErrorHandler);\n        });\n      }\n    }\n    ngOnDestroy() {\n      for (const [, observer] of this._observers) {\n        observer.destroy();\n      }\n      this._observers.clear();\n      this._cleanupErrorListener?.();\n    }\n    /**\n     * Gets a stream of resize events for the given target element and box type.\n     * @param target The element to observe for resizes.\n     * @param options Options to pass to the `ResizeObserver`\n     * @return The stream of resize events for the element.\n     */\n    observe(target, options) {\n      const box = options?.box || 'content-box';\n      if (!this._observers.has(box)) {\n        this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n      }\n      return this._observers.get(box).observe(target);\n    }\n    static ɵfac = function SharedResizeObserver_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SharedResizeObserver)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: SharedResizeObserver,\n      factory: SharedResizeObserver.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SharedResizeObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { SharedResizeObserver };\n","import { FocusKeyManager, _IdGenerator, CdkMonitorFocus, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, CdkScrollable } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, TemplateRef, Directive, ViewContainerRef, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChild, ViewChild, ElementRef, ChangeDetectorRef, NgZone, Injector, Renderer2, EventEmitter, afterNextRender, numberAttribute, Output, ContentChildren, QueryList, ViewChildren, signal, forwardRef, computed, HostAttributeToken, NgModule } from '@angular/core';\nimport { Subject, of, merge, EMPTY, Observable, timer, Subscription, BehaviorSubject } from 'rxjs';\nimport { debounceTime, takeUntil, startWith, switchMap, skip, filter } from 'rxjs/operators';\nimport { _animationsDisabled } from './animation.mjs';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { CdkObserveContent } from '@angular/cdk/observers';\nimport { MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/coercion';\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst _c0 = [\"*\"];\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c1 = [\"tabListContainer\"];\nconst _c2 = [\"tabList\"];\nconst _c3 = [\"tabListInner\"];\nconst _c4 = [\"nextPaginator\"];\nconst _c5 = [\"previousPaginator\"];\nconst _c6 = [\"content\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\nconst _c7 = [\"tabBodyWrapper\"];\nconst _c8 = [\"tabHeader\"];\nfunction MatTabGroup_For_3_Conditional_6_ng_template_0_Template(rf, ctx) {}\nfunction MatTabGroup_For_3_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_For_3_Conditional_6_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\nfunction MatTabGroup_For_3_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\nfunction MatTabGroup_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7, 2);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_For_3_Template_div_click_0_listener() {\n      const ctx_r2 = i0.ɵɵrestoreView(_r2);\n      const tab_r4 = ctx_r2.$implicit;\n      const $index_r5 = ctx_r2.$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      const tabHeader_r7 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r5._handleClick(tab_r4, tabHeader_r7, $index_r5));\n    })(\"cdkFocusChange\", function MatTabGroup_For_3_Template_div_cdkFocusChange_0_listener($event) {\n      const $index_r5 = i0.ɵɵrestoreView(_r2).$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._tabFocusChanged($event, $index_r5));\n    });\n    i0.ɵɵelement(2, \"span\", 8)(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10)(5, \"span\", 11);\n    i0.ɵɵconditionalCreate(6, MatTabGroup_For_3_Conditional_6_Template, 1, 1, null, 12)(7, MatTabGroup_For_3_Conditional_7_Template, 1, 1);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const $index_r5 = ctx.$index;\n    const tabNode_r8 = i0.ɵɵreference(1);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r4.labelClass);\n    i0.ɵɵclassProp(\"mdc-tab--active\", ctx_r5.selectedIndex === $index_r5);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabLabelId(tab_r4, $index_r5))(\"disabled\", tab_r4.disabled)(\"fitInkBarToContent\", ctx_r5.fitInkBarToContent);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r5._getTabIndex($index_r5))(\"aria-posinset\", $index_r5 + 1)(\"aria-setsize\", ctx_r5._tabs.length)(\"aria-controls\", ctx_r5._getTabContentId($index_r5))(\"aria-selected\", ctx_r5.selectedIndex === $index_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matRippleTrigger\", tabNode_r8)(\"matRippleDisabled\", tab_r4.disabled || ctx_r5.disableRipple);\n    i0.ɵɵadvance(3);\n    i0.ɵɵconditional(tab_r4.templateLabel ? 6 : 7);\n  }\n}\nfunction MatTabGroup_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatTabGroup_For_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 13);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_For_8_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._removeTabBodyWrapperHeight());\n    })(\"_onCentering\", function MatTabGroup_For_8_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._setTabBodyWrapperHeight($event));\n    })(\"_beforeCentering\", function MatTabGroup_For_8_Template_mat_tab_body__beforeCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._bodyCentered($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r10 = ctx.$implicit;\n    const $index_r11 = ctx.$index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r10.bodyClass);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabContentId($index_r11))(\"content\", tab_r10.content)(\"position\", tab_r10.position)(\"animationDuration\", ctx_r5.animationDuration)(\"preserveContent\", ctx_r5.preserveContent);\n    i0.ɵɵattribute(\"tabindex\", ctx_r5.contentTabIndex != null && ctx_r5.selectedIndex === $index_r11 ? ctx_r5.contentTabIndex : null)(\"aria-labelledby\", ctx_r5._getTabLabelId(tab_r10, $index_r11))(\"aria-hidden\", ctx_r5.selectedIndex !== $index_r11);\n  }\n}\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _c10 = [\"mat-tab-link\", \"\"];\nconst MAT_TAB_CONTENT = /*#__PURE__*/new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nlet MatTabContent = /*#__PURE__*/(() => {\n  class MatTabContent {\n    template = inject(TemplateRef);\n    constructor() {}\n    static ɵfac = function MatTabContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabContent)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabContent,\n      selectors: [[\"\", \"matTabContent\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }])]\n    });\n  }\n  return MatTabContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = /*#__PURE__*/new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = /*#__PURE__*/new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nlet MatTabLabel = /*#__PURE__*/(() => {\n  class MatTabLabel extends CdkPortal {\n    _closestTab = inject(MAT_TAB, {\n      optional: true\n    });\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatTabLabel_BaseFactory;\n      return function MatTabLabel_Factory(__ngFactoryType__) {\n        return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = i0.ɵɵgetInheritedFactory(MatTabLabel)))(__ngFactoryType__ || MatTabLabel);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabLabel,\n      selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatTabLabel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = /*#__PURE__*/new InjectionToken('MAT_TAB_GROUP');\nlet MatTab = /*#__PURE__*/(() => {\n  class MatTab {\n    _viewContainerRef = inject(ViewContainerRef);\n    _closestTabGroup = inject(MAT_TAB_GROUP, {\n      optional: true\n    });\n    /** whether the tab is disabled. */\n    disabled = false;\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n      return this._templateLabel;\n    }\n    set templateLabel(value) {\n      this._setTemplateLabelInput(value);\n    }\n    _templateLabel;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    _explicitContent = undefined;\n    /** Template inside the MatTab view that contains an `<ng-content>`. */\n    _implicitContent;\n    /** Plain text label for the tab, used when there is no template label. */\n    textLabel = '';\n    /** Aria label for the tab. */\n    ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    ariaLabelledby;\n    /** Classes to be passed to the tab label inside the mat-tab-header container. */\n    labelClass;\n    /** Classes to be passed to the tab mat-tab-body container. */\n    bodyClass;\n    /**\n     * Custom ID for the tab, overriding the auto-generated one by Material.\n     * Note that when using this input, it's your responsibility to ensure that the ID is unique.\n     */\n    id = null;\n    /** Portal that will be the hosted content of the tab */\n    _contentPortal = null;\n    /** @docs-private */\n    get content() {\n      return this._contentPortal;\n    }\n    /** Emits whenever the internal state of the tab changes. */\n    _stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position = null;\n    // TODO(crisbeto): we no longer use this, but some internal apps appear to rely on it.\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n    constructor() {\n      inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    }\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n        this._stateChanges.next();\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    ngOnInit() {\n      this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n      // Only update the label if the query managed to find one. This works around an issue where a\n      // user may have manually set `templateLabel` during creation mode, which would then get\n      // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n      // tab matches the current one so that we don't pick up labels from nested tabs.\n      if (value && value._closestTab === this) {\n        this._templateLabel = value;\n      }\n    }\n    static ɵfac = function MatTab_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTab)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTab,\n      selectors: [[\"mat-tab\"]],\n      contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLabel, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatTabContent, 7, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n        }\n      },\n      viewQuery: function MatTab_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n        }\n      },\n      hostAttrs: [\"hidden\", \"\"],\n      hostVars: 1,\n      hostBindings: function MatTab_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"id\", null);\n        }\n      },\n      inputs: {\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        textLabel: [0, \"label\", \"textLabel\"],\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        labelClass: \"labelClass\",\n        bodyClass: \"bodyClass\",\n        id: \"id\"\n      },\n      exportAs: [\"matTab\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }]), i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatTab_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵdomTemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return MatTab;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Class that is applied when a tab indicator is active. */\nconst ACTIVE_CLASS = 'mdc-tab-indicator--active';\n/** Class that is applied when the tab indicator should not transition. */\nconst NO_TRANSITION_CLASS = 'mdc-tab-indicator--no-transition';\n/**\n * Abstraction around the MDC tab indicator that acts as the tab header's ink bar.\n * @docs-private\n */\nclass MatInkBar {\n  _items;\n  /** Item to which the ink bar is aligned currently. */\n  _currentItem;\n  constructor(_items) {\n    this._items = _items;\n  }\n  /** Hides the ink bar. */\n  hide() {\n    this._items.forEach(item => item.deactivateInkBar());\n    this._currentItem = undefined;\n  }\n  /** Aligns the ink bar to a DOM node. */\n  alignToElement(element) {\n    const correspondingItem = this._items.find(item => item.elementRef.nativeElement === element);\n    const currentItem = this._currentItem;\n    if (correspondingItem === currentItem) {\n      return;\n    }\n    currentItem?.deactivateInkBar();\n    if (correspondingItem) {\n      const domRect = currentItem?.elementRef.nativeElement.getBoundingClientRect?.();\n      // The ink bar won't animate unless we give it the `DOMRect` of the previous item.\n      correspondingItem.activateInkBar(domRect);\n      this._currentItem = correspondingItem;\n    }\n  }\n}\nlet InkBarItem = /*#__PURE__*/(() => {\n  class InkBarItem {\n    _elementRef = inject(ElementRef);\n    _inkBarElement;\n    _inkBarContentElement;\n    _fitToContent = false;\n    /** Whether the ink bar should fit to the entire tab or just its content. */\n    get fitInkBarToContent() {\n      return this._fitToContent;\n    }\n    set fitInkBarToContent(newValue) {\n      if (this._fitToContent !== newValue) {\n        this._fitToContent = newValue;\n        if (this._inkBarElement) {\n          this._appendInkBarElement();\n        }\n      }\n    }\n    /** Aligns the ink bar to the current item. */\n    activateInkBar(previousIndicatorClientRect) {\n      const element = this._elementRef.nativeElement;\n      // Early exit if no indicator is present to handle cases where an indicator\n      // may be activated without a prior indicator state\n      if (!previousIndicatorClientRect || !element.getBoundingClientRect || !this._inkBarContentElement) {\n        element.classList.add(ACTIVE_CLASS);\n        return;\n      }\n      // This animation uses the FLIP approach. You can read more about it at the link below:\n      // https://aerotwist.com/blog/flip-your-animations/\n      // Calculate the dimensions based on the dimensions of the previous indicator\n      const currentClientRect = element.getBoundingClientRect();\n      const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n      const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n      element.classList.add(NO_TRANSITION_CLASS);\n      this._inkBarContentElement.style.setProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n      // Force repaint before updating classes and transform to ensure the transform properly takes effect\n      element.getBoundingClientRect();\n      element.classList.remove(NO_TRANSITION_CLASS);\n      element.classList.add(ACTIVE_CLASS);\n      this._inkBarContentElement.style.setProperty('transform', '');\n    }\n    /** Removes the ink bar from the current item. */\n    deactivateInkBar() {\n      this._elementRef.nativeElement.classList.remove(ACTIVE_CLASS);\n    }\n    /** Initializes the foundation. */\n    ngOnInit() {\n      this._createInkBarElement();\n    }\n    /** Destroys the foundation. */\n    ngOnDestroy() {\n      this._inkBarElement?.remove();\n      this._inkBarElement = this._inkBarContentElement = null;\n    }\n    /** Creates and appends the ink bar element. */\n    _createInkBarElement() {\n      const documentNode = this._elementRef.nativeElement.ownerDocument || document;\n      const inkBarElement = this._inkBarElement = documentNode.createElement('span');\n      const inkBarContentElement = this._inkBarContentElement = documentNode.createElement('span');\n      inkBarElement.className = 'mdc-tab-indicator';\n      inkBarContentElement.className = 'mdc-tab-indicator__content mdc-tab-indicator__content--underline';\n      inkBarElement.appendChild(this._inkBarContentElement);\n      this._appendInkBarElement();\n    }\n    /**\n     * Appends the ink bar to the tab host element or content, depending on whether\n     * the ink bar should fit to content.\n     */\n    _appendInkBarElement() {\n      if (!this._inkBarElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Ink bar element has not been created and cannot be appended');\n      }\n      const parentElement = this._fitToContent ? this._elementRef.nativeElement.querySelector('.mdc-tab__content') : this._elementRef.nativeElement;\n      if (!parentElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Missing element to host the ink bar');\n      }\n      parentElement.appendChild(this._inkBarElement);\n    }\n    static ɵfac = function InkBarItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InkBarItem)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: InkBarItem,\n      inputs: {\n        fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute]\n      }\n    });\n  }\n  return InkBarItem;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n  return method;\n}\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = /*#__PURE__*/new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nlet MatTabLabelWrapper = /*#__PURE__*/(() => {\n  class MatTabLabelWrapper extends InkBarItem {\n    elementRef = inject(ElementRef);\n    /** Whether the tab is disabled. */\n    disabled = false;\n    /** Sets focus on the wrapper element */\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n      return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n      return this.elementRef.nativeElement.offsetWidth;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatTabLabelWrapper_BaseFactory;\n      return function MatTabLabelWrapper_Factory(__ngFactoryType__) {\n        return (ɵMatTabLabelWrapper_BaseFactory || (ɵMatTabLabelWrapper_BaseFactory = i0.ɵɵgetInheritedFactory(MatTabLabelWrapper)))(__ngFactoryType__ || MatTabLabelWrapper);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabLabelWrapper,\n      selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n      hostVars: 3,\n      hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n          i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatTabLabelWrapper;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = {\n  passive: true\n};\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nlet MatPaginatedTabHeader = /*#__PURE__*/(() => {\n  class MatPaginatedTabHeader {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _viewportRuler = inject(ViewportRuler);\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _sharedResizeObserver = inject(SharedResizeObserver);\n    _injector = inject(Injector);\n    _renderer = inject(Renderer2);\n    _animationsDisabled = _animationsDisabled();\n    _eventCleanups;\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    _scrollDistance = 0;\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    _selectedIndexChanged = false;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Whether the controls for pagination should be displayed */\n    _showPaginationControls = false;\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    _disableScrollAfter = true;\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    _disableScrollBefore = true;\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    _tabLabelCount;\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    _scrollDistanceChanged;\n    /** Used to manage focus between the tabs. */\n    _keyManager;\n    /** Cached text content of the header. */\n    _currentTextContent;\n    /** Stream that will stop the automated scrolling. */\n    _stopScrolling = new Subject();\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    disablePagination = false;\n    /** The index of the active tab. */\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n    set selectedIndex(v) {\n      const value = isNaN(v) ? 0 : v;\n      if (this._selectedIndex != value) {\n        this._selectedIndexChanged = true;\n        this._selectedIndex = value;\n        if (this._keyManager) {\n          this._keyManager.updateActiveItem(value);\n        }\n      }\n    }\n    _selectedIndex = 0;\n    /** Event emitted when the option is selected. */\n    selectFocusedIndex = new EventEmitter();\n    /** Event emitted when a label is focused. */\n    indexFocused = new EventEmitter();\n    constructor() {\n      // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n      this._eventCleanups = this._ngZone.runOutsideAngular(() => [this._renderer.listen(this._elementRef.nativeElement, 'mouseleave', () => this._stopInterval())]);\n    }\n    ngAfterViewInit() {\n      // We need to handle these events manually, because we want to bind passive event listeners.\n      this._eventCleanups.push(this._renderer.listen(this._previousPaginator.nativeElement, 'touchstart', () => this._handlePaginatorPress('before'), passiveEventListenerOptions), this._renderer.listen(this._nextPaginator.nativeElement, 'touchstart', () => this._handlePaginatorPress('after'), passiveEventListenerOptions));\n    }\n    ngAfterContentInit() {\n      const dirChange = this._dir ? this._dir.change : of('ltr');\n      // We need to debounce resize events because the alignment logic is expensive.\n      // If someone animates the width of tabs, we don't want to realign on every animation frame.\n      // Once we haven't seen any more resize events in the last 32ms (~2 animaion frames) we can\n      // re-align.\n      const resize = this._sharedResizeObserver.observe(this._elementRef.nativeElement).pipe(debounceTime(32), takeUntil(this._destroyed));\n      // Note: We do not actually need to watch these events for proper functioning of the tabs,\n      // the resize events above should capture any viewport resize that we care about. However,\n      // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n      const viewportResize = this._viewportRuler.change(150).pipe(takeUntil(this._destroyed));\n      const realign = () => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n      };\n      this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap()\n      // Allow focus to land on disabled tabs, as per https://w3c.github.io/aria-practices/#kbd_disabled_controls\n      .skipPredicate(() => false);\n      // Fall back to the first link as being active if there isn't a selected one.\n      // This is relevant primarily for the tab nav bar.\n      this._keyManager.updateActiveItem(Math.max(this._selectedIndex, 0));\n      // Note: We do not need to realign after the first render for proper functioning of the tabs\n      // the resize events above should fire when we first start observing the element. However,\n      // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n      afterNextRender(realign, {\n        injector: this._injector\n      });\n      // On dir change or resize, realign the ink bar and update the orientation of\n      // the key manager if the direction has changed.\n      merge(dirChange, viewportResize, resize, this._items.changes, this._itemsResized()).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        // We need to defer this to give the browser some time to recalculate\n        // the element dimensions. The call has to be wrapped in `NgZone.run`,\n        // because the viewport change handler runs outside of Angular.\n        this._ngZone.run(() => {\n          Promise.resolve().then(() => {\n            // Clamp the scroll distance, because it can change with the number of tabs.\n            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n            realign();\n          });\n        });\n        this._keyManager?.withHorizontalOrientation(this._getLayoutDirection());\n      });\n      // If there is a change in the focus key manager we need to emit the `indexFocused`\n      // event in order to provide a public event that notifies about focus changes. Also we realign\n      // the tabs container by scrolling the new focused tab into the visible section.\n      this._keyManager.change.subscribe(newFocusIndex => {\n        this.indexFocused.emit(newFocusIndex);\n        this._setTabFocus(newFocusIndex);\n      });\n    }\n    /** Sends any changes that could affect the layout of the items. */\n    _itemsResized() {\n      if (typeof ResizeObserver !== 'function') {\n        return EMPTY;\n      }\n      return this._items.changes.pipe(startWith(this._items), switchMap(tabItems => new Observable(observer => this._ngZone.runOutsideAngular(() => {\n        const resizeObserver = new ResizeObserver(entries => observer.next(entries));\n        tabItems.forEach(item => resizeObserver.observe(item.elementRef.nativeElement));\n        return () => {\n          resizeObserver.disconnect();\n        };\n      }))),\n      // Skip the first emit since the resize observer emits when an item\n      // is observed for new items when the tab is already inserted\n      skip(1),\n      // Skip emissions where all the elements are invisible since we don't want\n      // the header to try and re-render with invalid measurements. See #25574.\n      filter(entries => entries.some(e => e.contentRect.width > 0 && e.contentRect.height > 0)));\n    }\n    ngAfterContentChecked() {\n      // If the number of tab labels have changed, check if scrolling should be enabled\n      if (this._tabLabelCount != this._items.length) {\n        this.updatePagination();\n        this._tabLabelCount = this._items.length;\n        this._changeDetectorRef.markForCheck();\n      }\n      // If the selected index has changed, scroll to the label and check if the scrolling controls\n      // should be disabled.\n      if (this._selectedIndexChanged) {\n        this._scrollToLabel(this._selectedIndex);\n        this._checkScrollingControls();\n        this._alignInkBarToSelectedTab();\n        this._selectedIndexChanged = false;\n        this._changeDetectorRef.markForCheck();\n      }\n      // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n      // then translate the header to reflect this.\n      if (this._scrollDistanceChanged) {\n        this._updateTabScrollPosition();\n        this._scrollDistanceChanged = false;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    ngOnDestroy() {\n      this._eventCleanups.forEach(cleanup => cleanup());\n      this._keyManager?.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n      // We don't handle any key bindings with a modifier key.\n      if (hasModifierKey(event)) {\n        return;\n      }\n      switch (event.keyCode) {\n        case ENTER:\n        case SPACE:\n          if (this.focusIndex !== this.selectedIndex) {\n            const item = this._items.get(this.focusIndex);\n            if (item && !item.disabled) {\n              this.selectFocusedIndex.emit(this.focusIndex);\n              this._itemSelected(event);\n            }\n          }\n          break;\n        default:\n          this._keyManager?.onKeydown(event);\n      }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n      const textContent = this._elementRef.nativeElement.textContent;\n      // We need to diff the text content of the header, because the MutationObserver callback\n      // will fire even if the text content didn't change which is inefficient and is prone\n      // to infinite loops if a poorly constructed expression is passed in (see #14249).\n      if (textContent !== this._currentTextContent) {\n        this._currentTextContent = textContent || '';\n        // The content observer runs outside the `NgZone` by default, which\n        // means that we need to bring the callback back in ourselves.\n        this._ngZone.run(() => {\n          this.updatePagination();\n          this._alignInkBarToSelectedTab();\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n      this._checkPaginationEnabled();\n      this._checkScrollingControls();\n      this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n      return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n      if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n        return;\n      }\n      this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n      return this._items ? !!this._items.toArray()[index] : true;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n      if (this._showPaginationControls) {\n        this._scrollToLabel(tabIndex);\n      }\n      if (this._items && this._items.length) {\n        this._items.toArray()[tabIndex].focus();\n        // Do not let the browser manage scrolling to focus the element, this will be handled\n        // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n        // should be the full width minus the offset width.\n        const containerEl = this._tabListContainer.nativeElement;\n        const dir = this._getLayoutDirection();\n        if (dir == 'ltr') {\n          containerEl.scrollLeft = 0;\n        } else {\n          containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n        }\n      }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n      if (this.disablePagination) {\n        return;\n      }\n      const scrollDistance = this.scrollDistance;\n      const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n      // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n      // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n      // and ripples will exceed the boundaries of the visible tab bar.\n      // See: https://github.com/angular/components/issues/10276\n      // We round the `transform` here, because transforms with sub-pixel precision cause some\n      // browsers to blur the content of the element.\n      this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n      // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n      // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n      // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n      // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n      if (this._platform.TRIDENT || this._platform.EDGE) {\n        this._tabListContainer.nativeElement.scrollLeft = 0;\n      }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n      return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n      this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      // Move the scroll distance one-third the length of the tab list's viewport.\n      const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n      return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n      this._stopInterval();\n      this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n      if (this.disablePagination) {\n        return;\n      }\n      const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n      if (!selectedLabel) {\n        return;\n      }\n      // The view length is the visible width of the tab labels.\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      const {\n        offsetLeft,\n        offsetWidth\n      } = selectedLabel.elementRef.nativeElement;\n      let labelBeforePos, labelAfterPos;\n      if (this._getLayoutDirection() == 'ltr') {\n        labelBeforePos = offsetLeft;\n        labelAfterPos = labelBeforePos + offsetWidth;\n      } else {\n        labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n        labelBeforePos = labelAfterPos - offsetWidth;\n      }\n      const beforeVisiblePos = this.scrollDistance;\n      const afterVisiblePos = this.scrollDistance + viewLength;\n      if (labelBeforePos < beforeVisiblePos) {\n        // Scroll header to move label to the before direction\n        this.scrollDistance -= beforeVisiblePos - labelBeforePos;\n      } else if (labelAfterPos > afterVisiblePos) {\n        // Scroll header to move label to the after direction\n        this.scrollDistance += Math.min(labelAfterPos - afterVisiblePos, labelBeforePos - beforeVisiblePos);\n      }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n      if (this.disablePagination) {\n        this._showPaginationControls = false;\n      } else {\n        const scrollWidth = this._tabListInner.nativeElement.scrollWidth;\n        const containerWidth = this._elementRef.nativeElement.offsetWidth;\n        // Usually checking that the scroll width is greater than the container width should be\n        // enough, but on Safari at specific widths the browser ends up rounding up when there's\n        // no pagination and rounding down once the pagination is added. This can throw the component\n        // into an infinite loop where the pagination shows up and disappears constantly. We work\n        // around it by adding a threshold to the calculation. From manual testing the threshold\n        // can be lowered to 2px and still resolve the issue, but we set a higher one to be safe.\n        // This shouldn't cause any content to be clipped, because tabs have a 24px horizontal\n        // padding. See b/316395154 for more information.\n        const isEnabled = scrollWidth - containerWidth >= 5;\n        if (!isEnabled) {\n          this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n          this._showPaginationControls = isEnabled;\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n      if (this.disablePagination) {\n        this._disableScrollAfter = this._disableScrollBefore = true;\n      } else {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n      const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n      const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n      const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n      if (selectedLabelWrapper) {\n        this._inkBar.alignToElement(selectedLabelWrapper);\n      } else {\n        this._inkBar.hide();\n      }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n      this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n      // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n      // null check the `button`, but we do it so we don't break tests that use fake events.\n      if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n        return;\n      }\n      // Avoid overlapping timers.\n      this._stopInterval();\n      // Start a timer after the delay and keep firing based on the interval.\n      timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n        const {\n          maxScrollDistance,\n          distance\n        } = this._scrollHeader(direction);\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n      if (this.disablePagination) {\n        return {\n          maxScrollDistance: 0,\n          distance: 0\n        };\n      }\n      const maxScrollDistance = this._getMaxScrollDistance();\n      this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n      // Mark that the scroll distance has changed so that after the view is checked, the CSS\n      // transformation can move the header.\n      this._scrollDistanceChanged = true;\n      this._checkScrollingControls();\n      return {\n        maxScrollDistance,\n        distance: this._scrollDistance\n      };\n    }\n    static ɵfac = function MatPaginatedTabHeader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatPaginatedTabHeader)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatPaginatedTabHeader,\n      inputs: {\n        disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n        selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute]\n      },\n      outputs: {\n        selectFocusedIndex: \"selectFocusedIndex\",\n        indexFocused: \"indexFocused\"\n      }\n    });\n  }\n  return MatPaginatedTabHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nlet MatTabHeader = /*#__PURE__*/(() => {\n  class MatTabHeader extends MatPaginatedTabHeader {\n    _items;\n    _tabListContainer;\n    _tabList;\n    _tabListInner;\n    _nextPaginator;\n    _previousPaginator;\n    _inkBar;\n    /** Aria label of the header. */\n    ariaLabel;\n    /** Sets the `aria-labelledby` of the header. */\n    ariaLabelledby;\n    /** Whether the ripple effect is disabled or not. */\n    disableRipple = false;\n    ngAfterContentInit() {\n      this._inkBar = new MatInkBar(this._items);\n      super.ngAfterContentInit();\n    }\n    _itemSelected(event) {\n      event.preventDefault();\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatTabHeader_BaseFactory;\n      return function MatTabHeader_Factory(__ngFactoryType__) {\n        return (ɵMatTabHeader_BaseFactory || (ɵMatTabHeader_BaseFactory = i0.ɵɵgetInheritedFactory(MatTabHeader)))(__ngFactoryType__ || MatTabHeader);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabHeader,\n      selectors: [[\"mat-tab-header\"]],\n      contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n        }\n      },\n      viewQuery: function MatTabHeader_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 7);\n          i0.ɵɵviewQuery(_c3, 7);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-header\"],\n      hostVars: 4,\n      hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n        }\n      },\n      inputs: {\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 13,\n      vars: 10,\n      consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-label-container\", 3, \"keydown\"], [\"role\", \"tablist\", 1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-labels\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\"]],\n      template: function MatTabHeader_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 5, 0);\n          i0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n          })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n          })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(2, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 7, 1);\n          i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleKeydown($event));\n          });\n          i0.ɵɵelementStart(5, \"div\", 8, 2);\n          i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onContentChanges());\n          });\n          i0.ɵɵelementStart(7, \"div\", 9, 3);\n          i0.ɵɵprojection(9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 10, 4);\n          i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n          })(\"click\", function MatTabHeader_Template_div_click_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n          })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(12, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationsDisabled);\n          i0.ɵɵadvance(2);\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby || null);\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n        }\n      },\n      dependencies: [MatRipple, CdkObserveContent],\n      styles: [\".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-pagination-icon-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-divider-height, 1px);border-bottom-color:var(--mat-tab-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-divider-height, 1px);border-top-color:var(--mat-tab-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-labels,.mat-mdc-tab-labels.cdk-drop-list{min-height:var(--mat-tab-container-height, 48px)}.mat-mdc-tab::before{margin:5px}@media(forced-colors: active){.mat-mdc-tab[aria-disabled=true]{color:GrayText}}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return MatTabHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = /*#__PURE__*/new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nlet MatTabBodyPortal = /*#__PURE__*/(() => {\n  class MatTabBodyPortal extends CdkPortalOutlet {\n    _host = inject(MatTabBody);\n    _ngZone = inject(NgZone);\n    /** Subscription to events for when the tab body begins centering. */\n    _centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    _leavingSub = Subscription.EMPTY;\n    constructor() {\n      super();\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n      super.ngOnInit();\n      this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition())).subscribe(isCentering => {\n        if (this._host._content && isCentering && !this.hasAttached()) {\n          // Attach in the zone since the events from the tab body may be happening outside.\n          // See: https://github.com/angular/components/issues/31867\n          this._ngZone.run(() => {\n            // `Promise.resolve` is necessary to destabilize the zone.\n            // Otherwise some apps throw a `ApplicationRef.tick is called recursively` error.\n            Promise.resolve().then();\n            this.attach(this._host._content);\n          });\n        }\n      });\n      this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n        if (!this._host.preserveContent) {\n          this._ngZone.run(() => this.detach());\n        }\n      });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this._centeringSub.unsubscribe();\n      this._leavingSub.unsubscribe();\n    }\n    static ɵfac = function MatTabBodyPortal_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabBodyPortal)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabBodyPortal,\n      selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatTabBodyPortal;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nlet MatTabBody = /*#__PURE__*/(() => {\n  class MatTabBody {\n    _elementRef = inject(ElementRef);\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _ngZone = inject(NgZone);\n    _injector = inject(Injector);\n    _renderer = inject(Renderer2);\n    _diAnimationsDisabled = _animationsDisabled();\n    _eventCleanups;\n    _initialized;\n    _fallbackTimer;\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    _positionIndex;\n    /** Subscription to the directionality change observable. */\n    _dirChangeSubscription = Subscription.EMPTY;\n    /** Current position of the body within the tab group. */\n    _position;\n    /** Previous position of the body. */\n    _previousPosition;\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    _onCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    _beforeCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    _afterLeavingCenter = new EventEmitter();\n    /** Event emitted when the tab completes its animation towards the center. */\n    _onCentered = new EventEmitter(true);\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    _portalHost;\n    /** Element in which the content is rendered. */\n    _contentElement;\n    /** The tab body content to display. */\n    _content;\n    // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    animationDuration = '500ms';\n    /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n    preserveContent = false;\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n      this._positionIndex = position;\n      this._computePositionAnimationState();\n    }\n    constructor() {\n      if (this._dir) {\n        const changeDetectorRef = inject(ChangeDetectorRef);\n        this._dirChangeSubscription = this._dir.change.subscribe(dir => {\n          this._computePositionAnimationState(dir);\n          changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    ngOnInit() {\n      this._bindTransitionEvents();\n      if (this._position === 'center') {\n        this._setActiveClass(true);\n        // Allows for the dynamic height to animate properly on the initial run.\n        afterNextRender(() => this._onCentering.emit(this._elementRef.nativeElement.clientHeight), {\n          injector: this._injector\n        });\n      }\n      this._initialized = true;\n    }\n    ngOnDestroy() {\n      clearTimeout(this._fallbackTimer);\n      this._eventCleanups?.forEach(cleanup => cleanup());\n      this._dirChangeSubscription.unsubscribe();\n    }\n    /** Sets up the transition events. */\n    _bindTransitionEvents() {\n      this._ngZone.runOutsideAngular(() => {\n        const element = this._elementRef.nativeElement;\n        const transitionDone = event => {\n          if (event.target === this._contentElement?.nativeElement) {\n            this._elementRef.nativeElement.classList.remove('mat-tab-body-animating');\n            // Only fire the actual callback when a transition is fully finished,\n            // otherwise the content can jump around when the next transition starts.\n            if (event.type === 'transitionend') {\n              this._transitionDone();\n            }\n          }\n        };\n        this._eventCleanups = [this._renderer.listen(element, 'transitionstart', event => {\n          if (event.target === this._contentElement?.nativeElement) {\n            this._elementRef.nativeElement.classList.add('mat-tab-body-animating');\n            this._transitionStarted();\n          }\n        }), this._renderer.listen(element, 'transitionend', transitionDone), this._renderer.listen(element, 'transitioncancel', transitionDone)];\n      });\n    }\n    /** Called when a transition has started. */\n    _transitionStarted() {\n      clearTimeout(this._fallbackTimer);\n      const isCentering = this._position === 'center';\n      this._beforeCentering.emit(isCentering);\n      if (isCentering) {\n        this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n      }\n    }\n    /** Called when a transition is done. */\n    _transitionDone() {\n      if (this._position === 'center') {\n        this._onCentered.emit();\n      } else if (this._previousPosition === 'center') {\n        this._afterLeavingCenter.emit();\n      }\n    }\n    /** Sets the active styling on the tab body based on its current position. */\n    _setActiveClass(isActive) {\n      this._elementRef.nativeElement.classList.toggle('mat-mdc-tab-body-active', isActive);\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition() {\n      return this._positionIndex === 0;\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n      this._previousPosition = this._position;\n      if (this._positionIndex < 0) {\n        this._position = dir == 'ltr' ? 'left' : 'right';\n      } else if (this._positionIndex > 0) {\n        this._position = dir == 'ltr' ? 'right' : 'left';\n      } else {\n        this._position = 'center';\n      }\n      if (this._animationsDisabled()) {\n        this._simulateTransitionEvents();\n      } else if (this._initialized && (this._position === 'center' || this._previousPosition === 'center')) {\n        // The transition events are load-bearing and in some cases they might not fire (e.g.\n        // tests setting `* {transition: none}` to disable animations). This timeout will simulate\n        // them if a transition doesn't start within a certain amount of time.\n        clearTimeout(this._fallbackTimer);\n        this._fallbackTimer = this._ngZone.runOutsideAngular(() => setTimeout(() => this._simulateTransitionEvents(), 100));\n      }\n    }\n    /** Simulates the body's transition events in an environment where they might not fire. */\n    _simulateTransitionEvents() {\n      this._transitionStarted();\n      afterNextRender(() => this._transitionDone(), {\n        injector: this._injector\n      });\n    }\n    /** Whether animations are disabled for the tab group. */\n    _animationsDisabled() {\n      return this._diAnimationsDisabled || this.animationDuration === '0ms' || this.animationDuration === '0s';\n    }\n    static ɵfac = function MatTabBody_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabBody)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabBody,\n      selectors: [[\"mat-tab-body\"]],\n      viewQuery: function MatTabBody_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatTabBodyPortal, 5);\n          i0.ɵɵviewQuery(_c6, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentElement = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-body\"],\n      hostVars: 1,\n      hostBindings: function MatTabBody_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"inert\", ctx._position === \"center\" ? null : \"\");\n        }\n      },\n      inputs: {\n        _content: [0, \"content\", \"_content\"],\n        animationDuration: \"animationDuration\",\n        preserveContent: \"preserveContent\",\n        position: \"position\"\n      },\n      outputs: {\n        _onCentering: \"_onCentering\",\n        _beforeCentering: \"_beforeCentering\",\n        _onCentered: \"_onCentered\"\n      },\n      decls: 3,\n      vars: 6,\n      consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-mdc-tab-body-content\"], [\"matTabBodyHost\", \"\"]],\n      template: function MatTabBody_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-tab-body-content-left\", ctx._position === \"left\")(\"mat-tab-body-content-right\", ctx._position === \"right\")(\"mat-tab-body-content-can-animate\", ctx._position === \"center\" || ctx._previousPosition === \"center\");\n        }\n      },\n      dependencies: [MatTabBodyPortal, CdkScrollable],\n      styles: [\".mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto;transform:none;visibility:hidden}.mat-tab-body-animating>.mat-mdc-tab-body-content,.mat-mdc-tab-body-active>.mat-mdc-tab-body-content{visibility:visible}.mat-tab-body-animating>.mat-mdc-tab-body-content{min-height:1px}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-tab-body-content-can-animate{transition:transform var(--mat-tab-animation-duration) 1ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable .mat-tab-body-content-can-animate{transition:none}.mat-tab-body-content-left{transform:translate3d(-100%, 0, 0)}.mat-tab-body-content-right{transform:translate3d(100%, 0, 0)}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return MatTabBody;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nlet MatTabGroup = /*#__PURE__*/(() => {\n  class MatTabGroup {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _ngZone = inject(NgZone);\n    _tabsSubscription = Subscription.EMPTY;\n    _tabLabelSubscription = Subscription.EMPTY;\n    _tabBodySubscription = Subscription.EMPTY;\n    _diAnimationsDisabled = _animationsDisabled();\n    /**\n     * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n     * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n     */\n    _allTabs;\n    _tabBodies;\n    _tabBodyWrapper;\n    _tabHeader;\n    /** All of the tabs that belong to the group. */\n    _tabs = new QueryList();\n    /** The tab index that should be selected after the content has been checked. */\n    _indexToSelect = 0;\n    /** Index of the tab that was focused last. */\n    _lastFocusedTabIndex = null;\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    _tabBodyWrapperHeight = 0;\n    /**\n     * Theme color of the tab group. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/tabs/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether the ink bar should fit its width to the size of the tab label content. */\n    get fitInkBarToContent() {\n      return this._fitInkBarToContent;\n    }\n    set fitInkBarToContent(value) {\n      this._fitInkBarToContent = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    _fitInkBarToContent = false;\n    /** Whether tabs should be stretched to fill the header. */\n    stretchTabs = true;\n    /** Alignment for tabs label. */\n    alignTabs = null;\n    /** Whether the tab group should grow to the size of the active tab. */\n    dynamicHeight = false;\n    /** The index of the active tab. */\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n      this._indexToSelect = isNaN(value) ? null : value;\n    }\n    _selectedIndex = null;\n    /** Position of the tab header. */\n    headerPosition = 'above';\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n      return this._animationDuration;\n    }\n    set animationDuration(value) {\n      const stringValue = value + '';\n      this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n    }\n    _animationDuration;\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n      return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n      this._contentTabIndex = isNaN(value) ? null : value;\n    }\n    _contentTabIndex;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    disablePagination = false;\n    /** Whether ripples in the tab group are disabled. */\n    disableRipple = false;\n    /**\n     * By default tabs remove their content from the DOM while it's off-screen.\n     * Setting this to `true` will keep it in the DOM which will prevent elements\n     * like iframes and videos from reloading next time it comes back into the view.\n     */\n    preserveContent = false;\n    /**\n     * Theme color of the background of the tab group. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/tabs/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     *\n     * @deprecated The background color should be customized through Sass theming APIs.\n     * @breaking-change 20.0.0 Remove this input\n     */\n    get backgroundColor() {\n      return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n      if (value) {\n        classList.add('mat-tabs-with-background', `mat-background-${value}`);\n      }\n      this._backgroundColor = value;\n    }\n    _backgroundColor;\n    /** Aria label of the inner `tablist` of the group. */\n    ariaLabel;\n    /** Sets the `aria-labelledby` of the inner `tablist` of the group. */\n    ariaLabelledby;\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    selectedIndexChange = new EventEmitter();\n    /** Event emitted when focus has changed within a tab group. */\n    focusChange = new EventEmitter();\n    /** Event emitted when the body animation has completed */\n    animationDone = new EventEmitter();\n    /** Event emitted when the tab selection has changed. */\n    selectedTabChange = new EventEmitter(true);\n    _groupId;\n    /** Whether the tab group is rendered on the server. */\n    _isServer = !inject(Platform).isBrowser;\n    constructor() {\n      const defaultConfig = inject(MAT_TABS_CONFIG, {\n        optional: true\n      });\n      this._groupId = inject(_IdGenerator).getId('mat-tab-group-');\n      this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n      this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n      this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n      if (defaultConfig?.contentTabIndex != null) {\n        this.contentTabIndex = defaultConfig.contentTabIndex;\n      }\n      this.preserveContent = !!defaultConfig?.preserveContent;\n      this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n      this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n      this.alignTabs = defaultConfig && defaultConfig.alignTabs != null ? defaultConfig.alignTabs : null;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n      // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n      // the amount of tabs changes before the actual change detection runs.\n      const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // If there is a change in selected index, emit a change event. Should not trigger if\n      // the selected index has not yet been initialized.\n      if (this._selectedIndex != indexToSelect) {\n        const isFirstRun = this._selectedIndex == null;\n        if (!isFirstRun) {\n          this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n          // Preserve the height so page doesn't scroll up during tab change.\n          // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n          const wrapper = this._tabBodyWrapper.nativeElement;\n          wrapper.style.minHeight = wrapper.clientHeight + 'px';\n        }\n        // Changing these values after change detection has run\n        // since the checked content may contain references to them.\n        Promise.resolve().then(() => {\n          this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n          if (!isFirstRun) {\n            this.selectedIndexChange.emit(indexToSelect);\n            // Clear the min-height, this was needed during tab change to avoid\n            // unnecessary scrolling.\n            this._tabBodyWrapper.nativeElement.style.minHeight = '';\n          }\n        });\n      }\n      // Setup the position for each tab and optionally setup an origin on the next selected tab.\n      this._tabs.forEach((tab, index) => {\n        tab.position = index - indexToSelect;\n        // If there is already a selected tab, then set up an origin for the next selected tab\n        // if it doesn't have one already.\n        if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n          tab.origin = indexToSelect - this._selectedIndex;\n        }\n      });\n      if (this._selectedIndex !== indexToSelect) {\n        this._selectedIndex = indexToSelect;\n        this._lastFocusedTabIndex = null;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    ngAfterContentInit() {\n      this._subscribeToAllTabChanges();\n      this._subscribeToTabLabels();\n      // Subscribe to changes in the amount of tabs, in order to be\n      // able to re-render the content as new tabs are added or removed.\n      this._tabsSubscription = this._tabs.changes.subscribe(() => {\n        const indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // Maintain the previously-selected tab if a new tab is added or removed and there is no\n        // explicit change that selects a different tab.\n        if (indexToSelect === this._selectedIndex) {\n          const tabs = this._tabs.toArray();\n          let selectedTab;\n          for (let i = 0; i < tabs.length; i++) {\n            if (tabs[i].isActive) {\n              // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n              // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n              // adding a tab within the `selectedIndexChange` event.\n              this._indexToSelect = this._selectedIndex = i;\n              this._lastFocusedTabIndex = null;\n              selectedTab = tabs[i];\n              break;\n            }\n          }\n          // If we haven't found an active tab and a tab exists at the selected index, it means\n          // that the active tab was swapped out. Since this won't be picked up by the rendering\n          // loop in `ngAfterContentChecked`, we need to sync it up manually.\n          if (!selectedTab && tabs[indexToSelect]) {\n            Promise.resolve().then(() => {\n              tabs[indexToSelect].isActive = true;\n              this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            });\n          }\n        }\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    ngAfterViewInit() {\n      this._tabBodySubscription = this._tabBodies.changes.subscribe(() => this._bodyCentered(true));\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n      // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n      // some that are inside of nested tab groups. We filter them out manually by checking that\n      // the closest group to the tab is the current one.\n      this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n        this._tabs.reset(tabs.filter(tab => {\n          return tab._closestTabGroup === this || !tab._closestTabGroup;\n        }));\n        this._tabs.notifyOnChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._tabs.destroy();\n      this._tabsSubscription.unsubscribe();\n      this._tabLabelSubscription.unsubscribe();\n      this._tabBodySubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n      if (this._tabHeader) {\n        this._tabHeader._alignInkBarToSelectedTab();\n      }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n      if (this._tabHeader) {\n        this._tabHeader.updatePagination();\n      }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n      const header = this._tabHeader;\n      if (header) {\n        header.focusIndex = index;\n      }\n    }\n    _focusChanged(index) {\n      this._lastFocusedTabIndex = index;\n      this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n      const event = new MatTabChangeEvent();\n      event.index = index;\n      if (this._tabs && this._tabs.length) {\n        event.tab = this._tabs.toArray()[index];\n      }\n      return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n      if (this._tabLabelSubscription) {\n        this._tabLabelSubscription.unsubscribe();\n      }\n      this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n      // Note the `|| 0`, which ensures that values like NaN can't get through\n      // and which would otherwise throw the component into an infinite loop\n      // (since Math.max(NaN, 0) === NaN).\n      return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(tab, index) {\n      return tab.id || `${this._groupId}-label-${index}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(index) {\n      return `${this._groupId}-content-${index}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n      if (!this.dynamicHeight || !this._tabBodyWrapperHeight) {\n        this._tabBodyWrapperHeight = tabHeight;\n        return;\n      }\n      const wrapper = this._tabBodyWrapper.nativeElement;\n      wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n      // This conditional forces the browser to paint the height so that\n      // the animation to the new height can have an origin.\n      if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n        wrapper.style.height = tabHeight + 'px';\n      }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n      const wrapper = this._tabBodyWrapper.nativeElement;\n      this._tabBodyWrapperHeight = wrapper.clientHeight;\n      wrapper.style.height = '';\n      this._ngZone.run(() => this.animationDone.emit());\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n      tabHeader.focusIndex = index;\n      if (!tab.disabled) {\n        this.selectedIndex = index;\n      }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(index) {\n      const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n      return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n      // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n      // can cause the tab to be moved out from under the pointer, interrupting the\n      // click sequence (see #21898). We don't need to scroll the tab into view for\n      // such cases anyway, because it will be done when the tab becomes selected.\n      if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n        this._tabHeader.focusIndex = index;\n      }\n    }\n    /**\n     * Callback invoked when the centered state of a tab body changes.\n     * @param isCenter Whether the tab will be in the center.\n     */\n    _bodyCentered(isCenter) {\n      // Marks all the existing tabs as inactive and the center tab as active. Note that this can\n      // be achieved much easier by using a class binding on each body. The problem with\n      // doing so is that we can't control the timing of when the class is removed from the\n      // previously-active element and added to the newly-active one. If there's a tick between\n      // removing the class and adding the new one, the content will jump in a very jarring way.\n      // We go through the trouble of setting the classes ourselves to guarantee that they're\n      // swapped out at the same time.\n      if (isCenter) {\n        this._tabBodies?.forEach((body, i) => body._setActiveClass(i === this._selectedIndex));\n      }\n    }\n    _animationsDisabled() {\n      return this._diAnimationsDisabled || this.animationDuration === '0' || this.animationDuration === '0ms';\n    }\n    static ɵfac = function MatTabGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabGroup)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabGroup,\n      selectors: [[\"mat-tab-group\"]],\n      contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n        }\n      },\n      viewQuery: function MatTabGroup_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c7, 5);\n          i0.ɵɵviewQuery(_c8, 5);\n          i0.ɵɵviewQuery(MatTabBody, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodies = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-group\"],\n      hostVars: 11,\n      hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"mat-align-tabs\", ctx.alignTabs);\n          i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n          i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n          i0.ɵɵclassProp(\"mat-mdc-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-mdc-tab-group-inverted-header\", ctx.headerPosition === \"below\")(\"mat-mdc-tab-group-stretch-tabs\", ctx.stretchTabs);\n        }\n      },\n      inputs: {\n        color: \"color\",\n        fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n        stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n        alignTabs: [0, \"mat-align-tabs\", \"alignTabs\"],\n        dynamicHeight: [2, \"dynamicHeight\", \"dynamicHeight\", booleanAttribute],\n        selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute],\n        headerPosition: \"headerPosition\",\n        animationDuration: \"animationDuration\",\n        contentTabIndex: [2, \"contentTabIndex\", \"contentTabIndex\", numberAttribute],\n        disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        preserveContent: [2, \"preserveContent\", \"preserveContent\", booleanAttribute],\n        backgroundColor: \"backgroundColor\",\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"]\n      },\n      outputs: {\n        selectedIndexChange: \"selectedIndexChange\",\n        focusChange: \"focusChange\",\n        animationDone: \"animationDone\",\n        selectedTabChange: \"selectedTabChange\"\n      },\n      exportAs: [\"matTabGroup\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }])],\n      ngContentSelectors: _c0,\n      decls: 9,\n      vars: 8,\n      consts: [[\"tabHeader\", \"\"], [\"tabBodyWrapper\", \"\"], [\"tabNode\", \"\"], [3, \"indexFocused\", \"selectFocusedIndex\", \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"aria-label\", \"aria-labelledby\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-focus-indicator\", 3, \"id\", \"mdc-tab--active\", \"class\", \"disabled\", \"fitInkBarToContent\"], [1, \"mat-mdc-tab-body-wrapper\"], [\"role\", \"tabpanel\", 3, \"id\", \"class\", \"content\", \"position\", \"animationDuration\", \"preserveContent\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-focus-indicator\", 3, \"click\", \"cdkFocusChange\", \"id\", \"disabled\", \"fitInkBarToContent\"], [1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"_onCentered\", \"_onCentering\", \"_beforeCentering\", \"id\", \"content\", \"position\", \"animationDuration\", \"preserveContent\"]],\n      template: function MatTabGroup_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"mat-tab-header\", 3, 0);\n          i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._focusChanged($event));\n          })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.selectedIndex = $event);\n          });\n          i0.ɵɵrepeaterCreate(2, MatTabGroup_For_3_Template, 8, 17, \"div\", 4, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n          i0.ɵɵconditionalCreate(4, MatTabGroup_Conditional_4_Template, 1, 0);\n          i0.ɵɵelementStart(5, \"div\", 5, 1);\n          i0.ɵɵrepeaterCreate(7, MatTabGroup_For_8_Template, 1, 10, \"mat-tab-body\", 6, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n          i0.ɵɵariaProperty(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx._tabs);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx._isServer ? 4 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationsDisabled());\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx._tabs);\n        }\n      },\n      dependencies: [MatTabHeader, MatTabLabelWrapper, CdkMonitorFocus, MatRipple, CdkPortalOutlet, MatTabBody],\n      styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1;touch-action:manipulation}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mat-tab-container-height, 48px);font-family:var(--mat-tab-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-tab-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-tab-label-text-tracking, var(--mat-sys-title-small-tracking));line-height:var(--mat-tab-label-text-line-height, var(--mat-sys-title-small-line-height));font-weight:var(--mat-tab-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mat-tab-active-indicator-height, 2px);border-radius:var(--mat-tab-active-indicator-shape, 0)}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-inactive-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-inactive-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-active-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-active-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-active-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-hover-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-active-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-focus-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-disabled-ripple-color, var(--mat-sys-on-surface-variant))}.mat-mdc-tab .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-inactive-label-text-color, var(--mat-sys-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-focus-indicator::before{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return MatTabGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index;\n  /** Reference to the currently-selected tab. */\n  tab;\n}\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nlet MatTabNav = /*#__PURE__*/(() => {\n  class MatTabNav extends MatPaginatedTabHeader {\n    _focusedItem = signal(null, ...(ngDevMode ? [{\n      debugName: \"_focusedItem\"\n    }] : []));\n    /** Whether the ink bar should fit its width to the size of the tab label content. */\n    get fitInkBarToContent() {\n      return this._fitInkBarToContent.value;\n    }\n    set fitInkBarToContent(value) {\n      this._fitInkBarToContent.next(value);\n      this._changeDetectorRef.markForCheck();\n    }\n    _fitInkBarToContent = new BehaviorSubject(false);\n    /** Whether tabs should be stretched to fill the header. */\n    stretchTabs = true;\n    get animationDuration() {\n      return this._animationDuration;\n    }\n    set animationDuration(value) {\n      const stringValue = value + '';\n      this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n    }\n    _animationDuration;\n    /** Query list of all tab links of the tab navigation. */\n    _items;\n    /**\n     * Theme color of the background of the tab nav. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/tabs/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get backgroundColor() {\n      return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n      if (value) {\n        classList.add('mat-tabs-with-background', `mat-background-${value}`);\n      }\n      this._backgroundColor = value;\n    }\n    _backgroundColor;\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple();\n    }\n    set disableRipple(value) {\n      this._disableRipple.set(value);\n    }\n    _disableRipple = signal(false, ...(ngDevMode ? [{\n      debugName: \"_disableRipple\"\n    }] : []));\n    /**\n     * Theme color of the nav bar. This API is supported in M2 themes only, it has\n     * no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/tabs/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color = 'primary';\n    /**\n     * Associated tab panel controlled by the nav bar. If not provided, then the nav bar\n     * follows the ARIA link / navigation landmark pattern. If provided, it follows the\n     * ARIA tabs design pattern.\n     */\n    tabPanel;\n    _tabListContainer;\n    _tabList;\n    _tabListInner;\n    _nextPaginator;\n    _previousPaginator;\n    _inkBar;\n    constructor() {\n      const defaultConfig = inject(MAT_TABS_CONFIG, {\n        optional: true\n      });\n      super();\n      this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n      this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n      this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n    }\n    _itemSelected() {\n      // noop\n    }\n    ngAfterContentInit() {\n      this._inkBar = new MatInkBar(this._items);\n      // We need this to run before the `changes` subscription in parent to ensure that the\n      // selectedIndex is up-to-date by the time the super class starts looking for it.\n      this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => this.updateActiveLink());\n      super.ngAfterContentInit();\n      // Turn the `change` stream into a signal to try and avoid \"changed after checked\" errors.\n      this._keyManager.change.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => this._focusedItem.set(this._keyManager?.activeItem || null));\n    }\n    ngAfterViewInit() {\n      if (!this.tabPanel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error('A mat-tab-nav-panel must be specified via [tabPanel].');\n      }\n      super.ngAfterViewInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n      if (!this._items) {\n        return;\n      }\n      const items = this._items.toArray();\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].active) {\n          this.selectedIndex = i;\n          if (this.tabPanel) {\n            this.tabPanel._activeTabId = items[i].id;\n          }\n          // Updating the `selectedIndex` won't trigger the `change` event on\n          // the key manager so we need to set the signal from here.\n          this._focusedItem.set(items[i]);\n          this._changeDetectorRef.markForCheck();\n          return;\n        }\n      }\n      this.selectedIndex = -1;\n    }\n    _getRole() {\n      return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n    _hasFocus(link) {\n      return this._keyManager?.activeItem === link;\n    }\n    static ɵfac = function MatTabNav_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabNav)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabNav,\n      selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n      contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n        }\n      },\n      viewQuery: function MatTabNav_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 7);\n          i0.ɵɵviewQuery(_c3, 7);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-nav-bar\", \"mat-mdc-tab-header\"],\n      hostVars: 17,\n      hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx._getRole());\n          i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-mdc-tab-nav-bar-stretch-tabs\", ctx.stretchTabs)(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"_mat-animation-noopable\", ctx._animationsDisabled);\n        }\n      },\n      inputs: {\n        fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n        stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n        animationDuration: \"animationDuration\",\n        backgroundColor: \"backgroundColor\",\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        color: \"color\",\n        tabPanel: \"tabPanel\"\n      },\n      exportAs: [\"matTabNavBar\", \"matTabNav\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      attrs: _c9,\n      ngContentSelectors: _c0,\n      decls: 13,\n      vars: 6,\n      consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-link-container\", 3, \"keydown\"], [1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-links\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\"]],\n      template: function MatTabNav_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 5, 0);\n          i0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n          })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n          })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(2, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 7, 1);\n          i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleKeydown($event));\n          });\n          i0.ɵɵelementStart(5, \"div\", 8, 2);\n          i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onContentChanges());\n          });\n          i0.ɵɵelementStart(7, \"div\", 9, 3);\n          i0.ɵɵprojection(9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 10, 4);\n          i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n          })(\"click\", function MatTabNav_Template_div_click_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n          })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(12, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n          i0.ɵɵadvance(10);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n        }\n      },\n      dependencies: [MatRipple, CdkObserveContent],\n      styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1;touch-action:manipulation}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-pagination-icon-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-links{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-links,.mat-mdc-tab-links.cdk-drop-list{min-height:var(--mat-tab-container-height, 48px)}.mat-mdc-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-divider-height, 1px);border-bottom-color:var(--mat-tab-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-background-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-focus-indicator::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-focus-indicator::before{border-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-foreground-color)}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return MatTabNav;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Link inside a `mat-tab-nav-bar`.\n */\nlet MatTabLink = /*#__PURE__*/(() => {\n  class MatTabLink extends InkBarItem {\n    _tabNavBar = inject(MatTabNav);\n    elementRef = inject(ElementRef);\n    _focusMonitor = inject(FocusMonitor);\n    _destroyed = new Subject();\n    /** Whether the tab link is active or not. */\n    _isActive = false;\n    _tabIndex = computed(() => this._tabNavBar._focusedItem() === this ? this.tabIndex : -1, ...(ngDevMode ? [{\n      debugName: \"_tabIndex\"\n    }] : []));\n    /** Whether the link is active. */\n    get active() {\n      return this._isActive;\n    }\n    set active(value) {\n      if (value !== this._isActive) {\n        this._isActive = value;\n        this._tabNavBar.updateActiveLink();\n      }\n    }\n    /** Whether the tab link is disabled. */\n    disabled = false;\n    /** Whether ripples are disabled on the tab link. */\n    get disableRipple() {\n      return this._disableRipple();\n    }\n    set disableRipple(value) {\n      this._disableRipple.set(value);\n    }\n    _disableRipple = signal(false, ...(ngDevMode ? [{\n      debugName: \"_disableRipple\"\n    }] : []));\n    tabIndex = 0;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * @docs-private\n     */\n    rippleConfig;\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n      return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /** Unique id for the tab. */\n    id = inject(_IdGenerator).getId('mat-tab-link-');\n    constructor() {\n      super();\n      inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n      const globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n        optional: true\n      });\n      const tabIndex = inject(new HostAttributeToken('tabindex'), {\n        optional: true\n      });\n      this.rippleConfig = globalRippleOptions || {};\n      this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n      if (_animationsDisabled()) {\n        this.rippleConfig.animation = {\n          enterDuration: 0,\n          exitDuration: 0\n        };\n      }\n      this._tabNavBar._fitInkBarToContent.pipe(takeUntil(this._destroyed)).subscribe(fitInkBarToContent => {\n        this.fitInkBarToContent = fitInkBarToContent;\n      });\n    }\n    /** Focuses the tab link. */\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n      this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n      this._destroyed.next();\n      this._destroyed.complete();\n      super.ngOnDestroy();\n      this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n      // Since we allow navigation through tabbing in the nav bar, we\n      // have to update the focused index whenever the link receives focus.\n      this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n      if (event.keyCode === SPACE || event.keyCode === ENTER) {\n        if (this.disabled) {\n          event.preventDefault();\n        } else if (this._tabNavBar.tabPanel) {\n          // Only prevent the default action on space since it can scroll the page.\n          // Don't prevent enter since it can break link navigation.\n          if (event.keyCode === SPACE) {\n            event.preventDefault();\n          }\n          this.elementRef.nativeElement.click();\n        }\n      }\n    }\n    _getAriaControls() {\n      return this._tabNavBar.tabPanel ? this._tabNavBar.tabPanel?.id : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n      if (this._tabNavBar.tabPanel) {\n        return this.active ? 'true' : 'false';\n      } else {\n        return this.elementRef.nativeElement.getAttribute('aria-selected');\n      }\n    }\n    _getAriaCurrent() {\n      return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n      return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    static ɵfac = function MatTabLink_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabLink)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabLink,\n      selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n      hostAttrs: [1, \"mdc-tab\", \"mat-mdc-tab-link\", \"mat-focus-indicator\"],\n      hostVars: 11,\n      hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n            return ctx._handleFocus();\n          })(\"keydown\", function MatTabLink_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-controls\", ctx._getAriaControls())(\"aria-current\", ctx._getAriaCurrent())(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx._getAriaSelected())(\"id\", ctx.id)(\"tabIndex\", ctx._tabIndex())(\"role\", ctx._getRole());\n          i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled)(\"mdc-tab--active\", ctx.active);\n        }\n      },\n      inputs: {\n        active: [2, \"active\", \"active\", booleanAttribute],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n        id: \"id\"\n      },\n      exportAs: [\"matTabLink\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      attrs: _c10,\n      ngContentSelectors: _c0,\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"]],\n      template: function MatTabLink_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"span\", 0)(1, \"div\", 1);\n          i0.ɵɵelementStart(2, \"span\", 2)(3, \"span\", 3);\n          i0.ɵɵprojection(4);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"matRippleTrigger\", ctx.elementRef.nativeElement)(\"matRippleDisabled\", ctx.rippleDisabled);\n        }\n      },\n      dependencies: [MatRipple],\n      styles: [\".mat-mdc-tab-link{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mat-tab-container-height, 48px);font-family:var(--mat-tab-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-tab-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-tab-label-text-tracking, var(--mat-sys-title-small-tracking));line-height:var(--mat-tab-label-text-line-height, var(--mat-sys-title-small-line-height));font-weight:var(--mat-tab-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-tab-link.mdc-tab{flex-grow:0}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mat-tab-active-indicator-height, 2px);border-radius:var(--mat-tab-active-indicator-shape, 0)}.mat-mdc-tab-link:hover .mdc-tab__text-label{color:var(--mat-tab-inactive-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link:focus .mdc-tab__text-label{color:var(--mat-tab-inactive-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-active-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab-link.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-active-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-active-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-hover-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-active-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-active-focus-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab-link.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-disabled-ripple-color, var(--mat-sys-on-surface-variant))}.mat-mdc-tab-link .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-inactive-label-text-color, var(--mat-sys-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab-link .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab-link:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab-link.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab-link.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab-link .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header.mat-mdc-tab-nav-bar-stretch-tabs .mat-mdc-tab-link{flex-grow:1}.mat-mdc-tab-link::before{margin:5px}@media(max-width: 599px){.mat-mdc-tab-link{min-width:72px}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatTabLink;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Tab panel component associated with MatTabNav.\n */\nlet MatTabNavPanel = /*#__PURE__*/(() => {\n  class MatTabNavPanel {\n    /** Unique id for the tab panel. */\n    id = inject(_IdGenerator).getId('mat-tab-nav-panel-');\n    /** Id of the active tab in the nav bar. */\n    _activeTabId;\n    static ɵfac = function MatTabNavPanel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabNavPanel)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabNavPanel,\n      selectors: [[\"mat-tab-nav-panel\"]],\n      hostAttrs: [\"role\", \"tabpanel\", 1, \"mat-mdc-tab-nav-panel\"],\n      hostVars: 2,\n      hostBindings: function MatTabNavPanel_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-labelledby\", ctx._activeTabId)(\"id\", ctx.id);\n        }\n      },\n      inputs: {\n        id: \"id\"\n      },\n      exportAs: [\"matTabNavPanel\"],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatTabNavPanel_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatTabNavPanel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatTabsModule = /*#__PURE__*/(() => {\n  class MatTabsModule {\n    static ɵfac = function MatTabsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatTabsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n  return MatTabsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0.\n */\nconst matTabsAnimations = {\n  // Represents:\n  // trigger('translateTab', [\n  //   // Transitions to `none` instead of 0, because some browsers might blur the content.\n  //   state(\n  //     'center, void, left-origin-center, right-origin-center',\n  //     style({transform: 'none', visibility: 'visible'}),\n  //   ),\n  //   // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  //   // in order to ensure that the element has a height before its state changes. This is\n  //   // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  //   // not have a static height and is not rendered. See related issue: #9465\n  //   state(\n  //     'left',\n  //     style({\n  //       transform: 'translate3d(-100%, 0, 0)',\n  //       minHeight: '1px',\n  //       // Normally this is redundant since we detach the content from the DOM, but if the user\n  //       // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n  //       visibility: 'hidden',\n  //     }),\n  //   ),\n  //   state(\n  //     'right',\n  //     style({\n  //       transform: 'translate3d(100%, 0, 0)',\n  //       minHeight: '1px',\n  //       visibility: 'hidden',\n  //     }),\n  //   ),\n  //   transition(\n  //     '* => left, * => right, left => center, right => center',\n  //     animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //   ),\n  //   transition('void => left-origin-center', [\n  //     style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'}),\n  //     animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //   ]),\n  //   transition('void => right-origin-center', [\n  //     style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'}),\n  //     animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //   ]),\n  // ])\n  /** Animation translates a tab along the X axis. */\n  translateTab: {\n    type: 7,\n    name: 'translateTab',\n    definitions: [{\n      type: 0,\n      name: 'center, void, left-origin-center, right-origin-center',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'none',\n          visibility: 'visible'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'left',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translate3d(-100%, 0, 0)',\n          minHeight: '1px',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'right',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translate3d(100%, 0, 0)',\n          minHeight: '1px',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: '* => left, * => right, left => center, right => center',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: 'void => left-origin-center',\n      animation: [{\n        type: 6,\n        styles: {\n          transform: 'translate3d(-100%, 0, 0)',\n          visibility: 'hidden'\n        },\n        offset: null\n      }, {\n        type: 4,\n        styles: null,\n        timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n      }],\n      options: null\n    }, {\n      type: 1,\n      expr: 'void => right-origin-center',\n      animation: [{\n        type: 6,\n        styles: {\n          transform: 'translate3d(100%, 0, 0)',\n          visibility: 'hidden'\n        },\n        offset: null\n      }, {\n        type: 4,\n        styles: null,\n        timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n      }],\n      options: null\n    }],\n    options: {}\n  }\n};\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_CONTENT, MAT_TAB_GROUP, MAT_TAB_LABEL, MatInkBar, MatPaginatedTabHeader, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MAT_INK_BAR_POSITIONER_FACTORY, matTabsAnimations };\n","import { Directive, HostBinding, inject, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-dc-demo-tabs]',\n  standalone: true,\n  exportAs: 'ngx-dc-demo-tabs'\n})\nexport class NgxDcDemoTabsDirective {\n  private _showCode = false\n  public get showCode(): boolean {\n    return this._showCode\n  }\n  public set showCode(c: boolean) {\n    this._showCode = c\n    if (this.showCode) {\n      this.display = 'initial'\n    } else {\n      this.display = 'none'\n    }\n  }\n  \n  // TODO: Do we need _code and display? I don't think we do...\n  @HostBinding('class.code')\n  private _code = true\n\n  @HostBinding('style.display')\n  private display = 'none'\n}\n\n@Directive({\n  selector: '[ngxDcDemoCardExample]',\n  standalone: true,\n})\nexport class NgxDcDemoCardExampleDirective {\n  templateRef = inject<TemplateRef<any>>(TemplateRef)\n}\n\n@Directive({\n  selector: '[ngxDcDemoCardButtons]',\n  standalone: true,\n})\nexport class NgxDcDemoCardButtonsDirective {\n  templateRef = inject<TemplateRef<any>>(TemplateRef)\n}\n\n@Directive({\n  selector: '[ngxDcDemoCardSubtitle]',\n  standalone: true,\n})\nexport class NgxDcDemoCardSubtitleDirective {\n  templateRef = inject<TemplateRef<any>>(TemplateRef)\n}\n\n@Directive({\n  selector: '[ngxDcDemoCardTitle]',\n  standalone: true,\n})\nexport class NgxDcDemoCardTitleDirective {\n  templateRef = inject<TemplateRef<any>>(TemplateRef)\n}\n\n@Directive({\n  selector: '[ngxDcDemoCardExampleTitle]',\n  standalone: true,\n})\nexport class NgxDcDemoCardExampleTitleDirective {\n  templateRef = inject<TemplateRef<any>>(TemplateRef);\n}\n\n","import { NgTemplateOutlet } from \"@angular/common\"\nimport { Component, ViewEncapsulation, input, contentChild } from '@angular/core'\nimport { MatIconButton } from \"@angular/material/button\"\nimport { MatCardModule } from \"@angular/material/card\"\nimport { MatIconModule } from \"@angular/material/icon\"\nimport { MatTabsModule } from \"@angular/material/tabs\"\nimport { HighlightModule } from \"ngx-highlightjs\"\nimport {\n  NgxDcDemoCardButtonsDirective, NgxDcDemoCardExampleDirective, NgxDcDemoCardExampleTitleDirective,\n  NgxDcDemoCardSubtitleDirective,\n  NgxDcDemoCardTitleDirective, NgxDcDemoTabsDirective\n} from \"./demo-card.directives\"\n\n@Component({\n    selector: 'ngx-dc-demo-card',\n    imports: [\n        NgTemplateOutlet,\n        HighlightModule,\n        MatTabsModule,\n        MatIconButton,\n        MatIconModule,\n        MatCardModule,\n    ],\n    templateUrl: './demo-card.component.html',\n    styleUrl: './demo-card.component.scss',\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxDcDemoCardComponent {\n  public title = input<string>();\n  public subtitle = input<string>();\n\n  public showCode = false\n  showLinkIcon = input.required<boolean>();\n  showCodeIcon = input.required<boolean>();\n\n  readonly titleTemplate = contentChild.required(NgxDcDemoCardTitleDirective);\n  readonly subtitleTemplate = contentChild.required(NgxDcDemoCardSubtitleDirective);\n  readonly buttonsTemplate = contentChild(NgxDcDemoCardButtonsDirective);\n  readonly exampleTemplate = contentChild.required(NgxDcDemoCardExampleDirective);\n  readonly demoTabsTemplate = contentChild.required(NgxDcDemoTabsDirective);\n  readonly exampleTitleTemplate = contentChild.required(NgxDcDemoCardExampleTitleDirective);\n}\n","<mat-card>\n  <div class=\"heading-container\">\n    <div class=\"fill\">\n      <div mat-card-title>\n        <ng-container *ngTemplateOutlet=\"titleTemplate()?.templateRef\"></ng-container>\n      </div>\n      <div mat-card-subtitle>\n        <ng-container *ngTemplateOutlet=\"subtitleTemplate()?.templateRef\"></ng-container>\n      </div>\n    </div>\n    <div class=\"button-actions\">\n      @if (showCodeIcon()) {\n        <button mat-icon-button (click)=\"demoTabsTemplate() && (demoTabsTemplate().showCode = !demoTabsTemplate().showCode)\"><mat-icon>code</mat-icon></button>\n      }\n      @if (showLinkIcon()) {\n        <button mat-icon-button><mat-icon>link</mat-icon></button>\n      }\n      @if (buttonsTemplate()?.templateRef) {\n        <ng-container *ngTemplateOutlet=\"buttonsTemplate()?.templateRef\"></ng-container>\n      }\n    </div>\n  </div>\n\n  <ng-content select=\"[ngx-dc-demo-tabs]\"></ng-content>\n\n  @if (exampleTitleTemplate()?.templateRef) {\n    <h3 class=\"example-title\">\n      <ng-container *ngTemplateOutlet=\"exampleTitleTemplate()?.templateRef\"></ng-container>\n    </h3>\n  }\n  <div class=\"example-container\">\n    <ng-container *ngTemplateOutlet=\"exampleTemplate()?.templateRef\"></ng-container>\n  </div>\n\n</mat-card>\n","import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { firstValueFrom } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileService {\n  private http = inject(HttpClient)\n  private sanitizer = inject(DomSanitizer)\n\n  async getFileBlockContent(filePath: string, section: string): Promise<string> {\n    const startMarker = `<!-- ${section} START -->`;\n    const endMarker = `<!-- ${section} END -->`;\n\n    return firstValueFrom(this.http.get(filePath, { responseType: 'text' }).pipe(\n      map((content) => {\n        if (section) {\n          const startIdx = content.indexOf(startMarker);\n          const endIdx = content.indexOf(endMarker, startIdx + startMarker.length);\n\n          if (startIdx === -1 || endIdx === -1) {\n            return ''; // Markers not found, return empty string\n          }\n\n          // Extract the content between the markers\n          //\n          content = content.substring(startIdx + startMarker.length, endIdx)\n        }\n\n        return content.trim()\n      })\n    ))\n  }\n\n\n  public escapeHtml(content: string): string {\n    return content\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#39;')\n      .replace(/&/g, '&amp;')\n      .replace(/@/g, '&#64;')\n  }\n}\n","import { Component, OnInit, inject, input } from \"@angular/core\";\nimport {FileService} from \"../file.service\";\nimport {HighlightModule} from \"ngx-highlightjs\";\n\n@Component({\n    selector: 'ngx-dc-demo-file-viewer',\n    imports: [\n        HighlightModule,\n    ],\n    templateUrl: \"./demo-file-viewer.component.html\"\n})\nexport class DemoFileViewerComponent implements OnInit {\n  private fileService = inject(FileService);\n\n  readonly filePath = input.required<string>();\n  readonly language = input.required<string>();\n\n  public readonly section = input<string>();\n\n  public fileContent: string = \"\"\n\n  public async ngOnInit(): Promise<void> {\n    this.fileContent = await this.fileService.getFileBlockContent(this.filePath(), this.section())\n  }\n}\n","<pre>\n  <code\n    [highlight]=\"fileContent\"\n    [language]=\"language()\"\n  ></code>\n</pre>\n","export function joinPaths(path: string, src: string): string {\n  // First off, remove the origin path so we can handle relative paths\n  const originPath = window.location.origin + window.location.pathname\n  if (src.includes(originPath)) {\n    src = src.replace(originPath, '')\n    if (!src.startsWith('/')) {\n      src = `/${src}`\n    }\n  }\n\n  let srcFolder = src.split('/').slice(0, -1).join('/')\n\n  // For each ../ in the path, remove a folder from the srcFolder\n  // If I have devcrate/ngx-dc-navbar and the path is ../../../src/main.ts, I should have /main.ts\n  // so if I have an extra ../src when its already \"\" for the src folder, then it should remove ../src\n  path = path.replace('../src/', '')\n\n  const pathParts = path.split('/')\n  if (pathParts.includes('..')) {\n    for (const p of pathParts) {\n      if (p === '..') {\n        // Remove the next folder\n        srcFolder = srcFolder.split('/').slice(0, -1).join('/')\n        // Remove the ../\n        path = path.split('/').filter((_, i) => i != 0).join('/')\n        continue\n      }\n\n      if (p == '.') {\n        // Remove the ./\n        path = path.split('/').filter((_, i) => i != 0).join('/')\n        // Do nothing since ./ does nothing\n        continue\n      }\n\n      if (srcFolder != \"\") {\n        const isExtensionFile = p.includes('.')\n        if (!isExtensionFile) {\n          if (srcFolder && p != srcFolder.split('/')[0]) {\n            srcFolder += (!p.startsWith(\"/\") ? `/${p}` : p)\n          }\n          if (path?.startsWith(p)) {\n            path = path.split('/').filter((_, i) => i != 0).join('/')\n          }\n        }\n      }\n    }\n  } else if (path.startsWith('./')) {\n    // This is a local path from the src folder\n    path = path.replace('.', '')\n  }\n\n  if (srcFolder.startsWith('/')) {\n    srcFolder = path.startsWith('/') ? srcFolder + path : srcFolder + \"/\" + path\n  } else {\n    srcFolder = path.startsWith('/') ? '/' + srcFolder + \"/\" + path : '/' + srcFolder + path\n  }\n\n  if (srcFolder.includes('/public/')) {\n    srcFolder = srcFolder.split('/public')[1]\n  }\n\n  if (srcFolder.includes('/projects/')) {\n    srcFolder = srcFolder.split('/projects')[1]\n  }\n  while (srcFolder.includes('//')) {\n    // Ensure there are no extra // - replace with /\n    srcFolder = srcFolder.replace(/\\/\\//g, '/')\n  }\n  console.log('srcFolder', srcFolder)\n\n  // NOTE: This only works for SPA that use the hash for routing\n  srcFolder = window.location.origin.includes('localhost') ? srcFolder : `${originPath}/${srcFolder}`\n  return srcFolder\n}\n","import { AfterContentInit, Directive, Input, OnDestroy, inject, output } from \"@angular/core\";\nimport { DestroyObservable } from \"@devcrate/ngx-dc-utils\";\nimport { MarkdownComponent } from \"ngx-markdown\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { joinPaths } from \"./ngx-markdown-open-modal-on-file-links.utils\";\n\n@Directive({\n  selector: 'markdown[ngxMarkdownOnLinkClick]',\n  standalone: true,\n})\nexport class NgxMarkdownOnLinkClick extends DestroyObservable implements OnDestroy, AfterContentInit {\n  cmp = inject(MarkdownComponent);\n\n  public readonly onLinkClick = output<{ name: string, path: string }>({ alias: 'ngxMarkdownOnLinkClick' });\n\n  constructor() {\n    super()\n  }\n\n  public ngOnDestroy() {\n    this.onDestroy()\n  }\n\n  public joinPaths(path: string): string {\n    return joinPaths(path, this.cmp.src)\n  }\n\n  public ngAfterContentInit() {\n    this.cmp.load.pipe(takeUntil(this.destroy$)).subscribe(value => {\n      // Add ids to headings\n      const headings = this.cmp.element.nativeElement.querySelectorAll(\"h1, h2, h3, h4, h5, h6\")\n      for (const heading of Array.from(headings)) {\n        const headingName = heading.textContent.replace(/[-',_]/g, '').replace(/\\s/g, '-').toLowerCase()\n        heading.id = headingName\n      }\n      // Listen for a tags\n      const aChildren = this.cmp.element.nativeElement.querySelectorAll('a')\n      for (const aElement of Array.from(aChildren)) {\n\n        aElement.style.cursor = 'pointer'\n\n        aElement.addEventListener('click', e => {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          e.stopPropagation()\n          const link = aElement.attributes[\"href\"].nodeValue\n          if (link.startsWith('#')) {\n            // Scroll to element\n            const headingId = link\n            const heading = this.cmp.element.nativeElement.querySelector(headingId)\n            if (!heading) { console.log(\"Cannot find link to scroll to\") }\n            heading?.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start',\n              inline: 'start',\n            })\n            return\n          }\n          if ((!link.startsWith('http') || link.startsWith(window.location.origin)) && link.includes('#')) {\n            let [path, name] = link.split('#') as string[]\n            const resultPath = this.joinPaths(path)\n            this.onLinkClick.emit({name, path: resultPath})\n            return\n          }\n\n          // Otherwise, open the link in a new tab\n          window.open(link, '_blank')\n        })\n      }\n    })\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgxDcDemoCardComponent} from './demo-card.component';\nimport {DemoFileViewerComponent} from \"./demo-file-viewer/demo-file-viewer.component\";\nimport {\n  NgxDcDemoCardButtonsDirective, NgxDcDemoCardExampleDirective, NgxDcDemoCardExampleTitleDirective,\n  NgxDcDemoCardSubtitleDirective,\n  NgxDcDemoCardTitleDirective, NgxDcDemoTabsDirective\n} from \"./demo-card.directives\";\nimport { NgxMarkdownOnLinkClick } from './ngx-markdown-open-modal-on-file-links.directive';\n\nexport const COMPONENT_IMPORTS = [\n  NgxDcDemoCardComponent,\n  DemoFileViewerComponent,\n  NgxDcDemoCardTitleDirective,\n  NgxDcDemoCardSubtitleDirective,\n  NgxDcDemoCardButtonsDirective,\n  NgxDcDemoCardExampleDirective,\n  NgxDcDemoTabsDirective,\n  NgxDcDemoCardExampleTitleDirective,\n  NgxMarkdownOnLinkClick,\n]\n\n@NgModule({\n  imports: COMPONENT_IMPORTS,\n  exports: COMPONENT_IMPORTS,\n  declarations: [],\n  providers: [],\n})\nexport class NgxDcDemoCardModule {\n}\n","import { Component, OnInit, ViewEncapsulation, inject } from '@angular/core';\nimport {NgxDcModalService} from \"@devcrate/ngx-dc-utils\";\nimport {MAT_DIALOG_DATA, MatDialogModule} from \"@angular/material/dialog\";\nimport {DialogRef} from \"@angular/cdk/dialog\";\nimport {MarkdownModule} from \"ngx-markdown\";\nimport {MatButton, MatIconButton} from \"@angular/material/button\";\nimport {MatIcon} from \"@angular/material/icon\";\nimport { NgxMarkdownOnLinkClick } from '../ngx-markdown-open-modal-on-file-links.directive';\n\nexport interface CodeModalData {\n  title: string\n  path: string\n  previousTitles: string[]\n  previousPaths: string[]\n}\n\n@Component({\n    selector: 'code-modal',\n    templateUrl: 'code-modal.component.html',\n    styleUrl: 'code-modal.component.scss',\n    encapsulation: ViewEncapsulation.None,\n    imports: [\n        MarkdownModule,\n        NgxMarkdownOnLinkClick,\n        MatDialogModule,\n        MatButton,\n        MatIconButton,\n        MatIcon,\n    ]\n})\n\nexport class CodeModalComponent {\n  private modalService = inject(NgxDcModalService);\n  private dialogRef = inject<DialogRef<CodeModalComponent>>(DialogRef);\n  public data = inject<CodeModalData>(MAT_DIALOG_DATA);\n\n  public async showModal(hashName: string, path: string) {\n    this.dialogRef.close()\n    await this.modalService.showModal<CodeModalData>(CodeModalComponent, {\n      data: {\n        title: hashName,\n        path: path,\n        previousTitles: [...this.data.previousTitles, this.data.title],\n        previousPaths: [...this.data.previousPaths, this.data.path],\n      },\n      width: '80vw',\n      height: '80vh',\n    })\n  }\n\n  public async showPreviousModal() {\n    this.dialogRef.close()\n    await this.modalService.showModal<CodeModalData>(CodeModalComponent, {\n      data: {\n        title: this.data.previousTitles[this.data.previousTitles.length - 1],\n        path: this.data.previousPaths[this.data.previousPaths.length - 1],\n        previousTitles: this.data.previousTitles.slice(0, -1),\n        previousPaths: this.data.previousPaths.slice(0, -1),\n      },\n      width: '80vw',\n      height: '80vh',\n    })\n  }\n}\n","<div mat-dialog-title class=\"w-100\">\n  @if (data.previousTitles.length) {\n    <button mat-raised-button (click)=\"showPreviousModal()\">Previous</button>\n  }\n  <div class=\"flex align-items-center w-100\">\n    <span>Documentation</span>\n    <span class=\"fill\"></span>\n    <button mat-icon-button mat-dialog-close><mat-icon>close</mat-icon></button>\n  </div>\n</div>\n<div mat-dialog-content>\n  <markdown\n    (ngxMarkdownOnLinkClick)=\"showModal($event.name, $event.path)\"\n    [src]=\"data.path\"\n  ></markdown>\n</div>\n","/*\n * Public API Surface of ngx-dc-demo-card\n */\n\nexport * from './lib/demo-card.component';\nexport * from './lib/demo-card.module';\nexport * from './lib/demo-card.directives';\nexport * from './lib/file.service'\nexport * from './lib/demo-file-viewer/demo-file-viewer.component'\nexport * from './lib/ngx-markdown-open-modal-on-file-links.directive'\nexport * from './lib/ngx-markdown-open-modal-on-file-links.utils'\nexport * from './lib/code-modal/code-modal.component'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"mappings":"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","names":["_c0","MAT_CARD_CONFIG","InjectionToken","MatCard","config","inject","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","ɵɵclassProp","_c0","ɵɵprojectionDef","ɵɵprojection","MatCardTitle","ɵɵdefineDirective","MatCardSubtitle","__ngFactoryType__","ɵɵdefineDirective","MatCardModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","SingleBoxSharedResizeObserver","Subject","_box","entries","target","Observable","observer","subscription","filter","entry","shareReplay","takeUntil","SharedResizeObserver","inject","NgZone","options","box","__ngFactoryType__","ɵɵdefineInjectable","_c0","MatTab_ng_template_0_Template","rf","ctx","ɵɵprojection","_c1","_c2","_c3","_c4","_c5","_c6","MatTabBody_ng_template_2_Template","_c7","_c8","MatTabGroup_For_3_Conditional_6_ng_template_0_Template","MatTabGroup_For_3_Conditional_6_Template","ɵɵtemplate","tab_r4","ɵɵnextContext","ɵɵproperty","MatTabGroup_For_3_Conditional_7_Template","ɵɵtext","ɵɵtextInterpolate","MatTabGroup_For_3_Template","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ctx_r2","ɵɵrestoreView","$index_r5","ctx_r5","tabHeader_r7","ɵɵreference","ɵɵresetView","$event","ɵɵelement","ɵɵconditionalCreate","ɵɵelementEnd","tabNode_r8","ɵɵclassMap","ɵɵclassProp","ɵɵattribute","ɵɵadvance","ɵɵconditional","MatTabGroup_Conditional_4_Template","MatTabGroup_For_8_Template","_r9","tab_r10","$index_r11","MAT_TAB_CONTENT","InjectionToken","MatTabContent","inject","TemplateRef","__ngFactoryType__","ɵɵdefineDirective","ɵɵProvidersFeature","MAT_TAB_LABEL","MAT_TAB","MatTabLabel","CdkPortal","ɵMatTabLabel_BaseFactory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","MAT_TAB_GROUP","MatTab","ViewContainerRef","value","Subject","_CdkPrivateStyleLoader","_StructuralStylesLoader","changes","TemplatePortal","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","ɵɵattribute","booleanAttribute","ɵɵNgOnChangesFeature","_c0","ɵɵprojectionDef","ɵɵdomTemplate","MatTab_ng_template_0_Template","ACTIVE_CLASS","NO_TRANSITION_CLASS","MatInkBar","_items","item","element","correspondingItem","currentItem","domRect","InkBarItem","ElementRef","newValue","previousIndicatorClientRect","currentClientRect","widthDelta","xPosition","documentNode","inkBarElement","inkBarContentElement","parentElement","MatTabLabelWrapper","InkBarItem","inject","ElementRef","ɵMatTabLabelWrapper_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","rf","ctx","ɵɵattribute","ɵɵclassProp","booleanAttribute","ɵɵInheritDefinitionFeature","passiveEventListenerOptions","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","ChangeDetectorRef","ViewportRuler","Directionality","NgZone","Platform","SharedResizeObserver","Injector","Renderer2","_animationsDisabled","Subject","v","value","EventEmitter","dirChange","of","resize","debounceTime","takeUntil","viewportResize","realign","FocusKeyManager","afterNextRender","merge","newFocusIndex","EMPTY","startWith","switchMap","tabItems","Observable","observer","resizeObserver","entries","item","skip","filter","cleanup","event","hasModifierKey","textContent","index","tabIndex","containerEl","scrollDistance","translateX","direction","viewLength","scrollAmount","labelIndex","selectedLabel","offsetLeft","offsetWidth","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","scrollWidth","containerWidth","isEnabled","lengthOfTabList","selectedItem","selectedLabelWrapper","mouseEvent","timer","maxScrollDistance","distance","position","numberAttribute","MatTabHeader","MatInkBar","ɵMatTabHeader_BaseFactory","ɵɵdefineComponent","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c1","_c2","_c3","_c4","_c5","_c0","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","ɵɵresetView","$event","ɵɵelement","ɵɵelementEnd","ɵɵprojection","ɵɵproperty","ɵɵadvance","MatRipple","CdkObserveContent","MAT_TABS_CONFIG","InjectionToken","MatTabBodyPortal","CdkPortalOutlet","MatTabBody","Subscription","isCentering","changeDetectorRef","dir","element","transitionDone","isActive","_c6","ɵɵtemplate","MatTabBody_ng_template_2_Template","CdkScrollable","MatTabGroup","QueryList","stringValue","classList","defaultConfig","_IdGenerator","indexToSelect","isFirstRun","wrapper","tab","tabs","selectedTab","i","header","MatTabChangeEvent","tabHeight","tabHeader","targetIndex","focusOrigin","isCenter","body","MatTab","_c7","_c8","ɵɵclassMap","ɵɵstyleProp","ɵɵProvidersFeature","MAT_TAB_GROUP","ɵɵrepeaterCreate","MatTabGroup_For_3_Template","ɵɵrepeaterTrackByIdentity","ɵɵconditionalCreate","MatTabGroup_Conditional_4_Template","MatTabGroup_For_8_Template","ɵɵariaProperty","ɵɵrepeater","ɵɵconditional","CdkMonitorFocus","MatTabsModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","NgxDcDemoCardComponent_ng_container_6_Template","rf","ctx","NgxDcDemoCardComponent_Conditional_8_Template","_r1","ɵɵgetCurrentView","ctx_r1","demoTabsTemplate","showCode","NgxDcDemoCardComponent_Conditional_9_Template","NgxDcDemoCardComponent_Conditional_10_ng_container_0_Template","NgxDcDemoCardComponent_Conditional_10_Template","tmp_1_0","ɵɵnextContext","NgxDcDemoCardComponent_Conditional_12_ng_container_1_Template","NgxDcDemoCardComponent_Conditional_12_Template","NgxDcDemoCardComponent_ng_container_14_Template","CodeModalComponent_Conditional_1_Template","showPreviousModal","NgxDcDemoTabsDirective","_showCode","c","display","_code","selectors","hostVars","hostBindings","exportAs","NgxDcDemoCardExampleDirective","templateRef","inject","TemplateRef","NgxDcDemoCardButtonsDirective","NgxDcDemoCardSubtitleDirective","NgxDcDemoCardTitleDirective","NgxDcDemoCardExampleTitleDirective","NgxDcDemoCardComponent","title","input","subtitle","showLinkIcon","required","showCodeIcon","titleTemplate","contentChild","subtitleTemplate","buttonsTemplate","exampleTemplate","exampleTitleTemplate","contentQueries","dirIndex","tmp_0_0","tmp_4_0","tmp_5_0","tmp_6_0","dependencies","NgTemplateOutlet","HighlightModule","MatTabsModule","MatIconButton","MatIconModule","MatIcon","MatCardModule","MatCard","MatCardSubtitle","MatCardTitle","styles","encapsulation","FileService","http","HttpClient","sanitizer","DomSanitizer","getFileBlockContent","filePath","section","__async","startMarker","endMarker","firstValueFrom","get","responseType","pipe","map","content","startIdx","indexOf","endIdx","length","substring","trim","escapeHtml","replace","ɵprov","ɵɵdefineInjectable","factory","ɵfac","providedIn","DemoFileViewerComponent","fileService","language","fileContent","ngOnInit","inputs","decls","vars","consts","template","Highlight","joinPaths","path","src","originPath","window","location","origin","pathname","includes","startsWith","srcFolder","split","slice","join","pathParts","p","filter","_","i","console","log","NgxMarkdownOnLinkClick","DestroyObservable","cmp","MarkdownComponent","onLinkClick","output","alias","constructor","ngOnDestroy","onDestroy","ngAfterContentInit","load","takeUntil","destroy$","subscribe","value","headings","element","nativeElement","querySelectorAll","heading","Array","from","headingName","textContent","toLowerCase","id","aChildren","aElement","style","cursor","addEventListener","e","preventDefault","stopImmediatePropagation","stopPropagation","link","attributes","nodeValue","headingId","querySelector","scrollIntoView","behavior","block","inline","name","resultPath","emit","open","outputs","features","ɵɵInheritDefinitionFeature","NgxDcDemoCardModule","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","NgxDcDemoCardComponent","DemoFileViewerComponent","CodeModalComponent","modalService","inject","NgxDcModalService","dialogRef","DialogRef","data","MAT_DIALOG_DATA","showModal","hashName","path","__async","close","title","previousTitles","previousPaths","width","height","showPreviousModal","length","slice","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","rf","ctx","$event","name","dependencies","MarkdownModule","MarkdownComponent","NgxMarkdownOnLinkClick","MatDialogModule","MatDialogClose","MatDialogTitle","MatDialogContent","MatButton","MatIconButton","MatIcon","styles","encapsulation"],"x_google_ignoreList":[0,1,2]}