{"version":3,"sources":["src/app/links.ts","src/app/app.routes.ts","node_modules/@angular/platform-browser/fesm2022/animations/async.mjs","src/app/app.config.ts","src/app/root.component.ts","src/main.ts"],"sourcesContent":["import {NgxDcNavbarLinkInfo} from \"@devcrate/ngx-dc-navbar\";\n\nexport const COMPONENTS_LINKS = <NgxDcNavbarLinkInfo[]>[\n  {\n    type: 'link',\n    path: \"/training/\",\n    title: \"Training\",\n    icon: \"first_page\",\n  },\n  {\n    type: 'link',\n    path: \"/packages/\",\n    title: \"Node Libraries\",\n    icon: \"first_page\",\n  },\n  {\n    type: 'heading',\n    title: 'Components',\n  },\n  {\n    type: 'link',\n    path: \"/components/navbar\",\n    title: \"Navbar\",\n    icon: \"side_navigation\",\n  },\n  {\n    type: 'link',\n    path: \"/components/side-pane-list\",\n    title: \"Side Pane List\",\n    icon: \"table_rows\",\n  },\n  {\n    type: 'link',\n    path: \"/components/dropdown\",\n    title: \"Dropdown\",\n    icon: \"dropdown\",\n  },\n  {\n    type: 'link',\n    path: \"/components/mat-select-data-source\",\n    title: \"Mat Select Data Source\",\n    icon: \"dropdown\",\n  },\n  {\n    type: 'link',\n    path: \"/components/file-viewer\",\n    title: \"File Viewer\",\n    icon: \"picture_as_pdf\",\n  },\n  {\n    type: 'link',\n    path: \"/components/upload-file-button\",\n    title: \"Upload File Button\",\n    icon: \"upload_file\",\n  },\n  {\n    type: 'link',\n    path: \"/components/demo-card\",\n    title: \"Demo Card\",\n    icon: \"integration_instructions\",\n  },\n  {\n    type: 'heading',\n    title: 'Utils',\n  },\n  {\n    type: 'link',\n    path: \"/components/data-sources\",\n    title: \"Data Sources\",\n    icon: \"storage\",\n  },\n  {\n    type: 'link',\n    path: \"/components/role-authorized\",\n    title: \"Role Authorized\",\n    icon: \"engineering\",\n  },\n  {\n    type: 'link',\n    path: \"/components/modal-service\",\n    title: \"Modal Service\",\n    icon: \"launch\",\n  },\n  {\n    type: 'link',\n    path: \"/components/file-service\",\n    title: \"File Service\",\n    icon: \"article\",\n  },\n  {\n    type: 'link',\n    path: \"/components/destroy-observable\",\n    title: \"Destroy Observable\",\n    icon: \"auto_delete\",\n  },\n  {\n    type: 'heading',\n    title: 'Styles',\n  },\n  {\n    type: 'link',\n    path: \"/components/material-styling\",\n    title: \"Material Styling\",\n    icon: \"format_color_fill\",\n  },\n]\n\nexport const PACKAGE_LINKS: NgxDcNavbarLinkInfo[] = [\n  {\n    type: 'link',\n    path: \"/components\",\n    title: \"Components\",\n    icon: \"first_page\",\n  },\n  {\n    type: 'link',\n    path: \"/training/\",\n    title: \"Training\",\n    icon: \"first_page\",\n  },\n  {\n    type: 'heading',\n    title: 'Node Packages',\n  },\n  {\n    type: 'link',\n    path: \"/packages/eslint-config\",\n    title: \"ESLint Config\",\n    icon: \"storage\",\n  },\n  {\n    type: 'link',\n    path: \"/packages/playwright\",\n    title: \"Playwright Utils\",\n    icon: \"storage\",\n  },\n  {\n    type: 'link',\n    path: \"/packages/node-utils\",\n    title: \"Node Utilities\",\n    icon: \"storage\",\n  },\n]\n\nexport const TRAINING_LINKS: NgxDcNavbarLinkInfo[] = [\n  {\n    type: 'link',\n    path: \"/components/\",\n    title: \"Components\",\n    icon: \"first_page\",\n  },\n  {\n    type: 'link',\n    path: \"/packages/\",\n    title: \"Node Libraries\",\n    icon: \"first_page\",\n  },\n  {\n    type: 'heading',\n    title: 'Angular Training',\n  },\n  {\n    type: 'link',\n    path: \"/training/basics\",\n    title: \"Angular Basics\",\n    icon: \"school\",\n  },\n  {\n    type: 'link',\n    path: \"/training/advanced\",\n    title: \"Advanced Angular\",\n    icon: \"school\",\n  },\n  {\n    type: 'link',\n    path: \"/training/structural-directives\",\n    title: \"Structural Directives\",\n    icon: \"school\",\n  },\n]\n\n","import { Routes } from \"@angular/router\";\nimport { provideNgxDcNavbarLinksConfig } from \"@devcrate/ngx-dc-navbar\";\n\nimport { COMPONENTS_LINKS, PACKAGE_LINKS, TRAINING_LINKS } from \"./links\";\n\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: 'components',\n    pathMatch: 'full',\n  },\n  {\n    path: 'components',\n    loadComponent: () => import('./app.component').then(m => m.AppComponent),\n    providers: [provideNgxDcNavbarLinksConfig(COMPONENTS_LINKS)],\n    canActivate: [],\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./components.routes').then(m => m.COMPONENTS_ROUTES),\n      },\n    ],\n  },\n  {\n    path: 'packages',\n    loadComponent: () => import('./app.component').then(m => m.AppComponent),\n    providers: [provideNgxDcNavbarLinksConfig(PACKAGE_LINKS)],\n    canActivate: [],\n    loadChildren: () => import('./packages.routes').then(p => p.PACKAGE_ROUTES),\n  },\n  {\n    path: 'training',\n    loadComponent: () => import('./app.component').then(m => m.AppComponent),\n    providers: [provideNgxDcNavbarLinksConfig(TRAINING_LINKS)],\n    canActivate: [],\n    loadChildren: () => import('./training.routes').then(p => p.TRAINING_ROUTES),\n  },\n]\n","/**\n * @license Angular v20.3.6\n * (c) 2010-2025 Google LLC. https://angular.dev/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injector, ɵRuntimeError as _RuntimeError, ɵChangeDetectionScheduler as _ChangeDetectionScheduler, Injectable, InjectionToken, ɵperformanceMarkFeature as _performanceMarkFeature, makeEnvironmentProviders, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { DomRendererFactory2 } from '../dom_renderer.mjs';\nconst ANIMATION_PREFIX = '@';\nlet AsyncAnimationRendererFactory = /*#__PURE__*/(() => {\n  class AsyncAnimationRendererFactory {\n    doc;\n    delegate;\n    zone;\n    animationType;\n    moduleImpl;\n    _rendererFactoryPromise = null;\n    scheduler = null;\n    injector = inject(Injector);\n    loadingSchedulerFn = inject(ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, {\n      optional: true\n    });\n    _engine;\n    /**\n     *\n     * @param moduleImpl allows to provide a mock implmentation (or will load the animation module)\n     */\n    constructor(doc, delegate, zone, animationType, moduleImpl) {\n      this.doc = doc;\n      this.delegate = delegate;\n      this.zone = zone;\n      this.animationType = animationType;\n      this.moduleImpl = moduleImpl;\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n      // When the root view is removed, the renderer defers the actual work to the\n      // `TransitionAnimationEngine` to do this, and the `TransitionAnimationEngine` doesn't actually\n      // remove the DOM node, but just calls `markElementAsRemoved()`. The actual DOM node is not\n      // removed until `TransitionAnimationEngine` \"flushes\".\n      // Note: we already flush on destroy within the `InjectableAnimationEngine`. The injectable\n      // engine is not provided when async animations are used.\n      this._engine?.flush();\n    }\n    /**\n     * @internal\n     */\n    loadImpl() {\n      // Note on the `.then(m => m)` part below: Closure compiler optimizations in g3 require\n      // `.then` to be present for a dynamic import (or an import should be `await`ed) to detect\n      // the set of imported symbols.\n      const loadFn = () => this.moduleImpl ?? import('@angular/animations/browser').then(m => m);\n      let moduleImplPromise;\n      if (this.loadingSchedulerFn) {\n        moduleImplPromise = this.loadingSchedulerFn(loadFn);\n      } else {\n        moduleImplPromise = loadFn();\n      }\n      return moduleImplPromise.catch(e => {\n        throw new _RuntimeError(5300 /* RuntimeErrorCode.ANIMATION_RENDERER_ASYNC_LOADING_FAILURE */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Async loading for animations package was ' + 'enabled, but loading failed. Angular falls back to using regular rendering. ' + \"No animations will be displayed and their styles won't be applied.\");\n      }).then(({\n        ɵcreateEngine,\n        ɵAnimationRendererFactory\n      }) => {\n        // We can't create the renderer yet because we might need the hostElement and the type\n        // Both are provided in createRenderer().\n        this._engine = ɵcreateEngine(this.animationType, this.doc);\n        const rendererFactory = new ɵAnimationRendererFactory(this.delegate, this._engine, this.zone);\n        this.delegate = rendererFactory;\n        return rendererFactory;\n      });\n    }\n    /**\n     * This method is delegating the renderer creation to the factories.\n     * It uses default factory while the animation factory isn't loaded\n     * and will rely on the animation factory once it is loaded.\n     *\n     * Calling this method will trigger as side effect the loading of the animation module\n     * if the renderered component uses animations.\n     */\n    createRenderer(hostElement, rendererType) {\n      const renderer = this.delegate.createRenderer(hostElement, rendererType);\n      if (renderer.ɵtype === 0 /* AnimationRendererType.Regular */) {\n        // The factory is already loaded, this is an animation renderer\n        return renderer;\n      }\n      // We need to prevent the DomRenderer to throw an error because of synthetic properties\n      if (typeof renderer.throwOnSyntheticProps === 'boolean') {\n        renderer.throwOnSyntheticProps = false;\n      }\n      // Using a dynamic renderer to switch the renderer implementation once the module is loaded.\n      const dynamicRenderer = new DynamicDelegationRenderer(renderer);\n      // Kick off the module loading if the component uses animations but the module hasn't been\n      // loaded yet.\n      if (rendererType?.data?.['animation'] && !this._rendererFactoryPromise) {\n        this._rendererFactoryPromise = this.loadImpl();\n      }\n      this._rendererFactoryPromise?.then(animationRendererFactory => {\n        const animationRenderer = animationRendererFactory.createRenderer(hostElement, rendererType);\n        dynamicRenderer.use(animationRenderer);\n        this.scheduler ??= this.injector.get(_ChangeDetectionScheduler, null, {\n          optional: true\n        });\n        this.scheduler?.notify(10 /* NotificationSource.AsyncAnimationsLoaded */);\n      }).catch(e => {\n        // Permanently use regular renderer when loading fails.\n        dynamicRenderer.use(renderer);\n      });\n      return dynamicRenderer;\n    }\n    begin() {\n      this.delegate.begin?.();\n    }\n    end() {\n      this.delegate.end?.();\n    }\n    whenRenderingDone() {\n      return this.delegate.whenRenderingDone?.() ?? Promise.resolve();\n    }\n    /**\n     * Used during HMR to clear any cached data about a component.\n     * @param componentId ID of the component that is being replaced.\n     */\n    componentReplaced(componentId) {\n      // Flush the engine since the renderer destruction waits for animations to be done.\n      this._engine?.flush();\n      this.delegate.componentReplaced?.(componentId);\n    }\n    static ɵfac = function AsyncAnimationRendererFactory_Factory(__ngFactoryType__) {\n      i0.ɵɵinvalidFactory();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AsyncAnimationRendererFactory,\n      factory: AsyncAnimationRendererFactory.ɵfac\n    });\n  }\n  return AsyncAnimationRendererFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The class allows to dynamicly switch between different renderer implementations\n * by changing the delegate renderer.\n */\nclass DynamicDelegationRenderer {\n  delegate;\n  // List of callbacks that need to be replayed on the animation renderer once its loaded\n  replay = [];\n  ɵtype = 1 /* AnimationRendererType.Delegated */;\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  use(impl) {\n    this.delegate = impl;\n    if (this.replay !== null) {\n      // Replay queued actions using the animation renderer to apply\n      // all events and properties collected while loading was in progress.\n      for (const fn of this.replay) {\n        fn(impl);\n      }\n      // Set to `null` to indicate that the queue was processed\n      // and we no longer need to collect events and properties.\n      this.replay = null;\n    }\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroy() {\n    this.replay = null;\n    this.delegate.destroy();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  get destroyNode() {\n    return this.delegate.destroyNode;\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n  }\n  insertBefore(parent, newChild, refChild, isMove) {\n    this.delegate.insertBefore(parent, newChild, refChild, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.delegate.removeChild(parent, oldChild, isHostElement);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    // We need to keep track of animation properties set on default renderer\n    // So we can also set them also on the animation renderer\n    if (this.shouldReplay(name)) {\n      this.replay.push(renderer => renderer.setProperty(el, name, value));\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback, options) {\n    // We need to keep track of animation events registred by the default renderer\n    // So we can also register them against the animation renderer\n    if (this.shouldReplay(eventName)) {\n      this.replay.push(renderer => renderer.listen(target, eventName, callback, options));\n    }\n    return this.delegate.listen(target, eventName, callback, options);\n  }\n  shouldReplay(propOrEventName) {\n    //`null` indicates that we no longer need to collect events and properties\n    return this.replay !== null && propOrEventName.startsWith(ANIMATION_PREFIX);\n  }\n}\n/**\n * Provides a custom scheduler function for the async loading of the animation package.\n *\n * Private token for investigation purposes\n */\nconst ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN = /*#__PURE__*/new InjectionToken(ngDevMode ? 'async_animation_loading_scheduler_fn' : '');\n\n/**\n * Returns the set of dependency-injection providers\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * When you use this function instead of the eager `provideAnimations()`, animations won't be\n * rendered until the renderer is loaded.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```ts\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimationsAsync()\n *   ]\n * });\n * ```\n *\n * @param type pass `'noop'` as argument to disable animations.\n *\n * @publicApi\n *\n * @deprecated 20.2 Use `animate.enter` or `animate.leave` instead. Intent to remove in v23\n */\nfunction provideAnimationsAsync(type = 'animations') {\n  _performanceMarkFeature('NgAsyncAnimations');\n  // Animations don't work on the server so we switch them over to no-op automatically.\n  if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n    type = 'noop';\n  }\n  return makeEnvironmentProviders([{\n    provide: RendererFactory2,\n    useFactory: (doc, renderer, zone) => {\n      return new AsyncAnimationRendererFactory(doc, renderer, zone, type);\n    },\n    deps: [DOCUMENT, DomRendererFactory2, NgZone]\n  }, {\n    provide: ANIMATION_MODULE_TYPE,\n    useValue: type === 'noop' ? 'NoopAnimations' : 'BrowserAnimations'\n  }]);\n}\nexport { provideAnimationsAsync, ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, AsyncAnimationRendererFactory as ɵAsyncAnimationRendererFactory };\n","import {ApplicationConfig, provideZoneChangeDetection} from '@angular/core';\nimport {provideRouter, withHashLocation} from '@angular/router';\n\nimport {APP_ROUTES} from './app.routes';\nimport {provideAnimationsAsync} from '@angular/platform-browser/animations/async';\nimport {HttpClient, provideHttpClient, withInterceptorsFromDi} from \"@angular/common/http\";\nimport {provideHighlightOptions} from \"ngx-highlightjs\";\nimport {provideNgxDcNavbarService} from \"@devcrate/ngx-dc-navbar\";\nimport {MARKED_OPTIONS, MarkedOptions, provideMarkdown} from 'ngx-markdown';\nimport { NgxDcModalService, NgxDcModalServiceToken } from '@devcrate/ngx-dc-utils';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideHttpClient(withInterceptorsFromDi()),\n\n    provideMarkdown({\n      loader: HttpClient,\n      markedOptions: {\n        provide: MARKED_OPTIONS,\n        useValue: <MarkedOptions>{\n          gfm: true,\n          breaks: true,\n          pedantic: false,\n        },\n      },\n    }),\n    provideNgxDcNavbarService(),\n    NgxDcModalService,\n    { provide: NgxDcModalServiceToken, useClass: NgxDcModalService },\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideAnimationsAsync(),\n    provideRouter(APP_ROUTES, withHashLocation()),\n    provideHighlightOptions({\n      fullLibraryLoader: () => import('highlight.js')\n    }),\n  ]\n};\n","import {Component} from '@angular/core';\nimport {RouterOutlet} from \"@angular/router\";\n\n@Component({\n    selector: 'app-root',\n    imports: [\n        RouterOutlet\n    ],\n    template: '<router-outlet></router-outlet>'\n})\nexport class RootComponent {}\n","import { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport {RootComponent} from \"./app/root.component\";\n\nbootstrapApplication(RootComponent, appConfig)\n  .catch((err) => console.error(err));\n"],"mappings":"qhBAEO,IAAMA,EAA0C,CACrD,CACEC,KAAM,OACNC,KAAM,aACNC,MAAO,WACPC,KAAM,cAER,CACEH,KAAM,OACNC,KAAM,aACNC,MAAO,iBACPC,KAAM,cAER,CACEH,KAAM,UACNE,MAAO,cAET,CACEF,KAAM,OACNC,KAAM,qBACNC,MAAO,SACPC,KAAM,mBAER,CACEH,KAAM,OACNC,KAAM,6BACNC,MAAO,iBACPC,KAAM,cAER,CACEH,KAAM,OACNC,KAAM,uBACNC,MAAO,WACPC,KAAM,YAER,CACEH,KAAM,OACNC,KAAM,qCACNC,MAAO,yBACPC,KAAM,YAER,CACEH,KAAM,OACNC,KAAM,0BACNC,MAAO,cACPC,KAAM,kBAER,CACEH,KAAM,OACNC,KAAM,iCACNC,MAAO,qBACPC,KAAM,eAER,CACEH,KAAM,OACNC,KAAM,wBACNC,MAAO,YACPC,KAAM,4BAER,CACEH,KAAM,UACNE,MAAO,SAET,CACEF,KAAM,OACNC,KAAM,2BACNC,MAAO,eACPC,KAAM,WAER,CACEH,KAAM,OACNC,KAAM,8BACNC,MAAO,kBACPC,KAAM,eAER,CACEH,KAAM,OACNC,KAAM,4BACNC,MAAO,gBACPC,KAAM,UAER,CACEH,KAAM,OACNC,KAAM,2BACNC,MAAO,eACPC,KAAM,WAER,CACEH,KAAM,OACNC,KAAM,iCACNC,MAAO,qBACPC,KAAM,eAER,CACEH,KAAM,UACNE,MAAO,UAET,CACEF,KAAM,OACNC,KAAM,+BACNC,MAAO,mBACPC,KAAM,oBACP,EAGUC,EAAuC,CAClD,CACEJ,KAAM,OACNC,KAAM,cACNC,MAAO,aACPC,KAAM,cAER,CACEH,KAAM,OACNC,KAAM,aACNC,MAAO,WACPC,KAAM,cAER,CACEH,KAAM,UACNE,MAAO,iBAET,CACEF,KAAM,OACNC,KAAM,0BACNC,MAAO,gBACPC,KAAM,WAER,CACEH,KAAM,OACNC,KAAM,uBACNC,MAAO,mBACPC,KAAM,WAER,CACEH,KAAM,OACNC,KAAM,uBACNC,MAAO,iBACPC,KAAM,UACP,EAGUE,EAAwC,CACnD,CACEL,KAAM,OACNC,KA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","names":["COMPONENTS_LINKS","type","path","title","icon","PACKAGE_LINKS","TRAINING_LINKS","APP_ROUTES","path","redirectTo","pathMatch","loadComponent","then","m","AppComponent","providers","provideNgxDcNavbarLinksConfig","COMPONENTS_LINKS","canActivate","children","loadChildren","COMPONENTS_ROUTES","PACKAGE_LINKS","p","PACKAGE_ROUTES","TRAINING_LINKS","TRAINING_ROUTES","ANIMATION_PREFIX","AsyncAnimationRendererFactory","inject","Injector","ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN","doc","delegate","zone","animationType","moduleImpl","loadFn","m","moduleImplPromise","e","RuntimeError","ɵcreateEngine","ɵAnimationRendererFactory","rendererFactory","hostElement","rendererType","renderer","dynamicRenderer","DynamicDelegationRenderer","animationRendererFactory","animationRenderer","ChangeDetectionScheduler","componentId","__ngFactoryType__","ɵɵinvalidFactory","ɵɵdefineInjectable","impl","fn","name","namespace","value","parent","newChild","refChild","isMove","oldChild","isHostElement","selectorOrNode","preserveContent","node","el","style","flags","target","eventName","callback","options","propOrEventName","InjectionToken","provideAnimationsAsync","type","performanceMarkFeature","makeEnvironmentProviders","RendererFactory2","DOCUMENT","DomRendererFactory2","NgZone","ANIMATION_MODULE_TYPE","appConfig","providers","provideHttpClient","withInterceptorsFromDi","provideMarkdown","loader","HttpClient","markedOptions","provide","MARKED_OPTIONS","useValue","gfm","breaks","pedantic","provideNgxDcNavbarService","NgxDcModalService","NgxDcModalServiceToken","useClass","provideZoneChangeDetection","eventCoalescing","provideAnimationsAsync","provideRouter","APP_ROUTES","withHashLocation","provideHighlightOptions","fullLibraryLoader","RootComponent","selectors","decls","vars","template","rf","ctx","ɵɵelement","RouterOutlet","encapsulation","bootstrapApplication","RootComponent","appConfig","catch","err","console","error"],"x_google_ignoreList":[2]}