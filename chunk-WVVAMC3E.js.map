{
  "version": 3,
  "sources": ["src/app/pages/dropdown-demo/basic-dropdown/basic-dropdown.data-source.ts", "src/app/pages/dropdown-demo/basic-dropdown/basic-dropdown.component.ts", "src/app/pages/dropdown-demo/basic-dropdown/basic-dropdown.component.html", "src/app/pages/dropdown-demo/dropdown-demo.component.ts", "src/app/pages/dropdown-demo/dropdown-demo.component.html"],
  "sourcesContent": ["import {HttpClient} from \"@angular/common/http\";\nimport { Injectable, inject } from \"@angular/core\";\nimport { NgxDcDropdownApiDataSource } from \"@devcrate/ngx-dc-dropdown\";\n\nexport interface BasicModel {\n  id: number\n  name: string\n}\n\n@Injectable()\nexport class BasicDropdownDataSource extends NgxDcDropdownApiDataSource<BasicModel> {\n  public relativePath = \"https://jsonplaceholder.typicode.com/users\"\n  public rowHeight = 48\n\n  public isActiveItem(selectedItem: BasicModel, currentItem: BasicModel): boolean {\n    return selectedItem.id == currentItem.id\n  }\n\n  public trackItems(item: BasicModel) {\n    return item.id\n  }\n\n  constructor() {\n    const httpClient = inject(HttpClient);\n\n    super(httpClient)\n  }\n}\n", "import { JsonPipe } from \"@angular/common\";\nimport { Component, OnInit, inject } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport {NgxDcDropdownModule } from \"@devcrate/ngx-dc-dropdown\";\nimport { BasicDropdownDataSource } from \"./basic-dropdown.data-source\";\n\n@Component({\n    selector: 'basic-dropdown',\n    templateUrl: './basic-dropdown.component.html',\n    styleUrl: './basic-dropdown.component.scss',\n    imports: [\n        JsonPipe,\n        NgxDcDropdownModule,\n        MatSelectModule,\n        FormsModule,\n    ],\n    providers: [BasicDropdownDataSource]\n})\n\nexport class BasicDropdownComponent implements OnInit {\n  dataSource = inject(BasicDropdownDataSource);\n\n  public async ngOnInit() {\n    await this.dataSource.initialize()\n  }\n}\n", "<h3>Basic Dropdown</h3>\n<ngx-dc-dropdown [dataSource]=\"dataSource\" appearance=\"rounded-outline\">\n  <ng-container *ngxDcDropdownHeader=\"let selectedItem\">\n    {{ selectedItem?.name }}\n  </ng-container>\n  <ng-container *ngxDcDropdownItem=\"let item\">\n    {{ item.name }}\n  </ng-container>\n  <ng-container *ngxDcDropdownNoItems>No Items found</ng-container>\n  <ng-container *ngxDcDropdownLoading>\n      Loading...\n  </ng-container>\n</ngx-dc-dropdown>\n\n<br/>\n\n\n<h3>Basic Dropdown with infinite scrolling</h3>\n<ngx-dc-dropdown [dataSource]=\"dataSource\" [useInfiniteScrolling]=\"true\" appearance=\"rounded-outline\">\n  <ng-container *ngxDcDropdownHeader=\"let selectedItem\">\n    {{ selectedItem?.name }}\n  </ng-container>\n  <ng-container *ngxDcDropdownItem=\"let item\">\n    {{ item.name }}\n  </ng-container>\n  <ng-container *ngxDcDropdownNoItems>No Items found</ng-container>\n  <ng-container *ngxDcDropdownLoading>\n      Loading...\n  </ng-container>\n</ngx-dc-dropdown>\n\n<br/>\n\n<h3>Basic Dropdown with bottom header</h3>\n<ngx-dc-dropdown [dataSource]=\"dataSource\" appearance=\"rounded-outline\">\n  <ng-container *ngxDcDropdownOptionsHeader=\"let selectedItem\">\n    Header Item\n  </ng-container>\n  <ng-container *ngxDcDropdownHeader=\"let selectedItem\">\n    {{ selectedItem?.name }}\n  </ng-container>\n  <ng-container *ngxDcDropdownItem=\"let item\">\n    {{ item.name }}\n  </ng-container>\n  <ng-container *ngxDcDropdownNoItems>No Items found</ng-container>\n  <ng-container *ngxDcDropdownLoading>\n      Loading...\n  </ng-container>\n</ngx-dc-dropdown>\n\n<br/>\n\n<h3>Basic Dropdown with bottom header and infinite scrolling</h3>\n<ngx-dc-dropdown [dataSource]=\"dataSource\" [useInfiniteScrolling]=\"true\" appearance=\"rounded-outline\">\n  <ng-container *ngxDcDropdownOptionsHeader=\"let selectedItem\">\n    Header Item\n  </ng-container>\n  <ng-container *ngxDcDropdownHeader=\"let selectedItem\">\n    {{ selectedItem?.name }}\n  </ng-container>\n  <ng-container *ngxDcDropdownItem=\"let item\">\n    {{ item.name }}\n  </ng-container>\n  <ng-container *ngxDcDropdownNoItems>No Items found</ng-container>\n  <ng-container *ngxDcDropdownLoading>\n      Loading...\n  </ng-container>\n</ngx-dc-dropdown>\n\n{{ dataSource.retrievedItem.value | json }}\n", "import { Component, inject } from '@angular/core'\nimport { MatTab, MatTabGroup } from '@angular/material/tabs'\nimport {\n  CodeModalComponent,\n  CodeModalData,\n  DemoFileViewerComponent,\n  NgxDcDemoCardModule,\n} from '@devcrate/ngx-dc-demo-card'\nimport { BasicDropdownComponent } from './basic-dropdown/basic-dropdown.component'\nimport { NgxDcModalService, NgxDcModalServiceToken } from '@devcrate/ngx-dc-utils'\nimport { MatButtonModule } from '@angular/material/button'\n\n@Component({\n    selector: 'app-dropdown-demo',\n    imports: [\n        DemoFileViewerComponent,\n        MatTab,\n        MatTabGroup,\n        NgxDcDemoCardModule,\n        BasicDropdownComponent,\n        MatButtonModule,\n    ],\n    templateUrl: './dropdown-demo.component.html',\n    styleUrl: './dropdown-demo.component.scss'\n})\nexport class DropdownDemoComponent {\n  private modalService = inject(NgxDcModalService);\n\n\n  public async showModal() {\n    const originPath = window.location.origin.includes('localhost') ? '/' : window.location.origin + window.location.pathname\n\n    await this.modalService.showModal<CodeModalData>(CodeModalComponent, {\n      data: {\n        title: 'Dropdown',\n        path: `${originPath}devcrate/ngx-dc-dropdown/README.md`,\n        previousTitles: [],\n        previousPaths: [],\n      },\n      width: '80vw',\n      height: '80vh',\n    })\n  }\n}\n", "<div class=\"flex align-items-center\">\n  <h1 class=\"demo-title\">Dropdown</h1>\n  <button mat-raised-button (click)=\"showModal()\">Documentation</button>\n</div>\n\n<ngx-dc-demo-card [showCodeIcon]=\"true\" [showLinkIcon]=\"false\">\n  <ng-container *ngxDcDemoCardTitle>Basic Dropdown</ng-container>\n  <ng-container *ngxDcDemoCardSubtitle>Get data from server and display it</ng-container>\n  <mat-tab-group ngx-dc-demo-tabs>\n    <mat-tab label=\"Data Source\">\n      <ngx-dc-demo-file-viewer\n        filePath=\"app/pages/dropdown-demo/basic-dropdown/basic-dropdown.data-source.ts\"\n        language=\"jsx\"\n      ></ngx-dc-demo-file-viewer>\n    </mat-tab>\n    <mat-tab label=\"Component\">\n      <ngx-dc-demo-file-viewer\n        filePath=\"app/pages/dropdown-demo/basic-dropdown/basic-dropdown.component.ts\"\n        language=\"ts\"\n      ></ngx-dc-demo-file-viewer>\n    </mat-tab>\n    <mat-tab label=\"HTML\">\n      <ngx-dc-demo-file-viewer\n        filePath=\"app/pages/dropdown-demo/basic-dropdown/basic-dropdown.component.html\"\n        language=\"ts\"\n      ></ngx-dc-demo-file-viewer>\n    </mat-tab>\n    <mat-tab label=\"Styles\">\n      <ngx-dc-demo-file-viewer\n        filePath=\"app/pages/dropdown-demo/basic-dropdown/basic-dropdown.component.scss\"\n        language=\"scss\"\n      ></ngx-dc-demo-file-viewer>\n    </mat-tab>\n  </mat-tab-group>\n\n  <ng-container *ngxDcDemoCardExampleTitle>Live Demo</ng-container>\n  <ng-container *ngxDcDemoCardExample>\n    <basic-dropdown></basic-dropdown>\n  </ng-container>\n</ngx-dc-demo-card>\n\n"],
  "mappings": "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",
  "names": ["BasicDropdownDataSource", "NgxDcDropdownApiDataSource", "relativePath", "rowHeight", "isActiveItem", "selectedItem", "currentItem", "id", "trackItems", "item", "constructor", "httpClient", "inject", "HttpClient", "factory", "\u0275fac", "\u0275\u0275elementContainerStart", "\u0275\u0275text", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "selectedItem_r1", "name", "item_r2", "selectedItem_r3", "item_r4", "selectedItem_r5", "item_r6", "selectedItem_r7", "item_r8", "BasicDropdownComponent", "dataSource", "inject", "BasicDropdownDataSource", "ngOnInit", "__async", "initialize", "selectors", "features", "\u0275\u0275ProvidersFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275template", "BasicDropdownComponent_ng_container_3_Template", "BasicDropdownComponent_ng_container_4_Template", "BasicDropdownComponent_ng_container_5_Template", "BasicDropdownComponent_ng_container_6_Template", "\u0275\u0275element", "BasicDropdownComponent_ng_container_11_Template", "BasicDropdownComponent_ng_container_12_Template", "BasicDropdownComponent_ng_container_13_Template", "BasicDropdownComponent_ng_container_14_Template", "BasicDropdownComponent_ng_container_19_Template", "BasicDropdownComponent_ng_container_20_Template", "BasicDropdownComponent_ng_container_21_Template", "BasicDropdownComponent_ng_container_22_Template", "BasicDropdownComponent_ng_container_23_Template", "BasicDropdownComponent_ng_container_28_Template", "BasicDropdownComponent_ng_container_29_Template", "BasicDropdownComponent_ng_container_30_Template", "BasicDropdownComponent_ng_container_31_Template", "BasicDropdownComponent_ng_container_32_Template", "\u0275\u0275property", "\u0275\u0275pipeBind1", "retrievedItem", "value", "JsonPipe", "NgxDcDropdownModule", "NgxDcDropdownComponent", "NgxDcDropdownHeaderDirective", "NgxDcDropdownOptionsHeaderDirective", "NgxDcDropdownItemDirective", "NgxDcDropdownLoadingDirective", "NgxDcDropdownNoItemsDirective", "MatSelectModule", "FormsModule", "styles", "\u0275\u0275elementContainerStart", "\u0275\u0275text", "\u0275\u0275element", "DropdownDemoComponent", "modalService", "inject", "NgxDcModalService", "showModal", "__async", "originPath", "window", "location", "origin", "includes", "pathname", "CodeModalComponent", "data", "title", "path", "previousTitles", "previousPaths", "width", "height", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275template", "DropdownDemoComponent_ng_container_6_Template", "DropdownDemoComponent_ng_container_7_Template", "DropdownDemoComponent_ng_container_17_Template", "DropdownDemoComponent_ng_container_18_Template", "\u0275\u0275advance", "\u0275\u0275property", "DemoFileViewerComponent", "MatTab", "MatTabGroup", "NgxDcDemoCardModule", "NgxDcDemoCardComponent", "NgxDcDemoCardTitleDirective", "NgxDcDemoCardSubtitleDirective", "NgxDcDemoCardExampleDirective", "NgxDcDemoTabsDirective", "NgxDcDemoCardExampleTitleDirective", "BasicDropdownComponent", "MatButtonModule", "MatButton", "encapsulation"]
}
