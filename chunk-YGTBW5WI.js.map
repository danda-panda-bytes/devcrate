{"version":3,"sources":["node_modules/ngx-highlightjs/fesm2022/ngx-highlightjs.mjs","node_modules/marked/lib/marked.esm.js","node_modules/ngx-markdown/fesm2022/ngx-markdown.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, PLATFORM_ID, Injectable, signal, computed, ElementRef, effect, SecurityContext, Directive, input, EventEmitter, booleanAttribute, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { BehaviorSubject, firstValueFrom, filter, switchMap, tap, EMPTY, catchError, throwError, forkJoin, map, from } from 'rxjs';\nconst HIGHLIGHT_OPTIONS = new InjectionToken('HIGHLIGHT_OPTIONS');\nfunction provideHighlightOptions(options) {\n  return [{\n    provide: HIGHLIGHT_OPTIONS,\n    useValue: options\n  }];\n}\nvar LoaderErrors = /*#__PURE__*/function (LoaderErrors) {\n  LoaderErrors[\"FULL_WITH_CORE_LIBRARY_IMPORTS\"] = \"The full library and the core library were imported, only one of them should be imported!\";\n  LoaderErrors[\"FULL_WITH_LANGUAGE_IMPORTS\"] = \"The highlighting languages were imported they are not needed!\";\n  LoaderErrors[\"CORE_WITHOUT_LANGUAGE_IMPORTS\"] = \"The highlighting languages were not imported!\";\n  LoaderErrors[\"LANGUAGE_WITHOUT_CORE_IMPORTS\"] = \"The core library was not imported!\";\n  LoaderErrors[\"NO_FULL_AND_NO_CORE_IMPORTS\"] = \"Highlight.js library was not imported!\";\n  return LoaderErrors;\n}(LoaderErrors || {});\nlet HighlightLoader = /*#__PURE__*/(() => {\n  class HighlightLoader {\n    constructor() {\n      this.document = inject(DOCUMENT);\n      this.isPlatformBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n      this.options = inject(HIGHLIGHT_OPTIONS, {\n        optional: true\n      });\n      // Stream that emits when hljs library is loaded and ready to use\n      this._ready = new BehaviorSubject(null);\n      this.ready = firstValueFrom(this._ready.asObservable().pipe(filter(hljs => !!hljs)));\n      if (this.isPlatformBrowser) {\n        // Check if hljs is already available\n        if (this.document.defaultView['hljs']) {\n          this._ready.next(this.document.defaultView['hljs']);\n        } else {\n          // Load hljs library\n          this._loadLibrary().pipe(switchMap(hljs => {\n            if (this.options?.lineNumbersLoader) {\n              // Make hljs available on window object (required for the line numbers library)\n              this.document.defaultView['hljs'] = hljs;\n              // Load line numbers library\n              return this.loadLineNumbers().pipe(tap(plugin => {\n                plugin.activateLineNumbers();\n                this._ready.next(hljs);\n              }));\n            } else {\n              this._ready.next(hljs);\n              return EMPTY;\n            }\n          }), catchError(e => {\n            console.error('[HLJS] ', e);\n            this._ready.error(e);\n            return EMPTY;\n          })).subscribe();\n        }\n        // Load highlighting theme\n        if (this.options?.themePath) {\n          this.loadTheme(this.options.themePath);\n        }\n      }\n    }\n    /**\n     * Lazy-Load highlight.js library\n     */\n    _loadLibrary() {\n      if (this.options) {\n        if (this.options.fullLibraryLoader && this.options.coreLibraryLoader) {\n          return throwError(() => LoaderErrors.FULL_WITH_CORE_LIBRARY_IMPORTS);\n        }\n        if (this.options.fullLibraryLoader && this.options.languages) {\n          return throwError(() => LoaderErrors.FULL_WITH_LANGUAGE_IMPORTS);\n        }\n        if (this.options.coreLibraryLoader && !this.options.languages) {\n          return throwError(() => LoaderErrors.CORE_WITHOUT_LANGUAGE_IMPORTS);\n        }\n        if (!this.options.coreLibraryLoader && this.options.languages) {\n          return throwError(() => LoaderErrors.LANGUAGE_WITHOUT_CORE_IMPORTS);\n        }\n        if (this.options.fullLibraryLoader) {\n          return this.loadFullLibrary();\n        }\n        if (this.options.coreLibraryLoader && this.options.languages && Object.keys(this.options.languages).length) {\n          return this.loadCoreLibrary().pipe(switchMap(hljs => this._loadLanguages(hljs)));\n        }\n      }\n      return throwError(() => LoaderErrors.NO_FULL_AND_NO_CORE_IMPORTS);\n    }\n    /**\n     * Lazy-load highlight.js languages\n     */\n    _loadLanguages(hljs) {\n      const languages = Object.entries(this.options.languages).map(([langName, langLoader]) => importModule(langLoader()).pipe(tap(langFunc => hljs.registerLanguage(langName, langFunc))));\n      return forkJoin(languages).pipe(map(() => hljs));\n    }\n    /**\n     * Import highlight.js core library\n     */\n    loadCoreLibrary() {\n      return importModule(this.options.coreLibraryLoader());\n    }\n    /**\n     * Import highlight.js library with all languages\n     */\n    loadFullLibrary() {\n      return importModule(this.options.fullLibraryLoader());\n    }\n    /**\n     * Import line numbers library\n     */\n    loadLineNumbers() {\n      return from(this.options.lineNumbersLoader());\n    }\n    /**\n     * Reload theme styles\n     */\n    setTheme(path) {\n      if (this.isPlatformBrowser) {\n        if (this._themeLinkElement) {\n          this._themeLinkElement.href = path;\n        } else {\n          this.loadTheme(path);\n        }\n      }\n    }\n    /**\n     * Load theme\n     */\n    loadTheme(path) {\n      this._themeLinkElement = this.document.createElement('link');\n      this._themeLinkElement.href = path;\n      this._themeLinkElement.type = 'text/css';\n      this._themeLinkElement.rel = 'stylesheet';\n      this._themeLinkElement.media = 'screen,print';\n      this.document.head.appendChild(this._themeLinkElement);\n    }\n    static {\n      this.ɵfac = function HighlightLoader_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HighlightLoader)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HighlightLoader,\n        factory: HighlightLoader.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return HighlightLoader;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Map loader response to module object\n */\nconst importModule = moduleLoader => {\n  return from(moduleLoader).pipe(filter(module => !!module?.default), map(module => module.default));\n};\nlet HighlightJS = /*#__PURE__*/(() => {\n  class HighlightJS {\n    constructor() {\n      this.loader = inject(HighlightLoader);\n      this.options = inject(HIGHLIGHT_OPTIONS, {\n        optional: true\n      });\n      this.hljsSignal = signal(null);\n      this.hljs = computed(() => this.hljsSignal());\n      // Load highlight.js library on init\n      this.loader.ready.then(hljs => {\n        this.hljsSignal.set(hljs);\n        if (this.options?.highlightOptions) {\n          // Set global config if present\n          hljs.configure(this.options.highlightOptions);\n        }\n      });\n    }\n    /**\n     * Core highlighting function. Accepts the code to highlight (string) and a list of options (object)\n     */\n    async highlight(code, options) {\n      const hljs = await this.loader.ready;\n      return hljs.highlight(code, options);\n    }\n    /**\n     * Highlighting with language detection.\n     */\n    async highlightAuto(value, languageSubset) {\n      const hljs = await this.loader.ready;\n      return hljs.highlightAuto(value, languageSubset);\n    }\n    /**\n     * Applies highlighting to a DOM node containing code.\n     * This function is the one to use to apply highlighting dynamically after page load or within initialization code of third-party JavaScript frameworks.\n     * The function uses language detection by default but you can specify the language in the class attribute of the DOM node. See the scopes reference for all available language names and scopes.\n     */\n    async highlightElement(element) {\n      const hljs = await this.loader.ready;\n      hljs.highlightElement(element);\n    }\n    /**\n     * Applies highlighting to all elements on a page matching the configured cssSelector. The default cssSelector value is 'pre code',\n     * which highlights all code blocks. This can be called before or after the page’s onload event has fired.\n     */\n    async highlightAll() {\n      const hljs = await this.loader.ready;\n      hljs.highlightAll();\n    }\n    /**\n     * @deprecated in version 12\n     * Configures global options:\n     */\n    async configure(config) {\n      const hljs = await this.loader.ready;\n      hljs.configure(config);\n    }\n    /**\n     * Adds new language to the library under the specified name. Used mostly internally.\n     * The function is passed the hljs object to be able to use common regular expressions defined within it.\n     */\n    async registerLanguage(languageName, languageDefinition) {\n      const hljs = await this.loader.ready;\n      hljs.registerLanguage(languageName, languageDefinition);\n    }\n    /**\n     * Removes a language and its aliases from the library. Used mostly internally\n     */\n    async unregisterLanguage(languageName) {\n      const hljs = await this.loader.ready;\n      hljs.unregisterLanguage(languageName);\n    }\n    /**\n     * Adds new language alias or aliases to the library for the specified language name defined under languageName key.\n     */\n    async registerAliases(alias, {\n      languageName\n    }) {\n      const hljs = await this.loader.ready;\n      hljs.registerAliases(alias, {\n        languageName\n      });\n    }\n    /**\n     * @return The languages names list.\n     */\n    async listLanguages() {\n      const hljs = await this.loader.ready;\n      return hljs.listLanguages();\n    }\n    /**\n     * Looks up a language by name or alias.\n     */\n    async getLanguage(name) {\n      const hljs = await this.loader.ready;\n      return hljs.getLanguage(name);\n    }\n    /**\n     * Enables safe mode. This is the default mode, providing the most reliable experience for production usage.\n     */\n    async safeMode() {\n      const hljs = await this.loader.ready;\n      hljs.safeMode();\n    }\n    /**\n     * Enables debug/development mode.\n     */\n    async debugMode() {\n      const hljs = await this.loader.ready;\n      hljs.debugMode();\n    }\n    /**\n     * Display line numbers\n     */\n    async lineNumbersBlock(el, options) {\n      const hljs = await this.loader.ready;\n      if (hljs.lineNumbersBlock) {\n        hljs.lineNumbersBlock(el, options);\n      }\n    }\n    static {\n      this.ɵfac = function HighlightJS_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HighlightJS)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HighlightJS,\n        factory: HighlightJS.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return HighlightJS;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Enable usage of the library together with \"trusted-types\" HTTP Content-Security-Policy (CSP)\n *\n * Can be added to angular.json -> serve -> options -> headers to try it out in DEV mode\n * \"Content-Security-Policy\": \"trusted-types ngx-highlightjs; require-trusted-types-for 'script'\"\n *\n * Read more...\n * Angular Security: https://angular.io/guide/security#enforcing-trusted-types\n * Trusted Types: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/trusted-types\n */\nlet policy;\nfunction getPolicy() {\n  if (!policy) {\n    try {\n      policy = window?.trustedTypes?.createPolicy('ngx-highlightjs', {\n        createHTML: s => s\n      });\n    } catch {\n      // trustedTypes.createPolicy throws if called with a name that is\n      // already registered, even in report-only mode. Until the API changes,\n      // catch the error not to break the applications functionally. In such\n      // cases, the code will fall back to using strings.\n    }\n  }\n  return policy;\n}\nfunction trustedHTMLFromStringBypass(html) {\n  return getPolicy()?.createHTML(html) || html;\n}\nlet HighlightBase = /*#__PURE__*/(() => {\n  class HighlightBase {\n    constructor() {\n      this._hljs = inject(HighlightJS);\n      this._nativeElement = inject(ElementRef).nativeElement;\n      this._sanitizer = inject(DomSanitizer);\n      this._platform = inject(PLATFORM_ID);\n      if (isPlatformBrowser(this._platform)) {\n        effect(() => {\n          const code = this.code();\n          // Set code text before highlighting\n          this.setTextContent(code || '');\n          if (code) {\n            this.highlightElement(code);\n          }\n        });\n        effect(() => {\n          const res = this.highlightResult();\n          this.setInnerHTML(res?.value);\n          // Forward highlight response to the highlighted output\n          this.highlighted.emit(res);\n        });\n      }\n    }\n    setTextContent(content) {\n      requestAnimationFrame(() => this._nativeElement.textContent = content);\n    }\n    setInnerHTML(content) {\n      requestAnimationFrame(() => this._nativeElement.innerHTML = trustedHTMLFromStringBypass(this._sanitizer.sanitize(SecurityContext.HTML, content) || ''));\n    }\n    static {\n      this.ɵfac = function HighlightBase_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HighlightBase)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: HighlightBase,\n        standalone: false\n      });\n    }\n  }\n  return HighlightBase;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet Highlight = /*#__PURE__*/(() => {\n  class Highlight extends HighlightBase {\n    constructor() {\n      super(...arguments);\n      // Code to highlight\n      this.code = input(null, {\n        alias: 'highlight'\n      });\n      // Highlighted result\n      this.highlightResult = signal(null);\n      // Stream that emits when code string is highlighted\n      this.highlighted = new EventEmitter();\n    }\n    async highlightElement(code) {\n      const res = await this._hljs.highlight(code, {\n        language: this.language,\n        ignoreIllegals: this.ignoreIllegals\n      });\n      this.highlightResult.set(res);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵHighlight_BaseFactory;\n        return function Highlight_Factory(__ngFactoryType__) {\n          return (ɵHighlight_BaseFactory || (ɵHighlight_BaseFactory = i0.ɵɵgetInheritedFactory(Highlight)))(__ngFactoryType__ || Highlight);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: Highlight,\n        selectors: [[\"\", \"highlight\", \"\"]],\n        hostVars: 2,\n        hostBindings: function Highlight_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"hljs\", true);\n          }\n        },\n        inputs: {\n          code: [1, \"highlight\", \"code\"],\n          language: \"language\",\n          ignoreIllegals: [2, \"ignoreIllegals\", \"ignoreIllegals\", booleanAttribute]\n        },\n        outputs: {\n          highlighted: \"highlighted\"\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: HighlightBase,\n          useExisting: Highlight\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return Highlight;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HighlightAuto = /*#__PURE__*/(() => {\n  class HighlightAuto extends HighlightBase {\n    constructor() {\n      super(...arguments);\n      // Code to highlight\n      this.code = input(null, {\n        alias: 'highlightAuto'\n      });\n      // Highlighted result\n      this.highlightResult = signal(null);\n      // Stream that emits when code string is highlighted\n      this.highlighted = new EventEmitter();\n    }\n    async highlightElement(code) {\n      const res = await this._hljs.highlightAuto(code, this.languages);\n      this.highlightResult.set(res);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵHighlightAuto_BaseFactory;\n        return function HighlightAuto_Factory(__ngFactoryType__) {\n          return (ɵHighlightAuto_BaseFactory || (ɵHighlightAuto_BaseFactory = i0.ɵɵgetInheritedFactory(HighlightAuto)))(__ngFactoryType__ || HighlightAuto);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: HighlightAuto,\n        selectors: [[\"\", \"highlightAuto\", \"\"]],\n        hostVars: 2,\n        hostBindings: function HighlightAuto_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"hljs\", true);\n          }\n        },\n        inputs: {\n          code: [1, \"highlightAuto\", \"code\"],\n          languages: \"languages\"\n        },\n        outputs: {\n          highlighted: \"highlighted\"\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: HighlightBase,\n          useExisting: HighlightAuto\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return HighlightAuto;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HighlightModule = /*#__PURE__*/(() => {\n  class HighlightModule {\n    static {\n      this.ɵfac = function HighlightModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HighlightModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: HighlightModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return HighlightModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HIGHLIGHT_OPTIONS, Highlight, HighlightAuto, HighlightBase, HighlightJS, HighlightLoader, HighlightModule, provideHighlightOptions };\n","/**\n * marked v15.0.6 - a markdown parser\n * Copyright (c) 2011-2025, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n  return {\n    async: false,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    hooks: null,\n    pedantic: false,\n    renderer: null,\n    silent: false,\n    tokenizer: null,\n    walkTokens: null\n  };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n  _defaults = newDefaults;\n}\nconst noopTest = {\n  exec: () => null\n};\nfunction edit(regex, opt = '') {\n  let source = typeof regex === 'string' ? regex : regex.source;\n  const obj = {\n    replace: (name, val) => {\n      let valSource = typeof val === 'string' ? val : val.source;\n      valSource = valSource.replace(other.caret, '$1');\n      source = source.replace(name, valSource);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(source, opt);\n    }\n  };\n  return obj;\n}\nconst other = {\n  codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n  outputLinkReplace: /\\\\([\\[\\]])/g,\n  indentCodeCompensation: /^(\\s+)(?:```)/,\n  beginningSpace: /^\\s+/,\n  endingHash: /#$/,\n  startingSpaceChar: /^ /,\n  endingSpaceChar: / $/,\n  nonSpaceChar: /[^ ]/,\n  newLineCharGlobal: /\\n/g,\n  tabCharGlobal: /\\t/g,\n  multipleSpaceGlobal: /\\s+/g,\n  blankLine: /^[ \\t]*$/,\n  doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n  blockquoteStart: /^ {0,3}>/,\n  blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n  blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n  listReplaceTabs: /^\\t+/,\n  listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n  listIsTask: /^\\[[ xX]\\] /,\n  listReplaceTask: /^\\[[ xX]\\] +/,\n  anyLine: /\\n.*\\n/,\n  hrefBrackets: /^<(.*)>$/,\n  tableDelimiter: /[:|]/,\n  tableAlignChars: /^\\||\\| *$/g,\n  tableRowBlankLine: /\\n[ \\t]*$/,\n  tableAlignRight: /^ *-+: *$/,\n  tableAlignCenter: /^ *:-+: *$/,\n  tableAlignLeft: /^ *:-+ *$/,\n  startATag: /^<a /i,\n  endATag: /^<\\/a>/i,\n  startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n  endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n  startAngleBracket: /^</,\n  endAngleBracket: />$/,\n  pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n  unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n  escapeTest: /[&<>\"']/,\n  escapeReplace: /[&<>\"']/g,\n  escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n  escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n  unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n  caret: /(^|[^\\[])\\^/g,\n  percentDecode: /%25/g,\n  findPipe: /\\|/g,\n  splitPipe: / \\|/,\n  slashPipe: /\\\\\\|/g,\n  carriageReturn: /\\r\\n|\\r/g,\n  spaceLine: /^ +$/gm,\n  notSpaceStart: /^\\S*/,\n  endingNewline: /\\n$/,\n  listItemRegex: bull => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n  nextBulletRegex: indent => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n  hrRegex: indent => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n  fencesBeginRegex: indent => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n  headingBeginRegex: indent => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n  htmlBeginRegex: indent => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i')\n};\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/).replace(/bull/g, bullet) // lists can interrupt\n.replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n.replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n.replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n.replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n.replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n.getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/).replace('label', _blockLabel).replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/).getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/).replace(/bull/g, bullet).getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title' + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n+ '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n+ '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n+ '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n+ '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n+ '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n+ '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n+ '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n+ '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n+ ')', 'i').replace('comment', _comment).replace('tag', _tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\nconst paragraph = edit(_paragraph).replace('hr', hr).replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)').replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n.replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n.replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n.getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/).replace('paragraph', paragraph).getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n  blockquote,\n  code: blockCode,\n  def,\n  fences,\n  heading,\n  hr,\n  html,\n  lheading,\n  list,\n  newline,\n  paragraph,\n  table: noopTest,\n  text: blockText\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n+ ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n+ '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n.replace('hr', hr).replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)').replace('blockquote', ' {0,3}>').replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n.replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n.getRegex();\nconst blockGfm = {\n  ...blockNormal,\n  table: gfmTable,\n  paragraph: edit(_paragraph).replace('hr', hr).replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)').replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n  .replace('table', gfmTable) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n  .getRegex()\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n  ...blockNormal,\n  html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n  + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', _comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest,\n  // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(_paragraph).replace('hr', hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', lheading).replace('|table', '').replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').replace('|tag', '').getRegex()\n};\n/**\n * Inline-Level Grammar\n */\nconst escape$1 = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u').replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n// GFM allows ~ inside strong and em for strikethrough\nconst _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\nconst emStrongLDelim = edit(emStrongLDelimCore, 'u').replace(/punct/g, _punctuation).getRegex();\nconst emStrongLDelimGfm = edit(emStrongLDelimCore, 'u').replace(/punct/g, _punctuationGfmStrongEm).getRegex();\nconst emStrongRDelimAstCore = '^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n+ '|[^*]+(?=[^*])' // Consume to delim\n+ '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n+ '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n+ '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n+ '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n+ '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n+ '|notPunctSpace(\\\\*+)(?=notPunctSpace)'; // (6) a***a can be either Left or Right Delimiter\nconst emStrongRDelimAst = edit(emStrongRDelimAstCore, 'gu').replace(/notPunctSpace/g, _notPunctuationOrSpace).replace(/punctSpace/g, _punctuationOrSpace).replace(/punct/g, _punctuation).getRegex();\nconst emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, 'gu').replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm).replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm).replace(/punct/g, _punctuationGfmStrongEm).getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n+ '|[^_]+(?=[^_])' // Consume to delim\n+ '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n+ '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n+ '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n+ '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n+ '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n.replace(/notPunctSpace/g, _notPunctuationOrSpace).replace(/punctSpace/g, _punctuationOrSpace).replace(/punct/g, _punctuation).getRegex();\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu').replace(/punct/g, _punctuation).getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/).replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n+ '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n+ '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n+ '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n+ '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n.replace('comment', _inlineComment).replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/).getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/).replace('label', _inlineLabel).replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/).replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/).getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/).replace('label', _inlineLabel).replace('ref', _blockLabel).getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/).replace('ref', _blockLabel).getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g').replace('reflink', reflink).replace('nolink', nolink).getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n  _backpedal: noopTest,\n  // only used for GFM url\n  anyPunctuation,\n  autolink,\n  blockSkip,\n  br,\n  code: inlineCode,\n  del: noopTest,\n  emStrongLDelim,\n  emStrongRDelimAst,\n  emStrongRDelimUnd,\n  escape: escape$1,\n  link,\n  nolink,\n  punctuation,\n  reflink,\n  reflinkSearch,\n  tag,\n  text: inlineText,\n  url: noopTest\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n  ...inlineNormal,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', _inlineLabel).getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', _inlineLabel).getRegex()\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n  ...inlineNormal,\n  emStrongRDelimAst: emStrongRDelimAstGfm,\n  emStrongLDelim: emStrongLDelimGfm,\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i').replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n  ...inlineGfm,\n  br: edit(br).replace('{2,}', '*').getRegex(),\n  text: edit(inlineGfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n};\n/**\n * exports\n */\nconst block = {\n  normal: blockNormal,\n  gfm: blockGfm,\n  pedantic: blockPedantic\n};\nconst inline = {\n  normal: inlineNormal,\n  gfm: inlineGfm,\n  breaks: inlineBreaks,\n  pedantic: inlinePedantic\n};\n\n/**\n * Helpers\n */\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = ch => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (other.escapeTest.test(html)) {\n      return html.replace(other.escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (other.escapeTestNoEncode.test(html)) {\n      return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n  return html;\n}\nfunction cleanUrl(href) {\n  try {\n    href = encodeURI(href).replace(other.percentDecode, '%');\n  } catch {\n    return null;\n  }\n  return href;\n}\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n      let escaped = false;\n      let curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(other.splitPipe);\n  let i = 0;\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) {\n    cells.shift();\n  }\n  if (cells.length > 0 && !cells.at(-1)?.trim()) {\n    cells.pop();\n  }\n  if (count) {\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) cells.push('');\n    }\n  }\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n  }\n  return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && true) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n  return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  let level = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\nfunction outputLink(cap, link, raw, lexer, rules) {\n  const href = link.href;\n  const title = link.title || null;\n  const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text\n  };\n}\nfunction indentCodeCompensation(raw, text, rules) {\n  const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n  if (matchIndentToCode === null) {\n    return text;\n  }\n  const indentToCode = matchIndentToCode[1];\n  return text.split('\\n').map(node => {\n    const matchIndentInNode = node.match(rules.other.beginningSpace);\n    if (matchIndentInNode === null) {\n      return node;\n    }\n    const [indentInNode] = matchIndentInNode;\n    if (indentInNode.length >= indentToCode.length) {\n      return node.slice(indentToCode.length);\n    }\n    return node;\n  }).join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n  options;\n  rules; // set by the lexer\n  lexer; // set by the lexer\n  constructor(options) {\n    this.options = options || _defaults;\n  }\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic ? rtrim(text, '\\n') : text\n      };\n    }\n  }\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n        text\n      };\n    }\n  }\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n      // remove trailing #s\n      if (this.rules.other.endingHash.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: rtrim(cap[0], '\\n')\n      };\n    }\n  }\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      let lines = rtrim(cap[0], '\\n').split('\\n');\n      let raw = '';\n      let text = '';\n      const tokens = [];\n      while (lines.length > 0) {\n        let inBlockquote = false;\n        const currentLines = [];\n        let i;\n        for (i = 0; i < lines.length; i++) {\n          // get lines up to a continuation\n          if (this.rules.other.blockquoteStart.test(lines[i])) {\n            currentLines.push(lines[i]);\n            inBlockquote = true;\n          } else if (!inBlockquote) {\n            currentLines.push(lines[i]);\n          } else {\n            break;\n          }\n        }\n        lines = lines.slice(i);\n        const currentRaw = currentLines.join('\\n');\n        const currentText = currentRaw\n        // precede setext continuation with 4 spaces so it isn't a setext\n        .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1').replace(this.rules.other.blockquoteSetextReplace2, '');\n        raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n        text = text ? `${text}\\n${currentText}` : currentText;\n        // parse blockquote lines as top level tokens\n        // merge paragraphs if this is a continuation\n        const top = this.lexer.state.top;\n        this.lexer.state.top = true;\n        this.lexer.blockTokens(currentText, tokens, true);\n        this.lexer.state.top = top;\n        // if there is no continuation then we are done\n        if (lines.length === 0) {\n          break;\n        }\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'code') {\n          // blockquote continuation cannot be preceded by a code block\n          break;\n        } else if (lastToken?.type === 'blockquote') {\n          // include continuation in nested blockquote\n          const oldToken = lastToken;\n          const newText = oldToken.raw + '\\n' + lines.join('\\n');\n          const newToken = this.blockquote(newText);\n          tokens[tokens.length - 1] = newToken;\n          raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n          text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n          break;\n        } else if (lastToken?.type === 'list') {\n          // include continuation in nested list\n          const oldToken = lastToken;\n          const newText = oldToken.raw + '\\n' + lines.join('\\n');\n          const newToken = this.list(newText);\n          tokens[tokens.length - 1] = newToken;\n          raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n          text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n          lines = newText.substring(tokens.at(-1).raw.length).split('\\n');\n          continue;\n        }\n      }\n      return {\n        type: 'blockquote',\n        raw,\n        tokens,\n        text\n      };\n    }\n  }\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n      // Get next list item\n      const itemRegex = this.rules.other.listItemRegex(bull);\n      let endsWithBlankLine = false;\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        let endEarly = false;\n        let raw = '';\n        let itemContents = '';\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n        if (this.rules.block.hr.test(src)) {\n          // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n        raw = cap[0];\n        src = src.substring(raw.length);\n        let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, t => ' '.repeat(3 * t.length));\n        let nextLine = src.split('\\n', 1)[0];\n        let blankLine = !line.trim();\n        let indent = 0;\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimStart();\n        } else if (blankLine) {\n          indent = cap[1].length + 1;\n        } else {\n          indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n        if (blankLine && this.rules.other.blankLine.test(nextLine)) {\n          // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n        if (!endEarly) {\n          const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n          const hrRegex = this.rules.other.hrRegex(indent);\n          const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n          const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n          const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n          // Check if following lines should be included in List Item\n          while (src) {\n            const rawLine = src.split('\\n', 1)[0];\n            let nextLineWithoutTabs;\n            nextLine = rawLine;\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n              nextLineWithoutTabs = nextLine;\n            } else {\n              nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n            }\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n            // End list item if found start of html block\n            if (htmlBeginRegex.test(nextLine)) {\n              break;\n            }\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n            // Horizontal rule found\n            if (hrRegex.test(nextLine)) {\n              break;\n            }\n            if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) {\n              // Dedent if possible\n              itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n              // paragraph continuation unless last line was a different block level element\n              if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) {\n                // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n              itemContents += '\\n' + nextLine;\n            }\n            if (!blankLine && !nextLine.trim()) {\n              // Check if current line is blank\n              blankLine = true;\n            }\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLineWithoutTabs.slice(indent);\n          }\n        }\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (this.rules.other.doubleBlankLine.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n        let istask = null;\n        let ischecked;\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = this.rules.other.listIsTask.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n          }\n        }\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents,\n          tokens: []\n        });\n        list.raw += raw;\n      }\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      const lastItem = list.items.at(-1);\n      if (lastItem) {\n        lastItem.raw = lastItem.raw.trimEnd();\n        lastItem.text = lastItem.text.trimEnd();\n      } else {\n        // not a list since there were no items\n        return;\n      }\n      list.raw = list.raw.trimEnd();\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (let i = 0; i < list.items.length; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (let i = 0; i < list.items.length; i++) {\n          list.items[i].loose = true;\n        }\n      }\n      return list;\n    }\n  }\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        block: true,\n        raw: cap[0],\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0]\n      };\n      return token;\n    }\n  }\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n      const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (!cap) {\n      return;\n    }\n    if (!this.rules.other.tableDelimiter.test(cap[2])) {\n      // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n      return;\n    }\n    const headers = splitCells(cap[1]);\n    const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n    const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n    const item = {\n      type: 'table',\n      raw: cap[0],\n      header: [],\n      align: [],\n      rows: []\n    };\n    if (headers.length !== aligns.length) {\n      // header and align columns must be equal, rows can be different.\n      return;\n    }\n    for (const align of aligns) {\n      if (this.rules.other.tableAlignRight.test(align)) {\n        item.align.push('right');\n      } else if (this.rules.other.tableAlignCenter.test(align)) {\n        item.align.push('center');\n      } else if (this.rules.other.tableAlignLeft.test(align)) {\n        item.align.push('left');\n      } else {\n        item.align.push(null);\n      }\n    }\n    for (let i = 0; i < headers.length; i++) {\n      item.header.push({\n        text: headers[i],\n        tokens: this.lexer.inline(headers[i]),\n        header: true,\n        align: item.align[i]\n      });\n    }\n    for (const row of rows) {\n      item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n        return {\n          text: cell,\n          tokens: this.lexer.inline(cell),\n          header: false,\n          align: item.align[i]\n        };\n      }));\n    }\n    return item;\n  }\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: cap[1]\n      };\n    }\n  }\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n      return {\n        type: 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        block: false,\n        text: cap[0]\n      };\n    }\n  }\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!this.rules.other.endAngleBracket.test(trimmedUrl)) {\n          return;\n        }\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = this.rules.other.pedanticHrefTitle.exec(href);\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim();\n      if (this.rules.other.startAngleBracket.test(href)) {\n        if (this.options.pedantic && !this.rules.other.endAngleBracket.test(trimmedUrl)) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n        title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title\n      }, cap[0], this.lexer, this.rules);\n    }\n  }\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n      const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n      const link = links[linkString.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer, this.rules);\n    }\n  }\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrongLDelim.exec(src);\n    if (!match) return;\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric)) return;\n    const nextChar = match[1] || match[2] || '';\n    if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n      // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n      const lLength = [...match[0]].length - 1;\n      let rDelim,\n        rLength,\n        delimTotal = lLength,\n        midDelimTotal = 0;\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n      endReg.lastIndex = 0;\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n        if (!rDelim) continue; // skip single * in __abc*abc__\n        rLength = [...rDelim].length;\n        if (match[3] || match[4]) {\n          // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) {\n          // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n        delimTotal -= rLength;\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n        // char length can be >1 for unicode characters;\n        const lastCharLength = [...match[0]][0].length;\n        const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n      const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n      const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n  autolink(src) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = cap[1];\n        href = 'mailto:' + text;\n      } else {\n        text = cap[1];\n        href = text;\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [{\n          type: 'text',\n          raw: text,\n          text\n        }]\n      };\n    }\n  }\n  url(src) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = cap[0];\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n        } while (prevCapZero !== cap[0]);\n        text = cap[0];\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [{\n          type: 'text',\n          raw: text,\n          text\n        }]\n      };\n    }\n  }\n  inlineText(src) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      const escaped = this.lexer.state.inRawBlock;\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        escaped\n      };\n    }\n  }\n}\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n  tokens;\n  options;\n  state;\n  tokenizer;\n  inlineQueue;\n  constructor(options) {\n    // TokenList cannot be created in one go\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || _defaults;\n    this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n    const rules = {\n      other,\n      block: block.normal,\n      inline: inline.normal\n    };\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new _Lexer(options);\n    return lexer.lex(src);\n  }\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new _Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src.replace(other.carriageReturn, '\\n');\n    this.blockTokens(src, this.tokens);\n    for (let i = 0; i < this.inlineQueue.length; i++) {\n      const next = this.inlineQueue[i];\n      this.inlineTokens(next.src, next.tokens);\n    }\n    this.inlineQueue = [];\n    return this.tokens;\n  }\n  blockTokens(src, tokens = [], lastParagraphClipped = false) {\n    if (this.options.pedantic) {\n      src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n    }\n    while (src) {\n      let token;\n      if (this.options.extensions?.block?.some(extTokenizer => {\n        if (token = extTokenizer.call({\n          lexer: this\n        }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (token.raw.length === 1 && lastToken !== undefined) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unnecessary paragraph tags\n          lastToken.raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.at(-1).src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue.at(-1).src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      let cutSrc = src;\n      if (this.options.extensions?.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(getStartIndex => {\n          tempStart = getStartIndex.call({\n            lexer: this\n          }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        const lastToken = tokens.at(-1);\n        if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue.at(-1).src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = cutSrc.length !== src.length;\n        src = src.substring(token.raw.length);\n        continue;\n      }\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue.at(-1).src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n    this.state.top = true;\n    return tokens;\n  }\n  inline(src, tokens = []) {\n    this.inlineQueue.push({\n      src,\n      tokens\n    });\n    return tokens;\n  }\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match = null;\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n    // Mask out escaped characters\n    while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n    }\n    let keepPrevChar = false;\n    let prevChar = '';\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n      let token;\n      // extensions\n      if (this.options.extensions?.inline?.some(extTokenizer => {\n        if (token = extTokenizer.call({\n          lexer: this\n        }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (token.type === 'text' && lastToken?.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // autolink\n      if (token = this.tokenizer.autolink(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      let cutSrc = src;\n      if (this.options.extensions?.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(getStartIndex => {\n          tempStart = getStartIndex.call({\n            lexer: this\n          }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') {\n          // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n  options;\n  parser; // set by the parser\n  constructor(options) {\n    this.options = options || _defaults;\n  }\n  space(token) {\n    return '';\n  }\n  code({\n    text,\n    lang,\n    escaped\n  }) {\n    const langString = (lang || '').match(other.notSpaceStart)?.[0];\n    const code = text.replace(other.endingNewline, '') + '\\n';\n    if (!langString) {\n      return '<pre><code>' + (escaped ? code : escape(code, true)) + '</code></pre>\\n';\n    }\n    return '<pre><code class=\"language-' + escape(langString) + '\">' + (escaped ? code : escape(code, true)) + '</code></pre>\\n';\n  }\n  blockquote({\n    tokens\n  }) {\n    const body = this.parser.parse(tokens);\n    return `<blockquote>\\n${body}</blockquote>\\n`;\n  }\n  html({\n    text\n  }) {\n    return text;\n  }\n  heading({\n    tokens,\n    depth\n  }) {\n    return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n  }\n  hr(token) {\n    return '<hr>\\n';\n  }\n  list(token) {\n    const ordered = token.ordered;\n    const start = token.start;\n    let body = '';\n    for (let j = 0; j < token.items.length; j++) {\n      const item = token.items[j];\n      body += this.listitem(item);\n    }\n    const type = ordered ? 'ol' : 'ul';\n    const startAttr = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n    return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n  }\n  listitem(item) {\n    let itemBody = '';\n    if (item.task) {\n      const checkbox = this.checkbox({\n        checked: !!item.checked\n      });\n      if (item.loose) {\n        if (item.tokens[0]?.type === 'paragraph') {\n          item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n          if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n            item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n            item.tokens[0].tokens[0].escaped = true;\n          }\n        } else {\n          item.tokens.unshift({\n            type: 'text',\n            raw: checkbox + ' ',\n            text: checkbox + ' ',\n            escaped: true\n          });\n        }\n      } else {\n        itemBody += checkbox + ' ';\n      }\n    }\n    itemBody += this.parser.parse(item.tokens, !!item.loose);\n    return `<li>${itemBody}</li>\\n`;\n  }\n  checkbox({\n    checked\n  }) {\n    return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\">';\n  }\n  paragraph({\n    tokens\n  }) {\n    return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n  }\n  table(token) {\n    let header = '';\n    // header\n    let cell = '';\n    for (let j = 0; j < token.header.length; j++) {\n      cell += this.tablecell(token.header[j]);\n    }\n    header += this.tablerow({\n      text: cell\n    });\n    let body = '';\n    for (let j = 0; j < token.rows.length; j++) {\n      const row = token.rows[j];\n      cell = '';\n      for (let k = 0; k < row.length; k++) {\n        cell += this.tablecell(row[k]);\n      }\n      body += this.tablerow({\n        text: cell\n      });\n    }\n    if (body) body = `<tbody>${body}</tbody>`;\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n  }\n  tablerow({\n    text\n  }) {\n    return `<tr>\\n${text}</tr>\\n`;\n  }\n  tablecell(token) {\n    const content = this.parser.parseInline(token.tokens);\n    const type = token.header ? 'th' : 'td';\n    const tag = token.align ? `<${type} align=\"${token.align}\">` : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n  /**\n   * span level renderer\n   */\n  strong({\n    tokens\n  }) {\n    return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n  }\n  em({\n    tokens\n  }) {\n    return `<em>${this.parser.parseInline(tokens)}</em>`;\n  }\n  codespan({\n    text\n  }) {\n    return `<code>${escape(text, true)}</code>`;\n  }\n  br(token) {\n    return '<br>';\n  }\n  del({\n    tokens\n  }) {\n    return `<del>${this.parser.parseInline(tokens)}</del>`;\n  }\n  link({\n    href,\n    title,\n    tokens\n  }) {\n    const text = this.parser.parseInline(tokens);\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return text;\n    }\n    href = cleanHref;\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + escape(title) + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n  image({\n    href,\n    title,\n    text\n  }) {\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return escape(text);\n    }\n    href = cleanHref;\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${escape(title)}\"`;\n    }\n    out += '>';\n    return out;\n  }\n  text(token) {\n    return 'tokens' in token && token.tokens ? this.parser.parseInline(token.tokens) : 'escaped' in token && token.escaped ? token.text : escape(token.text);\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n  // no need for block level renderers\n  strong({\n    text\n  }) {\n    return text;\n  }\n  em({\n    text\n  }) {\n    return text;\n  }\n  codespan({\n    text\n  }) {\n    return text;\n  }\n  del({\n    text\n  }) {\n    return text;\n  }\n  html({\n    text\n  }) {\n    return text;\n  }\n  text({\n    text\n  }) {\n    return text;\n  }\n  link({\n    text\n  }) {\n    return '' + text;\n  }\n  image({\n    text\n  }) {\n    return '' + text;\n  }\n  br() {\n    return '';\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n  options;\n  renderer;\n  textRenderer;\n  constructor(options) {\n    this.options = options || _defaults;\n    this.options.renderer = this.options.renderer || new _Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.renderer.parser = this;\n    this.textRenderer = new _TextRenderer();\n  }\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new _Parser(options);\n    return parser.parse(tokens);\n  }\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new _Parser(options);\n    return parser.parseInline(tokens);\n  }\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '';\n    for (let i = 0; i < tokens.length; i++) {\n      const anyToken = tokens[i];\n      // Run any renderer extensions\n      if (this.options.extensions?.renderers?.[anyToken.type]) {\n        const genericToken = anyToken;\n        const ret = this.options.extensions.renderers[genericToken.type].call({\n          parser: this\n        }, genericToken);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n      const token = anyToken;\n      switch (token.type) {\n        case 'space':\n          {\n            out += this.renderer.space(token);\n            continue;\n          }\n        case 'hr':\n          {\n            out += this.renderer.hr(token);\n            continue;\n          }\n        case 'heading':\n          {\n            out += this.renderer.heading(token);\n            continue;\n          }\n        case 'code':\n          {\n            out += this.renderer.code(token);\n            continue;\n          }\n        case 'table':\n          {\n            out += this.renderer.table(token);\n            continue;\n          }\n        case 'blockquote':\n          {\n            out += this.renderer.blockquote(token);\n            continue;\n          }\n        case 'list':\n          {\n            out += this.renderer.list(token);\n            continue;\n          }\n        case 'html':\n          {\n            out += this.renderer.html(token);\n            continue;\n          }\n        case 'paragraph':\n          {\n            out += this.renderer.paragraph(token);\n            continue;\n          }\n        case 'text':\n          {\n            let textToken = token;\n            let body = this.renderer.text(textToken);\n            while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n              textToken = tokens[++i];\n              body += '\\n' + this.renderer.text(textToken);\n            }\n            if (top) {\n              out += this.renderer.paragraph({\n                type: 'paragraph',\n                raw: body,\n                text: body,\n                tokens: [{\n                  type: 'text',\n                  raw: body,\n                  text: body,\n                  escaped: true\n                }]\n              });\n            } else {\n              out += body;\n            }\n            continue;\n          }\n        default:\n          {\n            const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n            if (this.options.silent) {\n              console.error(errMsg);\n              return '';\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n      }\n    }\n    return out;\n  }\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer = this.renderer) {\n    let out = '';\n    for (let i = 0; i < tokens.length; i++) {\n      const anyToken = tokens[i];\n      // Run any renderer extensions\n      if (this.options.extensions?.renderers?.[anyToken.type]) {\n        const ret = this.options.extensions.renderers[anyToken.type].call({\n          parser: this\n        }, anyToken);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n      const token = anyToken;\n      switch (token.type) {\n        case 'escape':\n          {\n            out += renderer.text(token);\n            break;\n          }\n        case 'html':\n          {\n            out += renderer.html(token);\n            break;\n          }\n        case 'link':\n          {\n            out += renderer.link(token);\n            break;\n          }\n        case 'image':\n          {\n            out += renderer.image(token);\n            break;\n          }\n        case 'strong':\n          {\n            out += renderer.strong(token);\n            break;\n          }\n        case 'em':\n          {\n            out += renderer.em(token);\n            break;\n          }\n        case 'codespan':\n          {\n            out += renderer.codespan(token);\n            break;\n          }\n        case 'br':\n          {\n            out += renderer.br(token);\n            break;\n          }\n        case 'del':\n          {\n            out += renderer.del(token);\n            break;\n          }\n        case 'text':\n          {\n            out += renderer.text(token);\n            break;\n          }\n        default:\n          {\n            const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n            if (this.options.silent) {\n              console.error(errMsg);\n              return '';\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n      }\n    }\n    return out;\n  }\n}\nclass _Hooks {\n  options;\n  block;\n  constructor(options) {\n    this.options = options || _defaults;\n  }\n  static passThroughHooks = new Set(['preprocess', 'postprocess', 'processAllTokens']);\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n  /**\n   * Process all tokens before walk tokens\n   */\n  processAllTokens(tokens) {\n    return tokens;\n  }\n  /**\n   * Provide function to tokenize markdown\n   */\n  provideLexer() {\n    return this.block ? _Lexer.lex : _Lexer.lexInline;\n  }\n  /**\n   * Provide function to parse tokens\n   */\n  provideParser() {\n    return this.block ? _Parser.parse : _Parser.parseInline;\n  }\n}\nclass Marked {\n  defaults = _getDefaults();\n  options = this.setOptions;\n  parse = this.parseMarkdown(true);\n  parseInline = this.parseMarkdown(false);\n  Parser = _Parser;\n  Renderer = _Renderer;\n  TextRenderer = _TextRenderer;\n  Lexer = _Lexer;\n  Tokenizer = _Tokenizer;\n  Hooks = _Hooks;\n  constructor(...args) {\n    this.use(...args);\n  }\n  /**\n   * Run callback for every token\n   */\n  walkTokens(tokens, callback) {\n    let values = [];\n    for (const token of tokens) {\n      values = values.concat(callback.call(this, token));\n      switch (token.type) {\n        case 'table':\n          {\n            const tableToken = token;\n            for (const cell of tableToken.header) {\n              values = values.concat(this.walkTokens(cell.tokens, callback));\n            }\n            for (const row of tableToken.rows) {\n              for (const cell of row) {\n                values = values.concat(this.walkTokens(cell.tokens, callback));\n              }\n            }\n            break;\n          }\n        case 'list':\n          {\n            const listToken = token;\n            values = values.concat(this.walkTokens(listToken.items, callback));\n            break;\n          }\n        default:\n          {\n            const genericToken = token;\n            if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n              this.defaults.extensions.childTokens[genericToken.type].forEach(childTokens => {\n                const tokens = genericToken[childTokens].flat(Infinity);\n                values = values.concat(this.walkTokens(tokens, callback));\n              });\n            } else if (genericToken.tokens) {\n              values = values.concat(this.walkTokens(genericToken.tokens, callback));\n            }\n          }\n      }\n    }\n    return values;\n  }\n  use(...args) {\n    const extensions = this.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    args.forEach(pack => {\n      // copy options to new object\n      const opts = {\n        ...pack\n      };\n      // set async to true if it was set to true before\n      opts.async = this.defaults.async || opts.async || false;\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        pack.extensions.forEach(ext => {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n          if ('renderer' in ext) {\n            // Renderer extensions\n            const prevRenderer = extensions.renderers[ext.name];\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function (...args) {\n                let ret = ext.renderer.apply(this, args);\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n          if ('tokenizer' in ext) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n            const extLevel = extensions[ext.level];\n            if (extLevel) {\n              extLevel.unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n          if ('childTokens' in ext && ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n        opts.extensions = extensions;\n      }\n      // ==-- Parse \"overwrite\" extensions --== //\n      if (pack.renderer) {\n        const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n        for (const prop in pack.renderer) {\n          if (!(prop in renderer)) {\n            throw new Error(`renderer '${prop}' does not exist`);\n          }\n          if (['options', 'parser'].includes(prop)) {\n            // ignore options property\n            continue;\n          }\n          const rendererProp = prop;\n          const rendererFunc = pack.renderer[rendererProp];\n          const prevRenderer = renderer[rendererProp];\n          // Replace renderer with func to run extension, but fall back if false\n          renderer[rendererProp] = (...args) => {\n            let ret = rendererFunc.apply(renderer, args);\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n            return ret || '';\n          };\n        }\n        opts.renderer = renderer;\n      }\n      if (pack.tokenizer) {\n        const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n        for (const prop in pack.tokenizer) {\n          if (!(prop in tokenizer)) {\n            throw new Error(`tokenizer '${prop}' does not exist`);\n          }\n          if (['options', 'rules', 'lexer'].includes(prop)) {\n            // ignore options, rules, and lexer properties\n            continue;\n          }\n          const tokenizerProp = prop;\n          const tokenizerFunc = pack.tokenizer[tokenizerProp];\n          const prevTokenizer = tokenizer[tokenizerProp];\n          // Replace tokenizer with func to run extension, but fall back if false\n          // @ts-expect-error cannot type tokenizer function dynamically\n          tokenizer[tokenizerProp] = (...args) => {\n            let ret = tokenizerFunc.apply(tokenizer, args);\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n            return ret;\n          };\n        }\n        opts.tokenizer = tokenizer;\n      }\n      // ==-- Parse Hooks extensions --== //\n      if (pack.hooks) {\n        const hooks = this.defaults.hooks || new _Hooks();\n        for (const prop in pack.hooks) {\n          if (!(prop in hooks)) {\n            throw new Error(`hook '${prop}' does not exist`);\n          }\n          if (['options', 'block'].includes(prop)) {\n            // ignore options and block properties\n            continue;\n          }\n          const hooksProp = prop;\n          const hooksFunc = pack.hooks[hooksProp];\n          const prevHook = hooks[hooksProp];\n          if (_Hooks.passThroughHooks.has(prop)) {\n            // @ts-expect-error cannot type hook function dynamically\n            hooks[hooksProp] = arg => {\n              if (this.defaults.async) {\n                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                  return prevHook.call(hooks, ret);\n                });\n              }\n              const ret = hooksFunc.call(hooks, arg);\n              return prevHook.call(hooks, ret);\n            };\n          } else {\n            // @ts-expect-error cannot type hook function dynamically\n            hooks[hooksProp] = (...args) => {\n              let ret = hooksFunc.apply(hooks, args);\n              if (ret === false) {\n                ret = prevHook.apply(hooks, args);\n              }\n              return ret;\n            };\n          }\n        }\n        opts.hooks = hooks;\n      }\n      // ==-- Parse WalkTokens extensions --== //\n      if (pack.walkTokens) {\n        const walkTokens = this.defaults.walkTokens;\n        const packWalktokens = pack.walkTokens;\n        opts.walkTokens = function (token) {\n          let values = [];\n          values.push(packWalktokens.call(this, token));\n          if (walkTokens) {\n            values = values.concat(walkTokens.call(this, token));\n          }\n          return values;\n        };\n      }\n      this.defaults = {\n        ...this.defaults,\n        ...opts\n      };\n    });\n    return this;\n  }\n  setOptions(opt) {\n    this.defaults = {\n      ...this.defaults,\n      ...opt\n    };\n    return this;\n  }\n  lexer(src, options) {\n    return _Lexer.lex(src, options ?? this.defaults);\n  }\n  parser(tokens, options) {\n    return _Parser.parse(tokens, options ?? this.defaults);\n  }\n  parseMarkdown(blockType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const parse = (src, options) => {\n      const origOpt = {\n        ...options\n      };\n      const opt = {\n        ...this.defaults,\n        ...origOpt\n      };\n      const throwError = this.onError(!!opt.silent, !!opt.async);\n      // throw error if an extension set async to true but parse was called with async: false\n      if (this.defaults.async === true && origOpt.async === false) {\n        return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n      }\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        return throwError(new Error('marked(): input parameter is undefined or null'));\n      }\n      if (typeof src !== 'string') {\n        return throwError(new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected'));\n      }\n      if (opt.hooks) {\n        opt.hooks.options = opt;\n        opt.hooks.block = blockType;\n      }\n      const lexer = opt.hooks ? opt.hooks.provideLexer() : blockType ? _Lexer.lex : _Lexer.lexInline;\n      const parser = opt.hooks ? opt.hooks.provideParser() : blockType ? _Parser.parse : _Parser.parseInline;\n      if (opt.async) {\n        return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src).then(src => lexer(src, opt)).then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens).then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens).then(tokens => parser(tokens, opt)).then(html => opt.hooks ? opt.hooks.postprocess(html) : html).catch(throwError);\n      }\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        let tokens = lexer(src, opt);\n        if (opt.hooks) {\n          tokens = opt.hooks.processAllTokens(tokens);\n        }\n        if (opt.walkTokens) {\n          this.walkTokens(tokens, opt.walkTokens);\n        }\n        let html = parser(tokens, opt);\n        if (opt.hooks) {\n          html = opt.hooks.postprocess(html);\n        }\n        return html;\n      } catch (e) {\n        return throwError(e);\n      }\n    };\n    return parse;\n  }\n  onError(silent, async) {\n    return e => {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if (silent) {\n        const msg = '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n        if (async) {\n          return Promise.resolve(msg);\n        }\n        return msg;\n      }\n      if (async) {\n        return Promise.reject(e);\n      }\n      throw e;\n    };\n  }\n}\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n  return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options = marked.setOptions = function (options) {\n  markedInstance.setOptions(options);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n  markedInstance.use(...args);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n  return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { AsyncPipe, isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, InjectionToken, Pipe, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, Input, Output, SecurityContext, NgModule } from '@angular/core';\nimport { Subject, merge, of, timer } from 'rxjs';\nimport { switchMap, mapTo, distinctUntilChanged, shareReplay, startWith, map, takeUntil, first } from 'rxjs/operators';\nimport { Renderer, marked } from 'marked';\nconst _c0 = [\"*\"];\nexport { Renderer as MarkedRenderer } from 'marked';\nimport * as i1 from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nconst BUTTON_TEXT_COPY = 'Copy';\nconst BUTTON_TEXT_COPIED = 'Copied';\nlet ClipboardButtonComponent = /*#__PURE__*/(() => {\n  class ClipboardButtonComponent {\n    constructor() {\n      this._buttonClick$ = new Subject();\n      this.copied$ = this._buttonClick$.pipe(switchMap(() => merge(of(true), timer(3000).pipe(mapTo(false)))), distinctUntilChanged(), shareReplay(1));\n      this.copiedText$ = this.copied$.pipe(startWith(false), map(copied => copied ? BUTTON_TEXT_COPIED : BUTTON_TEXT_COPY));\n    }\n    onCopyToClipboardClick() {\n      this._buttonClick$.next();\n    }\n    static {\n      this.ɵfac = function ClipboardButtonComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ClipboardButtonComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: ClipboardButtonComponent,\n        selectors: [[\"markdown-clipboard\"]],\n        decls: 4,\n        vars: 7,\n        consts: [[1, \"markdown-clipboard-button\", 3, \"click\"]],\n        template: function ClipboardButtonComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"button\", 0);\n            i0.ɵɵpipe(1, \"async\");\n            i0.ɵɵlistener(\"click\", function ClipboardButtonComponent_Template_button_click_0_listener() {\n              return ctx.onCopyToClipboardClick();\n            });\n            i0.ɵɵtext(2);\n            i0.ɵɵpipe(3, \"async\");\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"copied\", i0.ɵɵpipeBind1(1, 3, ctx.copied$));\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 5, ctx.copiedText$));\n          }\n        },\n        dependencies: [AsyncPipe],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return ClipboardButtonComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst CLIPBOARD_OPTIONS = new InjectionToken('CLIPBOARD_OPTIONS');\n\n/* eslint-disable */\nclass KatexSpecificOptions {}\nlet LanguagePipe = /*#__PURE__*/(() => {\n  class LanguagePipe {\n    transform(value, language) {\n      if (value == null) {\n        value = '';\n      }\n      if (language == null) {\n        language = '';\n      }\n      if (typeof value !== 'string') {\n        console.error(`LanguagePipe has been invoked with an invalid value type [${typeof value}]`);\n        return value;\n      }\n      if (typeof language !== 'string') {\n        console.error(`LanguagePipe has been invoked with an invalid parameter [${typeof language}]`);\n        return value;\n      }\n      return '```' + language + '\\n' + value + '\\n```';\n    }\n    static {\n      this.ɵfac = function LanguagePipe_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LanguagePipe)();\n      };\n    }\n    static {\n      this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n        name: \"language\",\n        type: LanguagePipe,\n        pure: true\n      });\n    }\n  }\n  return LanguagePipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar PrismPlugin = /*#__PURE__*/function (PrismPlugin) {\n  PrismPlugin[\"CommandLine\"] = \"command-line\";\n  PrismPlugin[\"LineHighlight\"] = \"line-highlight\";\n  PrismPlugin[\"LineNumbers\"] = \"line-numbers\";\n  return PrismPlugin;\n}(PrismPlugin || {});\nconst MARKED_EXTENSIONS = new InjectionToken('MARKED_EXTENSIONS');\nconst MARKED_OPTIONS = new InjectionToken('MARKED_OPTIONS');\nconst MERMAID_OPTIONS = new InjectionToken('MERMAID_OPTIONS');\nconst errorJoyPixelsNotLoaded = '[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information';\nconst errorKatexNotLoaded = '[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\nconst errorMermaidNotLoaded = '[ngx-markdown] When using the `mermaid` attribute you *have to* include Mermaid files to `angular.json` or use imports. See README for more information';\nconst errorClipboardNotLoaded = '[ngx-markdown] When using the `clipboard` attribute you *have to* include Clipboard files to `angular.json` or use imports. See README for more information';\nconst errorClipboardViewContainerRequired = '[ngx-markdown] When using the `clipboard` attribute you *have to* provide the `viewContainerRef` parameter to `MarkdownService.render()` function';\nconst errorSrcWithoutHttpClient = '[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\nconst SECURITY_CONTEXT = new InjectionToken('SECURITY_CONTEXT');\nclass ExtendedRenderer extends Renderer {\n  constructor() {\n    super(...arguments);\n    this.ɵNgxMarkdownRendererExtendedForExtensions = false;\n    this.ɵNgxMarkdownRendererExtendedForMermaid = false;\n  }\n}\nlet MarkdownService = /*#__PURE__*/(() => {\n  class MarkdownService {\n    get options() {\n      return this._options;\n    }\n    set options(value) {\n      this._options = {\n        ...this.DEFAULT_MARKED_OPTIONS,\n        ...value\n      };\n    }\n    get renderer() {\n      return this.options.renderer;\n    }\n    set renderer(value) {\n      this.options.renderer = value;\n    }\n    constructor(clipboardOptions, extensions, options, mermaidOptions, platform, securityContext, http, sanitizer) {\n      this.clipboardOptions = clipboardOptions;\n      this.extensions = extensions;\n      this.mermaidOptions = mermaidOptions;\n      this.platform = platform;\n      this.securityContext = securityContext;\n      this.http = http;\n      this.sanitizer = sanitizer;\n      this.DEFAULT_MARKED_OPTIONS = {\n        renderer: new Renderer()\n      };\n      this.DEFAULT_KATEX_OPTIONS = {\n        delimiters: [{\n          left: '$$',\n          right: '$$',\n          display: true\n        }, {\n          left: '$',\n          right: '$',\n          display: false\n        }, {\n          left: '\\\\(',\n          right: '\\\\)',\n          display: false\n        }, {\n          left: '\\\\begin{equation}',\n          right: '\\\\end{equation}',\n          display: true\n        }, {\n          left: '\\\\begin{align}',\n          right: '\\\\end{align}',\n          display: true\n        }, {\n          left: '\\\\begin{alignat}',\n          right: '\\\\end{alignat}',\n          display: true\n        }, {\n          left: '\\\\begin{gather}',\n          right: '\\\\end{gather}',\n          display: true\n        }, {\n          left: '\\\\begin{CD}',\n          right: '\\\\end{CD}',\n          display: true\n        }, {\n          left: '\\\\[',\n          right: '\\\\]',\n          display: true\n        }]\n      };\n      this.DEFAULT_MERMAID_OPTIONS = {\n        startOnLoad: false\n      };\n      this.DEFAULT_CLIPBOARD_OPTIONS = {\n        buttonComponent: undefined\n      };\n      this.DEFAULT_PARSE_OPTIONS = {\n        decodeHtml: false,\n        inline: false,\n        emoji: false,\n        mermaid: false,\n        markedOptions: undefined,\n        disableSanitizer: false\n      };\n      this.DEFAULT_RENDER_OPTIONS = {\n        clipboard: false,\n        clipboardOptions: undefined,\n        katex: false,\n        katexOptions: undefined,\n        mermaid: false,\n        mermaidOptions: undefined\n      };\n      this._reload$ = new Subject();\n      this.reload$ = this._reload$.asObservable();\n      this.options = options;\n    }\n    parse(markdown, parseOptions = this.DEFAULT_PARSE_OPTIONS) {\n      const {\n        decodeHtml,\n        inline,\n        emoji,\n        mermaid,\n        disableSanitizer\n      } = parseOptions;\n      const markedOptions = {\n        ...this.options,\n        ...parseOptions.markedOptions\n      };\n      const renderer = markedOptions.renderer || this.renderer || new Renderer();\n      if (this.extensions) {\n        this.renderer = this.extendsRendererForExtensions(renderer);\n      }\n      if (mermaid) {\n        this.renderer = this.extendsRendererForMermaid(renderer);\n      }\n      const trimmed = this.trimIndentation(markdown);\n      const decoded = decodeHtml ? this.decodeHtml(trimmed) : trimmed;\n      const emojified = emoji ? this.parseEmoji(decoded) : decoded;\n      const marked = this.parseMarked(emojified, markedOptions, inline);\n      const sanitized = disableSanitizer ? marked : this.sanitizer.sanitize(this.securityContext, marked);\n      return sanitized || '';\n    }\n    render(element, options = this.DEFAULT_RENDER_OPTIONS, viewContainerRef) {\n      const {\n        clipboard,\n        clipboardOptions,\n        katex,\n        katexOptions,\n        mermaid,\n        mermaidOptions\n      } = options;\n      if (katex) {\n        this.renderKatex(element, {\n          ...this.DEFAULT_KATEX_OPTIONS,\n          ...katexOptions\n        });\n      }\n      if (mermaid) {\n        this.renderMermaid(element, {\n          ...this.DEFAULT_MERMAID_OPTIONS,\n          ...this.mermaidOptions,\n          ...mermaidOptions\n        });\n      }\n      if (clipboard) {\n        this.renderClipboard(element, viewContainerRef, {\n          ...this.DEFAULT_CLIPBOARD_OPTIONS,\n          ...this.clipboardOptions,\n          ...clipboardOptions\n        });\n      }\n      this.highlight(element);\n    }\n    reload() {\n      this._reload$.next();\n    }\n    getSource(src) {\n      if (!this.http) {\n        throw new Error(errorSrcWithoutHttpClient);\n      }\n      return this.http.get(src, {\n        responseType: 'text'\n      }).pipe(map(markdown => this.handleExtension(src, markdown)));\n    }\n    highlight(element) {\n      if (!isPlatformBrowser(this.platform)) {\n        return;\n      }\n      if (typeof Prism === 'undefined' || typeof Prism.highlightAllUnder === 'undefined') {\n        return;\n      }\n      if (!element) {\n        element = document;\n      }\n      const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\n      Array.prototype.forEach.call(noLanguageElements, x => x.classList.add('language-none'));\n      Prism.highlightAllUnder(element);\n    }\n    decodeHtml(html) {\n      if (!isPlatformBrowser(this.platform)) {\n        return html;\n      }\n      const textarea = document.createElement('textarea');\n      textarea.innerHTML = html;\n      return textarea.value;\n    }\n    extendsRendererForExtensions(renderer) {\n      const extendedRenderer = renderer;\n      if (extendedRenderer.ɵNgxMarkdownRendererExtendedForExtensions === true) {\n        return renderer;\n      }\n      if (this.extensions?.length > 0) {\n        marked.use(...this.extensions);\n      }\n      extendedRenderer.ɵNgxMarkdownRendererExtendedForExtensions = true;\n      return renderer;\n    }\n    extendsRendererForMermaid(renderer) {\n      const extendedRenderer = renderer;\n      if (extendedRenderer.ɵNgxMarkdownRendererExtendedForMermaid === true) {\n        return renderer;\n      }\n      const defaultCode = renderer.code;\n      renderer.code = token => {\n        return token.lang === 'mermaid' ? `<div class=\"mermaid\">${token.text}</div>` : defaultCode(token);\n      };\n      extendedRenderer.ɵNgxMarkdownRendererExtendedForMermaid = true;\n      return renderer;\n    }\n    handleExtension(src, markdown) {\n      const urlProtocolIndex = src.lastIndexOf('://');\n      const urlWithoutProtocol = urlProtocolIndex > -1 ? src.substring(urlProtocolIndex + 4) : src;\n      const lastSlashIndex = urlWithoutProtocol.lastIndexOf('/');\n      const lastUrlSegment = lastSlashIndex > -1 ? urlWithoutProtocol.substring(lastSlashIndex + 1).split('?')[0] : '';\n      const lastDotIndex = lastUrlSegment.lastIndexOf('.');\n      const extension = lastDotIndex > -1 ? lastUrlSegment.substring(lastDotIndex + 1) : '';\n      return !!extension && extension !== 'md' ? '```' + extension + '\\n' + markdown + '\\n```' : markdown;\n    }\n    parseMarked(html, markedOptions, inline = false) {\n      if (markedOptions.renderer) {\n        // clone renderer and remove extended flags otherwise\n        // marked throws an error thinking it is a renderer prop\n        const renderer = {\n          ...markedOptions.renderer\n        };\n        delete renderer.ɵNgxMarkdownRendererExtendedForExtensions;\n        delete renderer.ɵNgxMarkdownRendererExtendedForMermaid;\n        // remove renderer from markedOptions because if renderer is\n        // passed to marked.parse method, it will ignore all extensions\n        delete markedOptions.renderer;\n        marked.use({\n          renderer\n        });\n      }\n      return inline ? marked.parseInline(html, markedOptions) : marked.parse(html, markedOptions);\n    }\n    parseEmoji(html) {\n      if (!isPlatformBrowser(this.platform)) {\n        return html;\n      }\n      if (typeof joypixels === 'undefined' || typeof joypixels.shortnameToUnicode === 'undefined') {\n        throw new Error(errorJoyPixelsNotLoaded);\n      }\n      return joypixels.shortnameToUnicode(html);\n    }\n    renderKatex(element, options) {\n      if (!isPlatformBrowser(this.platform)) {\n        return;\n      }\n      if (typeof katex === 'undefined' || typeof renderMathInElement === 'undefined') {\n        throw new Error(errorKatexNotLoaded);\n      }\n      renderMathInElement(element, options);\n    }\n    renderClipboard(element, viewContainerRef, options) {\n      if (!isPlatformBrowser(this.platform)) {\n        return;\n      }\n      if (typeof ClipboardJS === 'undefined') {\n        throw new Error(errorClipboardNotLoaded);\n      }\n      if (!viewContainerRef) {\n        throw new Error(errorClipboardViewContainerRequired);\n      }\n      const {\n        buttonComponent,\n        buttonTemplate\n      } = options;\n      // target every <pre> elements\n      const preElements = element.querySelectorAll('pre');\n      for (let i = 0; i < preElements.length; i++) {\n        const preElement = preElements.item(i);\n        // create <pre> wrapper element\n        const preWrapperElement = document.createElement('div');\n        preWrapperElement.style.position = 'relative';\n        preElement.parentNode.insertBefore(preWrapperElement, preElement);\n        preWrapperElement.appendChild(preElement);\n        // create toolbar element\n        const toolbarWrapperElement = document.createElement('div');\n        toolbarWrapperElement.classList.add('markdown-clipboard-toolbar');\n        toolbarWrapperElement.style.position = 'absolute';\n        toolbarWrapperElement.style.top = '.5em';\n        toolbarWrapperElement.style.right = '.5em';\n        toolbarWrapperElement.style.zIndex = '1';\n        preWrapperElement.insertAdjacentElement('beforeend', toolbarWrapperElement);\n        // register listener to show/hide toolbar\n        preWrapperElement.onmouseenter = () => toolbarWrapperElement.classList.add('hover');\n        preWrapperElement.onmouseleave = () => toolbarWrapperElement.classList.remove('hover');\n        // declare embeddedViewRef holding variable\n        let embeddedViewRef;\n        // use provided component via input property\n        // or provided via ClipboardOptions provider\n        if (buttonComponent) {\n          const componentRef = viewContainerRef.createComponent(buttonComponent);\n          embeddedViewRef = componentRef.hostView;\n          componentRef.changeDetectorRef.markForCheck();\n        }\n        // use provided template via input property\n        else if (buttonTemplate) {\n          embeddedViewRef = viewContainerRef.createEmbeddedView(buttonTemplate);\n        }\n        // use default component\n        else {\n          const componentRef = viewContainerRef.createComponent(ClipboardButtonComponent);\n          embeddedViewRef = componentRef.hostView;\n          componentRef.changeDetectorRef.markForCheck();\n        }\n        // declare clipboard instance variable\n        let clipboardInstance;\n        // attach clipboard.js to root node\n        embeddedViewRef.rootNodes.forEach(node => {\n          toolbarWrapperElement.appendChild(node);\n          clipboardInstance = new ClipboardJS(node, {\n            text: () => preElement.innerText\n          });\n        });\n        // destroy clipboard instance when view is destroyed\n        embeddedViewRef.onDestroy(() => clipboardInstance.destroy());\n      }\n    }\n    renderMermaid(element, options = this.DEFAULT_MERMAID_OPTIONS) {\n      if (!isPlatformBrowser(this.platform)) {\n        return;\n      }\n      if (typeof mermaid === 'undefined' || typeof mermaid.initialize === 'undefined') {\n        throw new Error(errorMermaidNotLoaded);\n      }\n      const mermaidElements = element.querySelectorAll('.mermaid');\n      if (mermaidElements.length === 0) {\n        return;\n      }\n      mermaid.initialize(options);\n      mermaid.run({\n        nodes: mermaidElements\n      });\n    }\n    trimIndentation(markdown) {\n      if (!markdown) {\n        return '';\n      }\n      let indentStart;\n      return markdown.split('\\n').map(line => {\n        let lineIdentStart = indentStart;\n        if (line.length > 0) {\n          lineIdentStart = isNaN(lineIdentStart) ? line.search(/\\S|$/) : Math.min(line.search(/\\S|$/), lineIdentStart);\n        }\n        if (isNaN(indentStart)) {\n          indentStart = lineIdentStart;\n        }\n        return lineIdentStart ? line.substring(lineIdentStart) : line;\n      }).join('\\n');\n    }\n    static {\n      this.ɵfac = function MarkdownService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MarkdownService)(i0.ɵɵinject(CLIPBOARD_OPTIONS, 8), i0.ɵɵinject(MARKED_EXTENSIONS, 8), i0.ɵɵinject(MARKED_OPTIONS, 8), i0.ɵɵinject(MERMAID_OPTIONS, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(SECURITY_CONTEXT), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DomSanitizer));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MarkdownService,\n        factory: MarkdownService.ɵfac\n      });\n    }\n  }\n  return MarkdownService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MarkdownComponent = /*#__PURE__*/(() => {\n  class MarkdownComponent {\n    get disableSanitizer() {\n      return this._disableSanitizer;\n    }\n    set disableSanitizer(value) {\n      this._disableSanitizer = this.coerceBooleanProperty(value);\n    }\n    get inline() {\n      return this._inline;\n    }\n    set inline(value) {\n      this._inline = this.coerceBooleanProperty(value);\n    }\n    // Plugin - clipboard\n    get clipboard() {\n      return this._clipboard;\n    }\n    set clipboard(value) {\n      this._clipboard = this.coerceBooleanProperty(value);\n    }\n    // Plugin - emoji\n    get emoji() {\n      return this._emoji;\n    }\n    set emoji(value) {\n      this._emoji = this.coerceBooleanProperty(value);\n    }\n    // Plugin - katex\n    get katex() {\n      return this._katex;\n    }\n    set katex(value) {\n      this._katex = this.coerceBooleanProperty(value);\n    }\n    // Plugin - mermaid\n    get mermaid() {\n      return this._mermaid;\n    }\n    set mermaid(value) {\n      this._mermaid = this.coerceBooleanProperty(value);\n    }\n    // Plugin - lineHighlight\n    get lineHighlight() {\n      return this._lineHighlight;\n    }\n    set lineHighlight(value) {\n      this._lineHighlight = this.coerceBooleanProperty(value);\n    }\n    // Plugin - lineNumbers\n    get lineNumbers() {\n      return this._lineNumbers;\n    }\n    set lineNumbers(value) {\n      this._lineNumbers = this.coerceBooleanProperty(value);\n    }\n    // Plugin - commandLine\n    get commandLine() {\n      return this._commandLine;\n    }\n    set commandLine(value) {\n      this._commandLine = this.coerceBooleanProperty(value);\n    }\n    constructor(element, markdownService, viewContainerRef) {\n      this.element = element;\n      this.markdownService = markdownService;\n      this.viewContainerRef = viewContainerRef;\n      // Event emitters\n      this.error = new EventEmitter();\n      this.load = new EventEmitter();\n      this.ready = new EventEmitter();\n      this._clipboard = false;\n      this._commandLine = false;\n      this._disableSanitizer = false;\n      this._emoji = false;\n      this._inline = false;\n      this._katex = false;\n      this._lineHighlight = false;\n      this._lineNumbers = false;\n      this._mermaid = false;\n      this.destroyed$ = new Subject();\n    }\n    ngOnChanges() {\n      this.loadContent();\n    }\n    loadContent() {\n      if (this.data != null) {\n        this.handleData();\n        return;\n      }\n      if (this.src != null) {\n        this.handleSrc();\n        return;\n      }\n    }\n    ngAfterViewInit() {\n      if (!this.data && !this.src) {\n        this.handleTransclusion();\n      }\n      this.markdownService.reload$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.loadContent());\n    }\n    ngOnDestroy() {\n      this.destroyed$.next();\n      this.destroyed$.complete();\n    }\n    async render(markdown, decodeHtml = false) {\n      const parsedOptions = {\n        decodeHtml,\n        inline: this.inline,\n        emoji: this.emoji,\n        mermaid: this.mermaid,\n        disableSanitizer: this.disableSanitizer\n      };\n      const renderOptions = {\n        clipboard: this.clipboard,\n        clipboardOptions: this.getClipboardOptions(),\n        katex: this.katex,\n        katexOptions: this.katexOptions,\n        mermaid: this.mermaid,\n        mermaidOptions: this.mermaidOptions\n      };\n      const parsed = await this.markdownService.parse(markdown, parsedOptions);\n      this.element.nativeElement.innerHTML = parsed;\n      this.handlePlugins();\n      this.markdownService.render(this.element.nativeElement, renderOptions, this.viewContainerRef);\n      this.ready.emit();\n    }\n    coerceBooleanProperty(value) {\n      return value != null && `${String(value)}` !== 'false';\n    }\n    getClipboardOptions() {\n      if (this.clipboardButtonComponent || this.clipboardButtonTemplate) {\n        return {\n          buttonComponent: this.clipboardButtonComponent,\n          buttonTemplate: this.clipboardButtonTemplate\n        };\n      }\n      return undefined;\n    }\n    handleData() {\n      this.render(this.data);\n    }\n    handleSrc() {\n      this.markdownService.getSource(this.src).subscribe({\n        next: markdown => {\n          this.render(markdown).then(() => {\n            this.load.emit(markdown);\n          });\n        },\n        error: error => this.error.emit(error)\n      });\n    }\n    handleTransclusion() {\n      this.render(this.element.nativeElement.innerHTML, true);\n    }\n    handlePlugins() {\n      if (this.commandLine) {\n        this.setPluginClass(this.element.nativeElement, PrismPlugin.CommandLine);\n        this.setPluginOptions(this.element.nativeElement, {\n          dataFilterOutput: this.filterOutput,\n          dataHost: this.host,\n          dataPrompt: this.prompt,\n          dataOutput: this.output,\n          dataUser: this.user\n        });\n      }\n      if (this.lineHighlight) {\n        this.setPluginOptions(this.element.nativeElement, {\n          dataLine: this.line,\n          dataLineOffset: this.lineOffset\n        });\n      }\n      if (this.lineNumbers) {\n        this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\n        this.setPluginOptions(this.element.nativeElement, {\n          dataStart: this.start\n        });\n      }\n    }\n    setPluginClass(element, plugin) {\n      const preElements = element.querySelectorAll('pre');\n      for (let i = 0; i < preElements.length; i++) {\n        const classes = plugin instanceof Array ? plugin : [plugin];\n        preElements.item(i).classList.add(...classes);\n      }\n    }\n    setPluginOptions(element, options) {\n      const preElements = element.querySelectorAll('pre');\n      for (let i = 0; i < preElements.length; i++) {\n        Object.keys(options).forEach(option => {\n          const attributeValue = options[option];\n          if (attributeValue) {\n            const attributeName = this.toLispCase(option);\n            preElements.item(i).setAttribute(attributeName, attributeValue.toString());\n          }\n        });\n      }\n    }\n    toLispCase(value) {\n      const upperChars = value.match(/([A-Z])/g);\n      if (!upperChars) {\n        return value;\n      }\n      let str = value.toString();\n      for (let i = 0, n = upperChars.length; i < n; i++) {\n        str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\n      }\n      if (str.slice(0, 1) === '-') {\n        str = str.slice(1);\n      }\n      return str;\n    }\n    static {\n      this.ɵfac = function MarkdownComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MarkdownComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MarkdownService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MarkdownComponent,\n        selectors: [[\"markdown\"], [\"\", \"markdown\", \"\"]],\n        inputs: {\n          data: \"data\",\n          src: \"src\",\n          disableSanitizer: \"disableSanitizer\",\n          inline: \"inline\",\n          clipboard: \"clipboard\",\n          clipboardButtonComponent: \"clipboardButtonComponent\",\n          clipboardButtonTemplate: \"clipboardButtonTemplate\",\n          emoji: \"emoji\",\n          katex: \"katex\",\n          katexOptions: \"katexOptions\",\n          mermaid: \"mermaid\",\n          mermaidOptions: \"mermaidOptions\",\n          lineHighlight: \"lineHighlight\",\n          line: \"line\",\n          lineOffset: \"lineOffset\",\n          lineNumbers: \"lineNumbers\",\n          start: \"start\",\n          commandLine: \"commandLine\",\n          filterOutput: \"filterOutput\",\n          host: \"host\",\n          prompt: \"prompt\",\n          output: \"output\",\n          user: \"user\"\n        },\n        outputs: {\n          error: \"error\",\n          load: \"load\",\n          ready: \"ready\"\n        },\n        features: [i0.ɵɵNgOnChangesFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MarkdownComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return MarkdownComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MarkdownPipe = /*#__PURE__*/(() => {\n  class MarkdownPipe {\n    constructor(domSanitizer, elementRef, markdownService, viewContainerRef, zone) {\n      this.domSanitizer = domSanitizer;\n      this.elementRef = elementRef;\n      this.markdownService = markdownService;\n      this.viewContainerRef = viewContainerRef;\n      this.zone = zone;\n    }\n    async transform(value, options) {\n      if (value == null) {\n        return '';\n      }\n      if (typeof value !== 'string') {\n        console.error(`MarkdownPipe has been invoked with an invalid value type [${typeof value}]`);\n        return value;\n      }\n      const markdown = await this.markdownService.parse(value, options);\n      this.zone.onStable.pipe(first()).subscribe(() => this.markdownService.render(this.elementRef.nativeElement, options, this.viewContainerRef));\n      return this.domSanitizer.bypassSecurityTrustHtml(markdown);\n    }\n    static {\n      this.ɵfac = function MarkdownPipe_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MarkdownPipe)(i0.ɵɵdirectiveInject(i2.DomSanitizer, 16), i0.ɵɵdirectiveInject(i0.ElementRef, 16), i0.ɵɵdirectiveInject(MarkdownService, 16), i0.ɵɵdirectiveInject(i0.ViewContainerRef, 16), i0.ɵɵdirectiveInject(i0.NgZone, 16));\n      };\n    }\n    static {\n      this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n        name: \"markdown\",\n        type: MarkdownPipe,\n        pure: true\n      });\n    }\n  }\n  return MarkdownPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction provideMarkdown(markdownModuleConfig) {\n  return [MarkdownService, markdownModuleConfig?.loader ?? [], markdownModuleConfig?.clipboardOptions ?? [], markdownModuleConfig?.markedOptions ?? [], markdownModuleConfig?.mermaidOptions ?? [], {\n    provide: MARKED_EXTENSIONS,\n    useValue: markdownModuleConfig?.markedExtensions ?? []\n  }, {\n    provide: SECURITY_CONTEXT,\n    useValue: markdownModuleConfig?.sanitize ?? SecurityContext.HTML\n  }];\n}\n;\n;\nconst sharedDeclarations = [ClipboardButtonComponent, LanguagePipe, MarkdownComponent, MarkdownPipe];\nlet MarkdownModule = /*#__PURE__*/(() => {\n  class MarkdownModule {\n    static forRoot(markdownModuleConfig) {\n      return {\n        ngModule: MarkdownModule,\n        providers: [provideMarkdown(markdownModuleConfig)]\n      };\n    }\n    static forChild() {\n      return {\n        ngModule: MarkdownModule\n      };\n    }\n    static {\n      this.ɵfac = function MarkdownModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MarkdownModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MarkdownModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [CommonModule]\n      });\n    }\n  }\n  return MarkdownModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CLIPBOARD_OPTIONS, ClipboardButtonComponent, ExtendedRenderer, KatexSpecificOptions, LanguagePipe, MARKED_EXTENSIONS, MARKED_OPTIONS, MERMAID_OPTIONS, MarkdownComponent, MarkdownModule, MarkdownPipe, MarkdownService, PrismPlugin, SECURITY_CONTEXT, errorClipboardNotLoaded, errorClipboardViewContainerRequired, errorJoyPixelsNotLoaded, errorKatexNotLoaded, errorMermaidNotLoaded, errorSrcWithoutHttpClient, provideMarkdown };\n"],"mappings":"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","names":["HIGHLIGHT_OPTIONS","InjectionToken","provideHighlightOptions","options","LoaderErrors","HighlightLoader","inject","DOCUMENT","isPlatformBrowser","PLATFORM_ID","BehaviorSubject","firstValueFrom","filter","hljs","switchMap","tap","plugin","EMPTY","catchError","throwError","languages","langName","langLoader","importModule","langFunc","forkJoin","map","from","path","__ngFactoryType__","ɵɵdefineInjectable","moduleLoader","module","HighlightJS","signal","computed","code","__async","value","languageSubset","element","config","languageName","languageDefinition","_0","_1","alias","name","el","policy","getPolicy","s","trustedHTMLFromStringBypass","html","HighlightBase","ElementRef","DomSanitizer","effect","res","content","SecurityContext","ɵɵdefineDirective","Highlight","input","EventEmitter","ɵHighlight_BaseFactory","ɵɵgetInheritedFactory","rf","ctx","ɵɵclassProp","booleanAttribute","ɵɵProvidersFeature","ɵɵInputTransformsFeature","ɵɵInheritDefinitionFeature","HighlightModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","_getDefaults","_defaults","changeDefaults","newDefaults","noopTest","edit","regex","opt","source","obj","name","val","valSource","other","bull","indent","newline","blockCode","fences","hr","heading","bullet","lheading","_paragraph","blockText","_blockLabel","def","list","_tag","_comment","html","paragraph","blockquote","blockNormal","gfmTable","blockGfm","__spreadProps","__spreadValues","blockPedantic","escape$1","inlineCode","br","inlineText","_punctuation","_punctuationOrSpace","_notPunctuationOrSpace","punctuation","_punctuationGfmStrongEm","_punctuationOrSpaceGfmStrongEm","_notPunctuationOrSpaceGfmStrongEm","blockSkip","emStrongLDelimCore","emStrongLDelim","emStrongLDelimGfm","emStrongRDelimAstCore","emStrongRDelimAst","emStrongRDelimAstGfm","emStrongRDelimUnd","anyPunctuation","autolink","_inlineComment","tag","_inlineLabel","link","reflink","nolink","reflinkSearch","inlineNormal","inlinePedantic","inlineGfm","inlineBreaks","block","inline","escapeReplacements","getEscapeReplacement","ch","escape","encode","cleanUrl","href","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","rtrim","c","invert","l","suffLen","findClosingBracket","b","level","i","outputLink","cap","raw","lexer","rules","title","text","token","indentCodeCompensation","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","_Tokenizer","options","src","trimmed","lines","tokens","inBlockquote","currentLines","currentRaw","currentText","top","lastToken","oldToken","newText","newToken","isordered","itemRegex","endsWithBlankLine","endEarly","itemContents","line","t","nextLine","blankLine","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","rawLine","nextLineWithoutTabs","istask","ischecked","lastItem","spacers","hasMultipleLineBreaks","headers","aligns","rows","item","align","cell","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","links","linkString","maskedSrc","prevChar","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","lastCharLength","hasNonSpaceChars","hasSpaceCharsOnBothEnds","prevCapZero","_Lexer","__Lexer","next","lastParagraphClipped","extTokenizer","cutSrc","startIndex","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","_Renderer","lang","langString","code","depth","ordered","start","body","j","type","startAttr","itemBody","checkbox","checked","header","k","content","cleanHref","out","_TextRenderer","_Parser","__Parser","anyToken","genericToken","ret","textToken","renderer","_Hooks","markdown","Marked","args","callback","values","tableToken","listToken","childTokens","extensions","pack","opts","ext","prevRenderer","extLevel","prop","rendererProp","rendererFunc","tokenizer","tokenizerProp","tokenizerFunc","prevTokenizer","hooks","hooksProp","hooksFunc","prevHook","arg","walkTokens","packWalktokens","blockType","origOpt","throwError","parser","e","silent","async","msg","markedInstance","marked","setOptions","use","parseInline","parser","_Parser","lexer","_Lexer","_c0","BUTTON_TEXT_COPY","BUTTON_TEXT_COPIED","ClipboardButtonComponent","Subject","switchMap","merge","of","timer","mapTo","distinctUntilChanged","shareReplay","startWith","map","copied","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","ɵɵelementStart","ɵɵpipe","ɵɵlistener","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ɵɵpipeBind1","ɵɵadvance","ɵɵtextInterpolate","AsyncPipe","CLIPBOARD_OPTIONS","InjectionToken","PrismPlugin","MARKED_EXTENSIONS","InjectionToken","MARKED_OPTIONS","MERMAID_OPTIONS","errorJoyPixelsNotLoaded","errorKatexNotLoaded","errorMermaidNotLoaded","errorClipboardNotLoaded","errorClipboardViewContainerRequired","errorSrcWithoutHttpClient","SECURITY_CONTEXT","MarkdownService","value","__spreadValues","clipboardOptions","extensions","options","mermaidOptions","platform","securityContext","http","sanitizer","_Renderer","Subject","markdown","parseOptions","decodeHtml","inline","emoji","mermaid","disableSanitizer","markedOptions","renderer","trimmed","decoded","emojified","marked","element","viewContainerRef","clipboard","katex","katexOptions","src","errorSrcWithoutHttpClient","map","isPlatformBrowser","noLanguageElements","x","html","textarea","extendedRenderer","defaultCode","token","urlProtocolIndex","urlWithoutProtocol","lastSlashIndex","lastUrlSegment","lastDotIndex","extension","errorJoyPixelsNotLoaded","errorKatexNotLoaded","errorClipboardNotLoaded","errorClipboardViewContainerRequired","buttonComponent","buttonTemplate","preElements","i","preElement","preWrapperElement","toolbarWrapperElement","embeddedViewRef","componentRef","ClipboardButtonComponent","clipboardInstance","node","errorMermaidNotLoaded","mermaidElements","indentStart","line","lineIdentStart","__ngFactoryType__","ɵɵinject","CLIPBOARD_OPTIONS","MARKED_EXTENSIONS","MARKED_OPTIONS","MERMAID_OPTIONS","PLATFORM_ID","SECURITY_CONTEXT","HttpClient","DomSanitizer","ɵɵdefineInjectable","MarkdownComponent","markdownService","EventEmitter","takeUntil","__async","parsedOptions","renderOptions","parsed","error","PrismPlugin","plugin","classes","option","attributeValue","attributeName","upperChars","str","n","ɵɵdirectiveInject","ElementRef","ViewContainerRef","ɵɵdefineComponent","ɵɵNgOnChangesFeature","_c0","rf","ctx","ɵɵprojectionDef","ɵɵprojection","provideMarkdown","markdownModuleConfig","MarkdownService","MARKED_EXTENSIONS","SECURITY_CONTEXT","SecurityContext","MarkdownModule","markdownModuleConfig","provideMarkdown","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule"],"x_google_ignoreList":[0,1,2]}