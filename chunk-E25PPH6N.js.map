{
  "version": 3,
  "sources": ["projects/devcrate/ngx-dc-mat-select-data-source/src/lib/mat-select-option.directive.ts", "projects/devcrate/ngx-dc-mat-select-data-source/src/lib/mat-select-data-source.directive.ts", "projects/devcrate/ngx-dc-mat-select-data-source/src/lib/mat-select-data-source.module.ts", "projects/devcrate/ngx-dc-mat-select-data-source/src/public-api.ts", "projects/devcrate/ngx-dc-mat-select-data-source/src/devcrate-ngx-dc-mat-select-data-source.ts", "src/app/pages/mat-select-data-source-demo/basic-select-data-source/basic-select-data-source.data-source.ts", "src/app/pages/mat-select-data-source-demo/basic-select-data-source/basic-select-data-source.component.ts", "src/app/pages/mat-select-data-source-demo/basic-select-data-source/basic-select-data-source.component.html", "src/app/pages/mat-select-data-source-demo/mat-select-data-source-demo.component.ts", "src/app/pages/mat-select-data-source-demo/mat-select-data-source-demo.component.html"],
  "sourcesContent": ["import { Directive, TemplateRef, ViewContainerRef, inject } from \"@angular/core\";\n\n\n@Directive({\n  selector: '[ngxDcMatSelectOption]',\n  standalone: true,\n})\nexport class NgxDcMatSelectOptionDirective {\n  templateRef = inject<TemplateRef<any>>(TemplateRef);\n  viewContainer = inject(ViewContainerRef);\n}\n", "import { Directive, OnInit, OnDestroy, TemplateRef, ViewContainerRef, ElementRef, AfterContentInit, inject, input, contentChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {MatSelect} from \"@angular/material/select\";\nimport {NgxDcMatSelectOptionDirective} from \"./mat-select-option.directive\";\nimport {DestroyObservable} from \"@devcrate/ngx-dc-utils\";\nimport {takeUntil} from \"rxjs/operators\";\n\n/**\n * ```html\n * <mat-select [ngxDcMatSelectDataSource]=\"dao\" placeholder=\"Select an option\" appearance=\"outlined\">\n *   <mat-select-trigger>{{ dao.selectedItem.value.name }}</mat-select-trigger>\n *   <ng-container *ngxDcMatSelectOption=\"let item\">\n *     <mat-option [value]=\"item\">{{ item.name }}</mat-option>\n *   </ng-container>\n * </mat-select>\n * ```\n */\n@Directive({\n  standalone: true,\n  selector: '[ngxDcMatSelectDataSource]'\n})\nexport class NgxDcMatSelectDataSourceDirective extends DestroyObservable implements AfterContentInit {\n  private matSelect = inject(MatSelect);\n\n  readonly dataSource = input<any>(undefined, { alias: \"ngxDcMatSelectDataSource\" });\n  readonly optionTemplate = contentChild(NgxDcMatSelectOptionDirective);\n  private subscription: Subscription;\n\n  constructor() {\n    super()\n  }\n\n  ngOnInit() {\n    const dataSource = this.dataSource();\n    if (dataSource) {\n      dataSource.data$.pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n        const optionTemplate = this.optionTemplate();\n        if (optionTemplate) {\n          optionTemplate.viewContainer.clear()\n          data.forEach((item: any) => {\n            this.optionTemplate().viewContainer.createEmbeddedView(this.optionTemplate().templateRef, { $implicit: item });\n          })\n        }\n      });\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.dataSource() && this.matSelect?.valueChange) {\n      this.matSelect.valueChange.pipe(takeUntil(this.destroy$)).subscribe(item => {\n        this.dataSource().selectedItem.next(item)\n      });\n    }\n  }\n\n  private updateOptions(data: any[], viewContainer: ViewContainerRef, templateRef: TemplateRef<any>, matSelect: MatSelect) {\n    viewContainer.clear();\n    data.forEach(item => {\n      viewContainer.createEmbeddedView(templateRef, { $implicit: item });\n    });\n\n    // Manually trigger change detection for the MatSelect component\n    matSelect.ngAfterContentInit();\n  }\n}\n", "import {NgModule} from '@angular/core';\n\nimport {NgxDcMatSelectDataSourceDirective} from './mat-select-data-source.directive';\nimport {NgxDcMatSelectOptionDirective} from \"./mat-select-option.directive\";\n\nconst IMPORTS = [NgxDcMatSelectDataSourceDirective, NgxDcMatSelectOptionDirective]\n@NgModule({\n  imports: IMPORTS,\n  exports: IMPORTS,\n  declarations: [],\n  providers: [],\n})\nexport class NgxDcMatSelectDataSourceModule {\n}\n", "/*\n * Public API Surface of ngx-dc-mat-select-data-source\n */\n\nexport * from './lib/mat-select-data-source.directive';\nexport * from './lib/mat-select-data-source.module';\nexport * from './lib/mat-select-option.directive';\n", "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n", "import {HttpClient} from \"@angular/common/http\";\nimport { Injectable, inject } from \"@angular/core\";\nimport { NgxDcDropdownApiDataSource } from \"@devcrate/ngx-dc-dropdown\";\n\nexport interface BasicModel {\n  id: number\n  name: string\n}\n\n@Injectable()\nexport class BasicSelectDataSourceDataSource extends NgxDcDropdownApiDataSource<BasicModel> {\n  public relativePath = \"https://jsonplaceholder.typicode.com/users\"\n  public rowHeight = 48\n\n  public isActiveItem(selectedItem: BasicModel, currentItem: BasicModel): boolean {\n    return selectedItem.id == currentItem.id\n  }\n\n  public trackItems(item: BasicModel) {\n    return item.id\n  }\n\n  constructor() {\n    const httpClient = inject(HttpClient);\n\n    super(httpClient)\n  }\n}\n", "import { JsonPipe } from \"@angular/common\";\nimport { Component, OnInit, inject } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport {\n  NgxDcMatSelectDataSourceModule\n} from \"@devcrate/ngx-dc-mat-select-data-source\";\nimport { BasicSelectDataSourceDataSource } from \"./basic-select-data-source.data-source\";\n\n@Component({\n    selector: 'basic-select-data-source',\n    templateUrl: './basic-select-data-source.component.html',\n    styleUrl: './basic-select-data-source.component.scss',\n    imports: [\n        JsonPipe,\n        MatSelectModule,\n        FormsModule,\n        NgxDcMatSelectDataSourceModule,\n    ],\n    providers: [BasicSelectDataSourceDataSource]\n})\n\nexport class BasicSelectDataSourceComponent implements OnInit {\n  dataSource = inject(BasicSelectDataSourceDataSource);\n\n\n  public async ngOnInit() {\n    await this.dataSource.initialize()\n  }\n}\n", "<mat-form-field appearance=\"outline\">\n  <mat-label>Select an option</mat-label>\n  <mat-select [ngxDcMatSelectDataSource]=\"dataSource\">\n    <mat-select-trigger>{{ dataSource?.selectedItem?.value?.name || 'No item selected' }}</mat-select-trigger>\n    <ng-container *ngxDcMatSelectOption=\"let item\">\n      <mat-option [value]=\"item\">{{ item.name }}</mat-option>\n    </ng-container>\n  </mat-select>\n</mat-form-field>\n<br/>\n<div>\n{{ dataSource?.selectedItem?.value | json }}\n</div>\n", "import { Component, inject } from '@angular/core';\nimport { MatTab, MatTabGroup } from \"@angular/material/tabs\";\nimport {\n  CodeModalComponent,\n  CodeModalData,\n  DemoFileViewerComponent,\n  NgxDcDemoCardModule\n} from \"@devcrate/ngx-dc-demo-card\";\nimport { BasicSidePaneListComponent } from \"../side-pane-list-demo/basic-side-pane-list/basic-side-pane-list.component\";\nimport { BasicSelectDataSourceComponent } from \"./basic-select-data-source/basic-select-data-source.component\";\nimport { NgxDcModalService } from '@devcrate/ngx-dc-utils';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n    selector: 'app-mat-select-data-source-demo',\n    imports: [\n        DemoFileViewerComponent,\n        MatTab,\n        MatTabGroup,\n        NgxDcDemoCardModule,\n        BasicSelectDataSourceComponent,\n        MatButtonModule,\n    ],\n    templateUrl: './mat-select-data-source-demo.component.html',\n    styleUrl: './mat-select-data-source-demo.component.scss'\n})\nexport class MatSelectDataSourceDemoComponent {\n  private modalService = inject(NgxDcModalService);\n\n\n  public async showModal() {\n    const originPath = window.location.origin.includes('localhost') ? '/' : window.location.origin + window.location.pathname\n\n    await this.modalService.showModal<CodeModalData>(CodeModalComponent, {\n      data: {\n        title: 'Mat Select Data Source',\n        path: `${originPath}devcrate/ngx-dc-mat-select-data-source/README.md`,\n        previousTitles: [],\n        previousPaths: [],\n      },\n      width: '80vw',\n      height: '80vh',\n    })\n  }\n}\n", "\n<div class=\"flex align-items-center\">\n  <h1 class=\"demo-title\">Mat Select Data Source</h1>\n  <button mat-raised-button (click)=\"showModal()\">Documentation</button>\n</div>\n\n<ngx-dc-demo-card [showCodeIcon]=\"true\" [showLinkIcon]=\"false\">\n  <ng-container *ngxDcDemoCardTitle>Using a data source with a Mat Select</ng-container>\n  <ng-container *ngxDcDemoCardSubtitle>Have the power of data sources with mat selects</ng-container>\n  <mat-tab-group ngx-dc-demo-tabs>\n    <mat-tab label=\"Data Source\">\n      <ngx-dc-demo-file-viewer\n        filePath=\"app/pages/mat-select-data-source-demo/basic-select-data-source/basic-select-data-source.data-source.ts\"\n        language=\"jsx\"\n      ></ngx-dc-demo-file-viewer>\n    </mat-tab>\n    <mat-tab label=\"Component\">\n      <ngx-dc-demo-file-viewer\n        filePath=\"app/pages/mat-select-data-source-demo/basic-select-data-source/basic-select-data-source.component.ts\"\n        language=\"ts\"\n      ></ngx-dc-demo-file-viewer>\n    </mat-tab>\n    <mat-tab label=\"HTML\">\n      <ngx-dc-demo-file-viewer\n        filePath=\"app/pages/mat-select-data-source-demo/basic-select-data-source/basic-select-data-source.component.html\"\n        language=\"ts\"\n      ></ngx-dc-demo-file-viewer>\n    </mat-tab>\n    <mat-tab label=\"Styles\">\n      <ngx-dc-demo-file-viewer\n        filePath=\"app/pages/mat-select-data-source-demo/basic-select-data-source/basic-select-data-source.component.scss\"\n        language=\"scss\"\n      ></ngx-dc-demo-file-viewer>\n    </mat-tab>\n  </mat-tab-group>\n\n  <ng-container *ngxDcDemoCardExampleTitle>Live Demo</ng-container>\n  <ng-container *ngxDcDemoCardExample>\n    <basic-select-data-source></basic-select-data-source>\n  </ng-container>\n</ngx-dc-demo-card>\n\n"],
  "mappings": "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",
  "names": ["NgxDcMatSelectOptionDirective", "templateRef", "inject", "TemplateRef", "viewContainer", "ViewContainerRef", "selectors", "NgxDcMatSelectDataSourceDirective", "DestroyObservable", "matSelect", "MatSelect", "dataSource", "input", "undefined", "alias", "optionTemplate", "contentChild", "subscription", "constructor", "ngOnInit", "data$", "pipe", "takeUntil", "destroy$", "subscribe", "data", "clear", "forEach", "item", "createEmbeddedView", "$implicit", "ngAfterContentInit", "valueChange", "selectedItem", "next", "updateOptions", "\u0275dir", "\u0275\u0275defineDirective", "contentQueries", "rf", "ctx", "dirIndex", "NgxDcMatSelectDataSourceModule", "\u0275mod", "\u0275\u0275defineNgModule", "BasicSelectDataSourceDataSource", "NgxDcDropdownApiDataSource", "relativePath", "rowHeight", "isActiveItem", "selectedItem", "currentItem", "id", "trackItems", "item", "constructor", "httpClient", "inject", "HttpClient", "factory", "\u0275fac", "\u0275\u0275elementContainerStart", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "item_r1", "\u0275\u0275textInterpolate", "name", "BasicSelectDataSourceComponent", "dataSource", "inject", "BasicSelectDataSourceDataSource", "ngOnInit", "__async", "initialize", "selectors", "features", "\u0275\u0275ProvidersFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "BasicSelectDataSourceComponent_ng_container_6_Template", "\u0275\u0275element", "selectedItem", "value", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "MatSelectModule", "MatFormField", "MatLabel", "MatSelect", "MatSelectTrigger", "MatOption", "FormsModule", "NgxDcMatSelectDataSourceModule", "NgxDcMatSelectDataSourceDirective", "NgxDcMatSelectOptionDirective", "JsonPipe", "styles", "\u0275\u0275elementContainerStart", "\u0275\u0275text", "\u0275\u0275element", "MatSelectDataSourceDemoComponent", "modalService", "inject", "NgxDcModalService", "showModal", "__async", "originPath", "window", "location", "origin", "includes", "pathname", "CodeModalComponent", "data", "title", "path", "previousTitles", "previousPaths", "width", "height", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275template", "MatSelectDataSourceDemoComponent_ng_container_6_Template", "MatSelectDataSourceDemoComponent_ng_container_7_Template", "MatSelectDataSourceDemoComponent_ng_container_17_Template", "MatSelectDataSourceDemoComponent_ng_container_18_Template", "\u0275\u0275advance", "\u0275\u0275property", "DemoFileViewerComponent", "MatTab", "MatTabGroup", "NgxDcDemoCardModule", "NgxDcDemoCardComponent", "NgxDcDemoCardTitleDirective", "NgxDcDemoCardSubtitleDirective", "NgxDcDemoCardExampleDirective", "NgxDcDemoTabsDirective", "NgxDcDemoCardExampleTitleDirective", "BasicSelectDataSourceComponent", "MatButtonModule", "MatButton", "encapsulation"]
}
