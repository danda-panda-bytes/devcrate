{
  "version": 3,
  "sources": ["node_modules/prismjs/themes/prism-okaidia.css", "node_modules/prismjs/plugins/line-numbers/prism-line-numbers.css", "node_modules/prismjs/plugins/line-highlight/prism-line-highlight.css", "node_modules/highlight.js/styles/github-dark.css", "node_modules/@devcrate/ngx-dc-styles/material-theming.scss", "src/styles.scss", "node_modules/@devcrate/ngx-dc-styles/material-overrides.scss", "node_modules/@devcrate/ngx-dc-styles/_basic.scss", "src/_fonts.scss", "src/custom-styles.scss", "node_modules/@angular/material/core/ripple/_ripple.scss", "node_modules/@angular/cdk/a11y/_index.scss", "node_modules/@angular/cdk/overlay/_index.scss", "node_modules/@angular/cdk/text-field/_index.scss", "node_modules/@angular/material/core/focus-indicators/_private.scss", "node_modules/@angular/material/core/style/_layout-common.scss", "node_modules/@angular/material/core/_core.scss", "node_modules/@angular/material/core/tokens/_token-utils.scss", "node_modules/@angular/material/core/tokens/_m3-tokens.scss", "src/generated-dark-color-theme.scss", "node_modules/@angular/material/core/_core-theme.scss", "src/generated-light-color-theme.scss"],
  "sourcesContent": ["/**\n * okaidia theme for JavaScript, CSS and HTML\n * Loosely based on Monokai textmate theme by http://www.monokai.nl/\n * @author ocodia\n */\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n\tcolor: #f8f8f2;\n\tbackground: none;\n\ttext-shadow: 0 1px rgba(0, 0, 0, 0.3);\n\tfont-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n\tfont-size: 1em;\n\ttext-align: left;\n\twhite-space: pre;\n\tword-spacing: normal;\n\tword-break: normal;\n\tword-wrap: normal;\n\tline-height: 1.5;\n\n\t-moz-tab-size: 4;\n\t-o-tab-size: 4;\n\ttab-size: 4;\n\n\t-webkit-hyphens: none;\n\t-moz-hyphens: none;\n\t-ms-hyphens: none;\n\thyphens: none;\n}\n\n/* Code blocks */\npre[class*=\"language-\"] {\n\tpadding: 1em;\n\tmargin: .5em 0;\n\toverflow: auto;\n\tborder-radius: 0.3em;\n}\n\n:not(pre) > code[class*=\"language-\"],\npre[class*=\"language-\"] {\n\tbackground: #272822;\n}\n\n/* Inline code */\n:not(pre) > code[class*=\"language-\"] {\n\tpadding: .1em;\n\tborder-radius: .3em;\n\twhite-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n\tcolor: #8292a2;\n}\n\n.token.punctuation {\n\tcolor: #f8f8f2;\n}\n\n.token.namespace {\n\topacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.constant,\n.token.symbol,\n.token.deleted {\n\tcolor: #f92672;\n}\n\n.token.boolean,\n.token.number {\n\tcolor: #ae81ff;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n\tcolor: #a6e22e;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string,\n.token.variable {\n\tcolor: #f8f8f2;\n}\n\n.token.atrule,\n.token.attr-value,\n.token.function,\n.token.class-name {\n\tcolor: #e6db74;\n}\n\n.token.keyword {\n\tcolor: #66d9ef;\n}\n\n.token.regex,\n.token.important {\n\tcolor: #fd971f;\n}\n\n.token.important,\n.token.bold {\n\tfont-weight: bold;\n}\n.token.italic {\n\tfont-style: italic;\n}\n\n.token.entity {\n\tcursor: help;\n}\n", "pre[class*=\"language-\"].line-numbers {\n\tposition: relative;\n\tpadding-left: 3.8em;\n\tcounter-reset: linenumber;\n}\n\npre[class*=\"language-\"].line-numbers > code {\n\tposition: relative;\n\twhite-space: inherit;\n}\n\n.line-numbers .line-numbers-rows {\n\tposition: absolute;\n\tpointer-events: none;\n\ttop: 0;\n\tfont-size: 100%;\n\tleft: -3.8em;\n\twidth: 3em; /* works for line-numbers below 1000 lines */\n\tletter-spacing: -1px;\n\tborder-right: 1px solid #999;\n\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n\n}\n\n\t.line-numbers-rows > span {\n\t\tdisplay: block;\n\t\tcounter-increment: linenumber;\n\t}\n\n\t\t.line-numbers-rows > span:before {\n\t\t\tcontent: counter(linenumber);\n\t\t\tcolor: #999;\n\t\t\tdisplay: block;\n\t\t\tpadding-right: 0.8em;\n\t\t\ttext-align: right;\n\t\t}\n", "pre[data-line] {\n\tposition: relative;\n\tpadding: 1em 0 1em 3em;\n}\n\n.line-highlight {\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\tpadding: inherit 0;\n\tmargin-top: 1em; /* Same as .prism\u2019s padding-top */\n\n\tbackground: hsla(24, 20%, 50%,.08);\n\tbackground: linear-gradient(to right, hsla(24, 20%, 50%,.1) 70%, hsla(24, 20%, 50%,0));\n\n\tpointer-events: none;\n\n\tline-height: inherit;\n\twhite-space: pre;\n}\n\n@media print {\n\t.line-highlight {\n\t\t/*\n\t\t * This will prevent browsers from replacing the background color with white.\n\t\t * It's necessary because the element is layered on top of the displayed code.\n\t\t */\n\t\t-webkit-print-color-adjust: exact;\n\t\tcolor-adjust: exact;\n\t}\n}\n\n\t.line-highlight:before,\n\t.line-highlight[data-end]:after {\n\t\tcontent: attr(data-start);\n\t\tposition: absolute;\n\t\ttop: .4em;\n\t\tleft: .6em;\n\t\tmin-width: 1em;\n\t\tpadding: 0 .5em;\n\t\tbackground-color: hsla(24, 20%, 50%,.4);\n\t\tcolor: hsl(24, 20%, 95%);\n\t\tfont: bold 65%/1.5 sans-serif;\n\t\ttext-align: center;\n\t\tvertical-align: .3em;\n\t\tborder-radius: 999px;\n\t\ttext-shadow: none;\n\t\tbox-shadow: 0 1px white;\n\t}\n\n\t.line-highlight[data-end]:after {\n\t\tcontent: attr(data-end);\n\t\ttop: auto;\n\t\tbottom: .4em;\n\t}\n\n.line-numbers .line-highlight:before,\n.line-numbers .line-highlight:after {\n\tcontent: none;\n}\n\npre[id].linkable-line-numbers span.line-numbers-rows {\n\tpointer-events: all;\n}\npre[id].linkable-line-numbers span.line-numbers-rows > span:before {\n\tcursor: pointer;\n}\npre[id].linkable-line-numbers span.line-numbers-rows > span:hover:before {\n\tbackground-color: rgba(128, 128, 128, .2);\n}\n", "pre code.hljs {\n  display: block;\n  overflow-x: auto;\n  padding: 1em\n}\ncode.hljs {\n  padding: 3px 5px\n}\n/*!\n  Theme: GitHub Dark\n  Description: Dark theme as seen on github.com\n  Author: github.com\n  Maintainer: @Hirse\n  Updated: 2021-05-15\n\n  Outdated base version: https://github.com/primer/github-syntax-dark\n  Current colors taken from GitHub's CSS\n*/\n.hljs {\n  color: #c9d1d9;\n  background: #0d1117\n}\n.hljs-doctag,\n.hljs-keyword,\n.hljs-meta .hljs-keyword,\n.hljs-template-tag,\n.hljs-template-variable,\n.hljs-type,\n.hljs-variable.language_ {\n  /* prettylights-syntax-keyword */\n  color: #ff7b72\n}\n.hljs-title,\n.hljs-title.class_,\n.hljs-title.class_.inherited__,\n.hljs-title.function_ {\n  /* prettylights-syntax-entity */\n  color: #d2a8ff\n}\n.hljs-attr,\n.hljs-attribute,\n.hljs-literal,\n.hljs-meta,\n.hljs-number,\n.hljs-operator,\n.hljs-variable,\n.hljs-selector-attr,\n.hljs-selector-class,\n.hljs-selector-id {\n  /* prettylights-syntax-constant */\n  color: #79c0ff\n}\n.hljs-regexp,\n.hljs-string,\n.hljs-meta .hljs-string {\n  /* prettylights-syntax-string */\n  color: #a5d6ff\n}\n.hljs-built_in,\n.hljs-symbol {\n  /* prettylights-syntax-variable */\n  color: #ffa657\n}\n.hljs-comment,\n.hljs-code,\n.hljs-formula {\n  /* prettylights-syntax-comment */\n  color: #8b949e\n}\n.hljs-name,\n.hljs-quote,\n.hljs-selector-tag,\n.hljs-selector-pseudo {\n  /* prettylights-syntax-entity-tag */\n  color: #7ee787\n}\n.hljs-subst {\n  /* prettylights-syntax-storage-modifier-import */\n  color: #c9d1d9\n}\n.hljs-section {\n  /* prettylights-syntax-markup-heading */\n  color: #1f6feb;\n  font-weight: bold\n}\n.hljs-bullet {\n  /* prettylights-syntax-markup-list */\n  color: #f2cc60\n}\n.hljs-emphasis {\n  /* prettylights-syntax-markup-italic */\n  color: #c9d1d9;\n  font-style: italic\n}\n.hljs-strong {\n  /* prettylights-syntax-markup-bold */\n  color: #c9d1d9;\n  font-weight: bold\n}\n.hljs-addition {\n  /* prettylights-syntax-markup-inserted */\n  color: #aff5b4;\n  background-color: #033a16\n}\n.hljs-deletion {\n  /* prettylights-syntax-markup-deleted */\n  color: #ffdcd7;\n  background-color: #67060c\n}\n.hljs-char.escape_,\n.hljs-link,\n.hljs-params,\n.hljs-property,\n.hljs-punctuation,\n.hljs-tag {\n  /* purposely ignored */\n  \n}", "/**\n*  material-custom.scss\n*   This custom scss supports Material v17 and below\n*\n*  Helpful Resources:\n*    - Theming Angular Material: https://material.angular.io/guide/theming\n*    - Customizing Typography: https://material.angular.io/guide/typography\n*    - General Guides: https://material.angular.io/guides\n*/\n\n// mixin that enables css variables in dark mode\n@mixin dark() {\n  // Material issue fixes for dark theme\n  --mdc-icon-button-icon-color: var(--sys-on-background);\n}\n\n@mixin devCrateStyles() {\n  // Handle buttons appropriately, with respect to line-height\n  .mat-raised-button, .mat-stroked-button, .mat-flat-button {\n    padding: 0 1.15em;\n    margin: 0 0.65em;\n    min-width: 3em;\n    line-height: 36.4px\n  }\n\n  .mat-standard-chip {\n    padding: .5em .85em;\n    min-height: 2.5em;\n  }\n\n  // Increase size of Mat Badge to accommodate 3 digit numbers\n  .mat-badge-content {\n    width: auto;\n    display: grid;\n    min-width: 30px;\n    min-height: 30px;\n    text-align: center;\n    align-items: center;\n    padding: 5px 3px;\n    top: -20px;\n    right: -22px;\n  }\n  // System Variables for theme\n  @include dark();\n\n  // Mat Checkbox\n  --mdc-checkbox-state-layer-size: 36px;\n\n  .mat-mdc-checkbox {\n    --mdc-form-field-label-text-size: 13px !important;\n  }\n\n  // Mat Form Fields\n  --mat-form-field-filled-with-label-container-padding-top: 12px;\n  --mat-form-field-filled-with-label-container-padding-bottom: 8px;\n  --mat-form-field-container-text-size: 14px;\n  --mdc-form-field-label-text-size: 12px;\n  --mdc-list-list-item-label-text-size: 14px !important;\n  --mat-form-field-container-vertical-padding: 8px;\n  --mat-form-field-container-height: 36px;\n  --mdc-filled-text-field-label-text-size: 12px;\n  --mat-form-field-outlined-label-text-populated-size: 12px;\n  --mdc-outlined-text-field-label-text-size: 12px;\n  --mdc-outlined-text-field-label-text-weight: 400;\n  --mdc-outlined-text-field-input-text-placeholder-color: rgba(0, 0, 0, 0.4);\n  --mat-form-field-subscript-text-line-height: 8px;\n  --mat-form-field-subscript-text-size: 10px;\n  --mdc-filled-text-field-container-color: var(--sys-background);\n\n  // Buttons\n  --mdc-icon-button-icon-size: 20px;\n  --mdc-protected-button-label-text-size: 12px;\n  --mdc-text-button-container-height: 28px;\n  --mdc-filled-button-container-height: 28px;\n  --mdc-outlined-button-container-height: 28px;\n  --mdc-protected-button-container-height: 28px;\n  --mat-protected-button-horizontal-padding: 10px;\n\n  // Modals\n  --mdc-dialog-container-shape: 4px;\n  --mat-dialog-container-max-width: 65vw;\n  --mat-dialog-actions-padding: 8px 12px;\n  --mat-dialog-content-padding: 10px 12px;\n  --mat-dialog-with-actions-content-padding: 10px 12px 0;\n  --mat-dialog-headline-padding: 4px 12px 8px;\n\n  .mat-mdc-dialog-title::before {\n    height: initial;\n  }\n\n  // Mat icon button\n  mat-form-field:has(input) {\n    :not(mat-datepicker-toggle) {\n      > [mat-icon-button] {\n        left: -8px;\n      }\n    }\n  }\n\n  // Input form field icons\n  mat-form-field:has(input) {\n    .mat-mdc-icon-button.mat-mdc-button-base {\n      --mdc-icon-button-state-layer-size: 30px;\n      .mat-icon {\n        font-size: 22px;\n        top: 0;\n        left: 0;\n      }\n    }\n  }\n\n  // Mat table\n  .mat-mdc-header-row {\n    --mat-table-header-container-height: 40px;\n    --mat-table-row-container-height: 40px;\n  }\n\n  .mat-mdc-row {\n    --mat-table-row-item-container-height: 40px;\n  }\n}\n\n/**\n * Usage:\n * ```scss\n * @include themed-colored-classes(\n *   'no-barcode',\n *   var(--no-barcode-text-color),\n *   var(--no-barcode-bg-active-color),\n *   var(--no-barcode-bg-color),\n *   var(--no-barcode-text-active-color),\n *   var(--no-barcode-icon-color),\n *   var(--no-barcode-icon-active-color)\n * );\n * ```\n */\n@mixin themed-colored-classes($name, $text-color, $bg-active-color, $bg-color, $text-active-color, $icon-color, $icon-active-color) {\n  .#{$name}-bg-color {\n    @include bg-color(\n        $text-color,\n        $bg-active-color,\n        $bg-color,\n        $text-active-color\n    );\n  }\n\n  .#{$name}-text-color {\n    @include text-color(\n        $text-color,\n        $text-active-color\n    )\n  }\n\n  .#{$name}-icon-color {\n    @include icon-color(\n        $icon-color,\n        $icon-active-color\n    )\n  }\n}\n", "@use '@angular/material' as mat;\n@use './generated-light-color-theme' as theme;\n@use './generated-dark-color-theme' as darkTheme;\n@use \"../node_modules/@devcrate/ngx-dc-styles/material-theming\" as devCrateStyles;\n\n@import \"../node_modules/@devcrate/ngx-dc-styles\";\n\n@import 'prismjs/themes/prism-okaidia.css';\n@import 'prismjs/plugins/line-numbers/prism-line-numbers.css';\n@import 'prismjs/plugins/line-highlight/prism-line-highlight.css';\n@import 'highlight.js/styles/github-dark.css';\n\n@import './fonts';\n@import './custom-styles';\n\n@include mat.core();\n\n$dark-theme-config:  (\n  color:(\n    theme-type: dark,\n    use-system-variables: true\n  ),\n  typography: (\n    use-system-variables: true,\n  )\n);\n$dark-theme: mat.define-theme($dark-theme-config);\n\n\n$light-theme-config: (\n  color:(\n    theme-type: light,\n    use-system-variables: true\n  ),\n  typography: (\n    use-system-variables: true,\n  )\n);\n$light-theme:  mat.define-theme($light-theme-config);\n\nbody {\n  height: 100vh;\n  overflow: hidden;\n\n  * {\n    scrollbar-color: darkgray transparent;\n    scrollbar-width: thin;\n    scrollbar-gutter: auto;\n  }\n\n  @include mat.all-component-themes($dark-theme);\n  @include mat.system-level-colors($dark-theme);\n  @include mat.system-level-typography($dark-theme);\n  @include darkTheme.dark-system-vars();\n  @include devCrateStyles.devCrateStyles();\n\n\n  // Modals\n  --mdc-dialog-container-shape: 4px;\n  --mat-dialog-container-max-width: 65vw;\n  --mat-dialog-actions-padding: 8px 12px;\n  --mat-dialog-content-padding: 10px 12px;\n  --mat-dialog-with-actions-content-padding: 10px 12px 0;\n  --mat-dialog-headline-padding: 4px 12px 8px;\n\n  .mat-mdc-dialog-title::before {\n    height: initial;\n  }\n\n  a {\n    color: var(--sys-on-primary-container);\n  }\n\n}\n\n.light-theme {\n  @include mat.all-component-colors($light-theme);\n  @include mat.system-level-colors($light-theme);\n  @include mat.system-level-typography($light-theme);\n  @include theme.light-system-vars();\n}\n\n", "// Specific component overrides, pieces that are not in line with the general theming\na:hover {\n  text-decoration: none !important;\n}\n\n// Mat Card\nmat-card.mat-mdc-card {\n  border-color: var(--mat-tab-header-divider-color);\n  border-width: 1px;\n\n  mat-card-title.mat-card-title {\n    padding: 16px 16px 0;\n  }\n\n  mat-card-subtitle.mat-card-subtitle {\n    border-bottom: var(--mat-tab-header-divider-color) solid 1px;\n    padding: 4px 16px 16px;\n  }\n}\n\n// Progress bar\ninput[matInput] + mat-progress-bar,\nmat-select + mat-progress-bar {\n  top: 0;\n  left: -16px;\n  right: 16px;\n  width: calc(100% + 32px) !important;\n  border-radius: 20px;\n}\n\n.mat-mdc-menu-content {\n  padding: 0 !important;\n}\n\n.mat-icon {\n  top: 0;\n  position: relative;\n}\n\nmat-icon svg path {\n  fill: currentColor;\n}\n\nmat-checkbox > .mdc-form-field > .mdc-checkbox > label {\n  padding-left: 0;\n}\n\n.mat-mdc-icon-button.mat-mdc-button-base {\n  --mdc-icon-button-state-layer-size: 32px;\n  padding: 4px;\n\n  mat-icon {\n    &.mat-icon {\n      height: 24px;\n      width: 24px;\n    }\n\n    &.material-icons {\n      font-size: 22px;\n    }\n  }\n}\n\nmat-form-field {\n  margin-right: 8px;\n\n  .mat-mdc-form-field-subscript-wrapper {\n    display: none;\n  }\n}\n\nmat-form-field.include-errors,\nmat-form-field.include-hints {\n  .mat-mdc-form-field-subscript-wrapper {\n    display: flex;\n  }\n\n  mat-error {\n    padding-top: 1px;\n    padding-bottom: 1px;\n\n    &::before {\n      content: unset;\n    }\n  }\n\n  &.expansive-error {\n    .mat-mdc-form-field-error-wrapper {\n      position: relative;\n      padding-top: 4px;\n      padding-bottom: 4px;\n    }\n  }\n}\n\nmat-checkbox {\n  top: 0;\n  position: relative;\n\n  .mdc-checkbox__checkmark {\n    width: 14px;\n    height: 14px;\n  }\n\n  .mat-mdc-checkbox-touch-target {\n    height: 24px;\n    width: 24px;\n  }\n\n  label {\n    margin: 0;\n    top: 1px;\n    position: relative;\n  }\n}\n\nmat-form-field {\n  mat-datepicker-toggle {\n    right: 4px;\n    position: relative;\n\n    .mat-mdc-icon-button.mat-mdc-button-base {\n      --mdc-icon-button-state-layer-size: 32px;\n      padding: 4px;\n    }\n  }\n}\n\nmat-list-item.heading {\n  .mat-mdc-list-item-unscoped-content {\n    opacity: 1 !important;\n  }\n}\n\n// Handle buttons appropriately, with respect to line-height\n.mat-raised-button, .mat-stroked-button, .mat-flat-button {\n  padding: 0 1.15em;\n  margin: 0 .65em;\n  min-width: 3em;\n  line-height: 36.4px\n}\n\n.mat-standard-chip {\n  padding: .5em .85em;\n  min-height: 2.5em;\n}\n\n.material-icons {\n  font-size: 24px;\n  font-family: 'Material Icons', 'Material Icons';\n  .mat-badge-content {\n    font-family: 'Roboto', 'Helvetica Neue', sans-serif;\n  }\n}\n\n// Increase size of Mat Badge to accommodate 3 digit numbers\n.mat-badge-content {\n  width: auto;\n  display: grid;\n  min-width: 30px;\n  min-height: 30px;\n  text-align: center;\n  align-items: center;\n  padding: 5px 3px;\n  top: -20px;\n  right: -22px;\n}\n\n.snackbar-success, .snackbar-success span {\n  font-size: 18px;\n}\n\n.snackbar-error, .snackbar-error span {\n  font-size: 18px;\n}\n\nmat-form-field:has(input) {\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    padding: 4px !important;\n  }\n}\n\n.mat-mdc-button-base {\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\n\n", "html, body { height: 100%; }\nbody { margin: 0; font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\ntable { width: 100%; }\n\n// Shared Styles\n.w-100 {\n  width: 100%;\n}\n\n.flex {\n  display: flex;\n}\n\n.flex-row {\n  flex-direction: row;\n}\n\n.flex-column {\n  flex-direction: column;\n}\n\n.align-items-center {\n  align-items: center;\n}\n\n.justify-content-center {\n  justify-content: center;\n}\n\n.fill {\n  flex: 1;\n}\n\n.no-padding {\n  padding: 0;\n}\n\n.no-margin {\n  padding: 0;\n}\n", "@font-face {\n  font-family: 'Material Symbols Outlined';\n  font-style: normal;\n  font-weight: 400;\n  src: url(assets/icons/material-symbols-outlined.woff2) format('woff2');\n}\n\n.material-symbols-outlined {\n  font-family: 'Material Symbols Outlined';\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: 'liga';\n  -webkit-font-smoothing: antialiased;\n}\n\n@font-face {\n  font-family: 'Material Icons';\n  font-style: normal;\n  font-weight: 400;\n  src: local(''),\n  url(assets/icons/MaterialIcons-Regular.woff2) format('woff2'),\n  url(assets/icons/MaterialIcons-Regular.woff) format('woff');\n}\n\n.material-icons {\n  font-family: 'Material Icons';\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: 'liga';\n  -webkit-font-smoothing: antialiased;\n  font-feature-settings: 'liga';\n}\n\n/* roboto-300 - latin-ext_latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 300;\n  src: local(''),\n  url('assets/fonts/roboto-v20-latin-ext_latin-300.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n  url('assets/fonts/roboto-v20-latin-ext_latin-300.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n\n/* roboto-regular - latin-ext_latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  src: local(''),\n  url('assets/fonts/roboto-v20-latin-ext_latin-regular.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n  url('assets/fonts/roboto-v20-latin-ext_latin-regular.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n\n/* roboto-500 - latin-ext_latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  src: local(''),\n  url('assets/fonts/roboto-v20-latin-ext_latin-500.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n  url('assets/fonts/roboto-v20-latin-ext_latin-500.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n", ".demo-title {\n  margin-right: 24px;\n}\n\nmarkdown {\n  blockquote {\n    border: 2px solid rgba(0, 255, 255, 0.2);\n    padding-left: 12px;\n    margin: 0;\n    background-color: rgba(0, 255, 255, 0.15);\n  }\n\n  table th,\n  table td {\n    text-align: left;\n  }\n\n  table {\n    tbody {\n      tr{\n        &:nth-of-type(even) {\n          background-color: rgba(211, 211, 211, 0.2);\n          color: white;\n        }\n\n        &:nth-of-type(odd) {\n          background-color: rgba(0, 0, 0, 0.2);\n          background-color: black;\n        }\n      }\n    }\n  }\n\n}\n", "@use '@angular/cdk';\n@use '../tokens/m2/mat/ripple' as tokens-mat-ripple;\n@use '../tokens/token-utils';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n\n    // We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    transform: scale3d(0, 0, 0);\n\n    @include token-utils.use-tokens(\n      tokens-mat-ripple.$prefix, tokens-mat-ripple.get-token-slots()) {\n      // We have to emit a fallback value here, because some internal builds depend on it.\n      background-color: token-utils.get-token-variable(color, $fallback: rgba(#000, 0.1));\n    }\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk.high-contrast(active, off) {\n      display: none;\n    }\n\n    // Hide ripples inside cloned drag&drop elements since they won't go away.\n    .cdk-drag-preview &,\n    .cdk-drag-placeholder & {\n      display: none;\n    }\n  }\n}\n", "/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n", "// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .cdk-overlay-backdrop-noop-animation {\n    transition: none;\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n", "// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when a text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n", "@use 'sass:map';\n@use 'sass:meta';\n@use '@angular/cdk';\n@use '../style/layout-common';\n@use '../theming/theming';\n@use '../theming/inspection';\n\n// Private sass variables that will be used as reference throughout component stylesheets.\n$default-border-width: 3px;\n$default-border-style: solid;\n$default-border-color: transparent;\n$default-border-radius: 4px;\n\n// Mixin that renders the focus indicator structural styles.\n@mixin structural-styling($prefix) {\n  .#{$prefix}-focus-indicator {\n    position: relative;\n\n    &::before {\n      @include layout-common.fill();\n      box-sizing: border-box;\n      pointer-events: none;\n      display: var(--#{$prefix}-focus-indicator-display, none); // Hide the indicator by default.\n      border: var(\n          --#{$prefix}-focus-indicator-border-width,\n          #{$default-border-width}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-style,\n          #{$default-border-style}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-color,\n          #{$default-border-color}\n        );\n      border-radius: var(\n        --#{$prefix}-focus-indicator-border-radius,\n        #{$default-border-radius}\n      );\n    }\n\n    // By default, render the focus indicator when the focus indicator host element takes focus.\n    // Defining a pseudo element's content will cause it to render.\n    &:focus::before {\n      content: '';\n    }\n  }\n\n  // Enable the indicator in high contrast mode.\n  @include cdk.high-contrast(active, off) {\n    @include customize-focus-indicators((display: block), $prefix);\n  }\n}\n\n// Generates CSS variable declarations from a map.\n@mixin _output-variables($map) {\n  @each $key, $value in $map {\n    @if ($value) {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n// Mixin that dedups CSS variables for the strong-focus-indicators mixin.\n@mixin customize-focus-indicators($config, $prefix) {\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n  $border-color: map.get($config, border-color);\n  $display: map.get($config, display);\n  $map: (\n    '#{$prefix}-focus-indicator-border-style': $border-style,\n    '#{$prefix}-focus-indicator-border-width': $border-width,\n    '#{$prefix}-focus-indicator-border-radius': $border-radius,\n    '#{$prefix}-focus-indicator-border-color': $border-color,\n    '#{$prefix}-focus-indicator-display': $display,\n  );\n\n  @if (&) {\n    @include _output-variables($map);\n  }\n  @else {\n    // We use `html` here instead of `:root`, because the\n    // latter causes some issues with internal tooling.\n    html {\n      @include _output-variables($map);\n    }\n  }\n}\n\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat');\n}\n\n@mixin mdc-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat-mdc');\n}\n\n@mixin strong-focus-indicators-color($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat');\n  }\n  @else {\n    $border-color: inspection.get-theme-color($theme-or-color, primary);\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat');\n  }\n}\n\n@mixin strong-focus-indicators-theme($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat');\n  }\n  @else {\n    @include theming.private-check-duplicate-theme-styles($theme-or-color, 'mat-focus-indicators') {\n      @if inspection.theme-has($theme-or-color, color) {\n        @include strong-focus-indicators-color($theme-or-color);\n      }\n    }\n  }\n}\n\n@mixin mdc-strong-focus-indicators-color($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $border-color: inspection.get-theme-color($theme-or-color, primary);\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat-mdc');\n  }\n}\n\n@mixin mdc-strong-focus-indicators-theme($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    @include theming.private-check-duplicate-theme-styles(\n        $theme-or-color, 'mat-mdc-focus-indicators') {\n      @if inspection.theme-has($theme-or-color, color) {\n        @include mdc-strong-focus-indicators-color($theme-or-color);\n      }\n    }\n  }\n}\n", "// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n", "@use '@angular/cdk';\n@use './tokens/m2/mat/app' as tokens-mat-app;\n@use './tokens/token-utils';\n@use './ripple/ripple';\n@use './style/elevation';\n@use './focus-indicators/private';\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin core() {\n  @include ripple.ripple();\n  @include cdk.a11y-visually-hidden();\n  @include cdk.overlay();\n  @include cdk.text-field-autosize();\n  @include cdk.text-field-autofill();\n  @include private.structural-styling('mat');\n  @include private.structural-styling('mat-mdc');\n\n  // Wrapper element that provides the theme background when the\n  // user's content isn't inside of a `mat-sidenav-container`.\n  @at-root {\n    // Note: we need to emit fallback values here to avoid errors in internal builds.\n    @include token-utils.use-tokens(tokens-mat-app.$prefix, tokens-mat-app.get-token-slots()) {\n      .mat-app-background {\n        @include token-utils.create-token-slot(background-color, background-color, transparent);\n        @include token-utils.create-token-slot(color, text-color, inherit);\n      }\n\n      // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n      // `mat-elevation-z$z-value` where `$z-value` corresponds to the z-space to which the element\n      // is elevated.\n      @for $z-value from 0 through 24 {\n        $selector: elevation.$prefix + $z-value;\n        // We need the `mat-mdc-elevation-specific`, because some MDC mixins\n        // come with elevation baked in and we don't have a way of removing it.\n        .#{$selector}, .mat-mdc-elevation-specific.#{$selector} {\n          @include token-utils.create-token-slot(box-shadow, 'elevation-shadow-level-#{$z-value}',\n            none);\n        }\n      }\n    }\n  }\n}\n", "@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '../style/elevation';\n@use '../style/sass-utils';\n@use './m3-tokens';\n\n$_tokens: null;\n$_component-prefix: null;\n$_system-fallbacks: m3-tokens.create-system-fallbacks();\n\n// Sets the token prefix and map to use when creating token slots.\n@mixin use-tokens($prefix, $tokens) {\n  $_component-prefix: $prefix !global;\n  $_tokens: $tokens !global;\n\n  @content;\n\n  $_component-prefix: null !global;\n  $_tokens: null !global;\n}\n\n// Combines a prefix and a string to generate a CSS variable name for a token.\n@function _create-var-name($prefix, $token) {\n  @if $prefix == null or $token == null {\n    @error 'Must specify both prefix and name when generating token';\n  }\n\n  $string-prefix: '';\n\n  // Prefixes are lists so we need to combine them.\n  @each $part in $prefix {\n    $string-prefix: if($string-prefix == '', $part, '#{$string-prefix}-#{$part}');\n  }\n\n  @return string.unquote('--#{$string-prefix}-#{$token}');\n}\n\n// Creates a CSS variable, including the fallback if provided.\n@function _create-var($name, $fallback: null) {\n  @if ($fallback) {\n    @return var($name, $fallback);\n  } @else {\n    @return var($name);\n  }\n}\n\n// Gets the value of the token given the current global context state.\n@function _get-token-value($token, $fallback) {\n  $var-name: _create-var-name($_component-prefix, $token);\n  $fallback: _get-token-fallback($token, $fallback);\n  @return _create-var($var-name, $fallback);\n}\n\n// Assertion mixin that throws an error if the global state has not been set up by wrapping\n// calls with `use-tokens`.\n@function _assert-use-tokens($token) {\n  @if $_component-prefix == null or $_tokens == null {\n    @error 'Function was not called within a wrapping call of `use-tokens`';\n  }\n  @if not map.has-key($_tokens, $token) {\n    @error 'Token #{$token} does not exist. Configured tokens are: #{map.keys($_tokens)}';\n  }\n\n  @return true;\n}\n\n// Emits a slot for the given token, provided that it has a non-null value in the token map passed\n// to `use-tokens`.\n// Accepts an optional fallback parameter to include in the CSS variable.\n// If $fallback is `true`, then use the tokens map to get the fallback.\n// TODO: Remove the use case where we accept \"true\" and handle any failing client screenshots\n@mixin create-token-slot($property, $token, $fallback: null) {\n  $_assert: _assert-use-tokens($token);\n  @if map.get($_tokens, $token) != null {\n    #{$property}: #{_get-token-value($token, $fallback)};\n  }\n}\n\n// Returns the name of a token including the current prefix. Intended to be used in calculations\n// involving tokens. `create-token-slot` should be used when outputting tokens.\n@function get-token-variable-name($token) {\n  $_assert: _assert-use-tokens($token);\n  @return _create-var-name($_component-prefix, $token);\n}\n\n// Returns a `var()` reference to a specific token. Intended for declarations\n// where the token has to be referenced as a part of a larger expression.\n// Accepts an optional fallback parameter to include in the CSS variable.\n// If $fallback is `true`, then use the tokens map to get the fallback.\n// TODO: Remove the use case where we accept \"true\" and handle any failing client screenshots\n@function get-token-variable($token, $fallback: null) {\n  $_assert: _assert-use-tokens($token);\n  @return _get-token-value($token, $fallback);\n}\n\n// Gets the token's fallback value. Prefers adding a system-level fallback if one exists, otherwise\n// use the provided fallback.\n@function _get-token-fallback($token, $fallback: null) {\n  // If the $fallback is `true`, this is the component's signal to use the current token map value\n  @if ($fallback == true) {\n    $fallback: map.get($_tokens, $token);\n  }\n\n  // Check whether there's a system-level fallback. If not, return the optional\n  // provided fallback (otherwise null).\n  $sys-fallback: map.get($_system-fallbacks, $_component-prefix, $token);\n  @if (not $sys-fallback) {\n    @return $fallback;\n  }\n\n  @if (sass-utils.is-css-var-name($sys-fallback)) {\n    @return _create-var($sys-fallback, $fallback);\n  }\n\n  // TODO(mat-app-theme): Return the system-level fallback.\n  // Changing this will affect clients that do not properly call theme mixins since the tokens\n  // will be undefined and now default to M3 system values, causing a number of screenshot failures.\n  // @return $sys-fallback;\n  @return $fallback;\n}\n\n// Outputs a map of tokens under a specific prefix.\n@mixin create-token-values($prefix, $tokens) {\n  @if $tokens != null {\n    @each $key, $value in $tokens {\n      @if $value != null {\n        #{_create-var-name($prefix, $key)}: #{$value};\n      }\n    }\n  }\n}\n\n// MDC doesn't currently handle elevation tokens properly. As a temporary workaround we can combine\n// the elevation and shadow-color tokens into a full box-shadow and use it as the value for the\n// elevation token.\n@function resolve-elevation($tokens, $elevation-token, $shadow-color-token) {\n  $elevation: map.get($tokens, $elevation-token);\n  $shadow-color: map.get($tokens, $shadow-color-token);\n  @return map.merge($tokens, (\n    $elevation-token: elevation.get-box-shadow($elevation, $shadow-color),\n    $shadow-color-token: null,\n  ));\n}\n\n/// Checks whether a list starts wih a given prefix\n/// @param {List} $list The list value to check the prefix of.\n/// @param {List} $prefix The prefix to check.\n/// @return {Boolean} Whether the list starts with the prefix.\n@function _is-prefix($list, $prefix) {\n  @for $i from 1 through list.length($prefix) {\n    @if list.nth($list, $i) != list.nth($prefix, $i) {\n      @return false;\n    }\n  }\n  @return true;\n}\n\n/// Gets the supported color variants in the given token set for the given prefix.\n/// @param {Map} $tokens The full token map.\n/// @param {List} $prefix The component prefix to get color variants for.\n/// @return {List} The supported color variants.\n@function _supported-color-variants($tokens, $prefix) {\n  $result: ();\n  @each $namespace in map.keys($tokens) {\n    @if list.length($prefix) == list.length($namespace) - 1 and _is-prefix($namespace, $prefix) {\n      $result: list.append($result, list.nth($namespace, list.length($namespace)), comma);\n    }\n  }\n  @return $result;\n}\n\n/// Gets the token values for the given components prefix with the given options.\n/// @param {Map} $tokens The full token map.\n/// @param {List} $prefix The component prefix to get the token values for.\n/// @param {ArgList} Any additional options\n///   Currently the additional supported options are:\n//     - $color-variant - The color variant to use for the component\n//     - $emit-overrides-only - Whether to emit *only* the overrides for the\n//                              specific color variant, or all color styles. Defaults to false.\n/// @throws If given options are invalid\n/// @return {Map} The token values for the requested component.\n@function get-tokens-for($tokens, $prefix, $options...) {\n  $options: sass-utils.validate-keyword-args($options, (color-variant, emit-overrides-only));\n  @if $tokens == () {\n    @return ();\n  }\n  $values: map.get($tokens, $prefix);\n  $color-variant: map.get($options, color-variant);\n  $emit-overrides-only: map.get($options, emit-overrides-only);\n  @if $color-variant == null {\n    @return $values;\n  }\n  $overrides: map.get($tokens, list.append($prefix, $color-variant));\n  @if $overrides == null {\n    $variants: _supported-color-variants($tokens, $prefix);\n    $secondary-message: if($variants == (),\n      'Mixin does not support color variants',\n      'Supported color variants are: #{$variants}'\n    );\n\n    @error 'Invalid color variant: #{$color-variant}. #{$secondary-message}.';\n  }\n  @return if($emit-overrides-only, $overrides, map.merge($values, $overrides));\n}\n\n/// Emits new token values for the given token overrides.\n/// Verifies that the overrides passed in are valid tokens.\n/// New token values are emitted under the current selector or root.\n@mixin batch-create-token-values($overrides: (), $token-maps...) {\n  @include _validate-token-overrides($overrides, $token-maps);\n\n  @each $token-map in $token-maps {\n    $prefix: map.get($token-map, prefix);\n    $tokens: map.get($token-map, tokens);\n\n    @each $name, $value in $tokens {\n      $tokens: map.set($tokens, $name, map.get($overrides, $name));\n    }\n\n    @include sass-utils.current-selector-or-root() {\n      @include create-token-values($prefix, $tokens);\n    }\n  }\n}\n\n/// Verifies that the token overrides exist and are used in one of the given token maps.\n@mixin _validate-token-overrides($overrides: (), $token-maps) {\n  $valid-token-names: ();\n\n  @each $token-map in $token-maps {\n    @each $name, $value in map.get($token-map, tokens) {\n      @if ($value != null and list.index($valid-token-names, $name) == null) {\n        $valid-token-names: list.append($valid-token-names, $name);\n      }\n    }\n  }\n\n  @each $name in map.keys($overrides) {\n    @if (list.index($valid-token-names, $name) == null) {\n      @error (\n        'Invalid token: \"' + $name + '\"'\n        'Valid tokens include: ' $valid-token-names\n      );\n    }\n  }\n}\n", "@use 'sass:map';\n@use '../style/sass-utils';\n@use '../m2' as m2-theming;\n@use './m3';\n@use './m3/definitions' as m3-token-definitions;\n@use '../tokens/m2' as m2-tokens;\n@use '../style/elevation';\n@use './density';\n@use './format-tokens';\n\n// Default system level prefix to use when directly calling the `system-level-*` mixins\n$_system-level-prefix: sys;\n\n// Prefix used for component token fallback variables, e.g.\n// `color: var(--mdc-text-button-label-text-color, var(--mat-app-primary));`\n$_system-fallback-prefix: mat-app;\n\n/// Generates tokens for the given palette with the given prefix.\n/// @param {Map} $palette The palette to generate tokens for\n/// @param {String} $prefix The key prefix used to name the tokens\n/// @return {Map} A set of tokens for the given palette\n@function _generate-palette-tokens($palette, $prefix) {\n  $palette: map.remove($palette, neutral, neutral-variant);\n  $result: ();\n  @each $hue, $value in $palette {\n    $result: map.set($result, '#{$prefix}#{$hue}', $value);\n  }\n  @return $result;\n}\n\n/// Creates a set of `md-ref-palette` tokens from the given palettes. (See\n/// ./m3/definitions/_md-ref-palette.scss)\n/// @param {Map} $primary The primary palette\n/// @param {Map} $secondary The secondary palette\n/// @param {Map} $tertiary The tertiary palette\n/// @param {Map} $error The error palette\n/// @return {Map} A set of `md-ref-palette` tokens\n@function _generate-ref-palette-tokens($primary, $tertiary, $error) {\n  @return sass-utils.merge-all(\n      (black: #000, white: #fff),\n      _generate-palette-tokens($primary, primary),\n      _generate-palette-tokens(map.get($primary, secondary), secondary),\n      _generate-palette-tokens($tertiary, tertiary),\n      _generate-palette-tokens(map.get($primary, neutral), neutral),\n      _generate-palette-tokens(map.get($primary, neutral-variant), neutral-variant),\n      _generate-palette-tokens($error, error),\n  );\n}\n\n/// Creates a set of `md-ref-typeface` tokens from the given palettes. (See\n/// ./m3/definitions/_md-ref-typeface.scss)\n/// @param {List|String} $brand The font-family to use for brand text\n/// @param {List|String} $plain The font-family to use for plain text\n/// @param {String} $bold The font-weight to use for bold text\n/// @param {String} $medium The font-weight to use for medium text\n/// @param {String} $regular The font-weight to use for regular text\n/// @return {Map} A set of `md-ref-typeface` tokens\n@function _generate-ref-typeface-tokens($brand, $plain, $bold, $medium, $regular) {\n  @return (\n    brand: $brand,\n    plain: $plain,\n    weight-bold: $bold,\n    weight-medium: $medium,\n    weight-regular: $regular,\n  );\n}\n\n$_cached-token-slots: null;\n\n/// Determines the token slots for all components.\n@function _get-token-slots() {\n  // Cache the slots since they're constant and calculating\n  // them appears to be expensive (see #29009).\n  @if ($_cached-token-slots) {\n    @return $_cached-token-slots;\n  }\n\n  // TODO(mmalerba): Refactor this to not depend on the legacy theme when moving out of\n  //  material-experimental. This is a hack for now because there is no good way to get the token\n  //  slots in material-experimental without exposing them all from material.\n  $fake-theme: m2-theming.define-light-theme((\n    color: (\n      primary: m2-theming.define-palette(m2-theming.$red-palette),\n      accent: m2-theming.define-palette(m2-theming.$red-palette),\n      warn: m2-theming.define-palette(m2-theming.$red-palette),\n    ),\n    typography: m2-theming.define-typography-config(),\n    density: 0\n  ));\n  $_cached-token-slots: m2-tokens.m2-tokens-from-theme($fake-theme) !global;\n  @return $_cached-token-slots;\n}\n\n/// Generates a set of namespaced tokens for all components.\n/// @param {Map} $systems The MDC system tokens\n/// @param {Boolean} $include-non-systemized Whether to include non-systemized tokens\n/// @param {Boolean} $include-density Whether to include density tokens\n/// @return {Map} A map of namespaced tokens\n@function _generate-tokens($systems, $include-non-systemized: false, $include-density: false) {\n  $systems: map.merge((\n    md-sys-color: (),\n    md-sys-elevation: (),\n    md-sys-motion: (),\n    md-sys-shape: (),\n    md-sys-state: (),\n    md-sys-typescale: ()\n  ), $systems);\n  $exclude-hardcoded: not $include-non-systemized;\n\n  // DO NOT REMOVE\n  // This function is used internally.\n  $systems: format-tokens.private-format-tokens($systems);\n  $token-slots: _get-token-slots();\n\n  // TODO(mmalerba): Fill in remaining tokens.\n  $result: sass-utils.deep-merge-all(\n    // Add the system color & typography tokens (so we can give users access via an API).\n    (\n      (mdc, theme): map.get($systems, md-sys-color),\n      (mdc, typography): map.get($systems, md-sys-typescale),\n    ),\n    m3.get-m3-tokens($systems, $exclude-hardcoded, $token-slots),\n  );\n\n  // Strip out tokens that are systemized by our made up density system.\n  @each $namespace, $tokens in $result {\n    @each $token, $value in $tokens {\n      @if density.is-systemized($namespace, $token) and not $include-density {\n        $tokens: map.remove($tokens, $token);\n      }\n    }\n    $result: map.set($result, $namespace, $tokens);\n  }\n\n  @return $result;\n}\n\n// Return a new map where the values are the same as the provided map's\n// keys, prefixed with \"--mat-app-\". For example:\n// (key1: '', key2: '') --> (key1: --mat-app-key1, key2: --mat-app-key2)\n@function _create-system-app-vars-map($map) {\n  $new-map: ();\n  @each $key, $value in $map {\n    $new-map: map.set($new-map, $key, --#{$_system-fallback-prefix}-#{$key});\n  }\n  @return $new-map;\n}\n\n// Create a components tokens map where values are based on\n// system fallback variables referencing Material's system keys.\n// Includes density token fallbacks where density is 0.\n@function create-system-fallbacks() {\n  $app-vars: (\n    'md-sys-color':\n        _create-system-app-vars-map(m3-token-definitions.md-sys-color-values-light()),\n    'md-sys-typescale':\n        _create-system-app-vars-map(m3-token-definitions.md-sys-typescale-values()),\n    'md-sys-elevation':\n        _create-system-app-vars-map(m3-token-definitions.md-sys-elevation-values()),\n    'md-sys-state':\n        _create-system-app-vars-map(m3-token-definitions.md-sys-state-values()),\n    'md-sys-shape':\n        _create-system-app-vars-map(m3-token-definitions.md-sys-shape-values()),\n  );\n\n  @return sass-utils.deep-merge-all(\n    _generate-tokens($app-vars, true, true),\n    generate-density-tokens(0)\n  );\n}\n\n// Emits CSS variables for Material's system level values. Uses the\n// namespace prefix in $_system-fallback-prefix.\n// e.g. --mat-app-surface: #E5E5E5\n@mixin theme($theme, $overrides: ()) {\n  @include system-level-colors($theme, $overrides, $_system-fallback-prefix);\n  @include system-level-typography($theme, $overrides, $_system-fallback-prefix);\n  @include system-level-elevation($theme, $overrides, $_system-fallback-prefix);\n  @include system-level-shape($theme, $overrides, $_system-fallback-prefix);\n  @include system-level-motion($theme, $overrides, $_system-fallback-prefix);\n  @include system-level-state($theme, $overrides, $_system-fallback-prefix);\n}\n\n@mixin system-level-colors($theme, $overrides: (), $prefix: null) {\n  $palettes: map.get($theme, _mat-theming-internals-do-not-access, palettes);\n  $base-palettes: (\n    neutral: map.get($palettes, neutral),\n    neutral-variant: map.get($palettes, neutral-variant),\n    secondary: map.get($palettes, secondary),\n    error: map.get($palettes, error),\n  );\n\n  $type: map.get($theme, _mat-theming-internals-do-not-access, theme-type);\n  $primary: map.merge(map.get($palettes, primary), $base-palettes);\n  $tertiary: map.merge(map.get($palettes, tertiary), $base-palettes);\n  $error: map.get($palettes, error);\n\n  @if (not $prefix) {\n    $prefix: map.get($theme, _mat-theming-internals-do-not-access,\n        color-system-variables-prefix) or $_system-level-prefix;\n  }\n\n  $ref: (\n    md-ref-palette: _generate-ref-palette-tokens($primary, $tertiary, $error)\n  );\n\n  $sys-colors: if($type == dark,\n    m3-token-definitions.md-sys-color-values-dark($ref),\n    m3-token-definitions.md-sys-color-values-light($ref));\n\n  @each $name, $value in $sys-colors {\n    --#{$prefix}-#{$name}: #{map.get($overrides, $name) or $value};\n  }\n}\n\n@mixin system-level-typography($theme, $overrides: (), $prefix: null) {\n  $font-definition: map.get($theme, _mat-theming-internals-do-not-access, font-definition);\n  $brand: map.get($font-definition, brand);\n  $plain: map.get($font-definition, plain);\n  $bold: map.get($font-definition, bold);\n  $medium: map.get($font-definition, medium);\n  $regular: map.get($font-definition, regular);\n  $ref: (\n    md-ref-typeface: _generate-ref-typeface-tokens($brand, $plain, $bold, $medium, $regular)\n  );\n\n  @if (not $prefix) {\n    $prefix: map.get($theme, _mat-theming-internals-do-not-access,\n        typography-system-variables-prefix) or $_system-level-prefix;\n  }\n\n  @each $name, $value in m3-token-definitions.md-sys-typescale-values($ref) {\n    --#{$prefix}-#{$name}: #{map.get($overrides, $name) or $value};\n  }\n}\n\n@function create-map($keys, $prefix) {\n  $result: ();\n  @each $key in $keys {\n    $result: map-merge($result, ($key: var(--#{$prefix}-#{$key})));\n  }\n  @return $result;\n}\n\n@mixin system-level-elevation($theme, $overrides: (), $prefix: $_system-level-prefix) {\n  $shadow-color: map.get(\n      $theme, _mat-theming-internals-do-not-access, color-tokens, (mdc, theme), shadow);\n\n  @for $level from 0 through 24 {\n    $value: elevation.get-box-shadow($level, $shadow-color);\n    --#{$prefix}-elevation-shadow-level-#{$level}: #{$value};\n  }\n\n  @each $name, $value in m3-token-definitions.md-sys-elevation-values() {\n    $level: map.get($overrides, $name) or $value;\n    $value: elevation.get-box-shadow($level, $shadow-color);\n    --#{$prefix}-#{$name}: #{$value};\n  }\n}\n\n@mixin system-level-shape($theme, $overrides: (), $prefix: $_system-level-prefix) {\n  @each $name, $value in m3-token-definitions.md-sys-shape-values() {\n    --#{$prefix}-#{$name}: #{map.get($overrides, $name) or $value};\n  }\n}\n\n@mixin system-level-state($theme, $overrides: (), $prefix: $_system-level-prefix) {\n  @each $name, $value in m3-token-definitions.md-sys-state-values() {\n    --#{$prefix}-#{$name}: #{map.get($overrides, $name) or $value};\n  }\n}\n\n@mixin system-level-motion($theme, $overrides: (), $prefix: $_system-level-prefix) {\n  @each $name, $value in m3-token-definitions.md-sys-motion-values() {\n    --#{$prefix}-#{$name}: #{map.get($overrides, $name) or $value};\n  }\n}\n\n@function _get-sys-color($type, $ref, $prefix) {\n  $mdc-sys-color: if($type == dark,\n    m3-token-definitions.md-sys-color-values-dark($ref),\n    m3-token-definitions.md-sys-color-values-light($ref));\n\n  @if (sass-utils.$use-system-color-variables) {\n    $keys: (\n            'background',\n            'error',\n            'error-container',\n            'inverse-on-surface',\n            'inverse-primary',\n            'inverse-surface',\n            'on-background',\n            'on-error',\n            'on-error-container',\n            'on-primary',\n            'on-primary-container',\n            'on-primary-fixed',\n            'on-primary-fixed-variant',\n            'on-secondary',\n            'on-secondary-container',\n            'on-secondary-fixed',\n            'on-secondary-fixed-variant',\n            'on-surface',\n            'on-surface-variant',\n            'on-tertiary',\n            'on-tertiary-container',\n            'on-tertiary-fixed',\n            'on-tertiary-fixed-variant',\n            'outline',\n            'outline-variant',\n            'primary',\n            'primary-container',\n            'primary-fixed',\n            'primary-fixed-dim',\n            'scrim',\n            'secondary',\n            'secondary-container',\n            'secondary-fixed',\n            'secondary-fixed-dim',\n            'surface',\n            'surface-bright',\n            'surface-container',\n            'surface-container-high',\n            'surface-container-highest',\n            'surface-container-low',\n            'surface-container-lowest',\n            'surface-dim',\n            'surface-tint',\n            'surface-variant',\n            'tertiary',\n            'tertiary-container',\n            'tertiary-fixed',\n            'tertiary-fixed-dim'\n    );\n    @return map-merge(create-map($keys, $prefix), (\n            shadow: map.get($mdc-sys-color, shadow)\n    ));\n  }\n\n  @return $mdc-sys-color;\n}\n\n@function _get-sys-typeface($ref, $prefix) {\n  @if (sass-utils.$use-system-typography-variables) {\n    $keys: (\n            'body-large',\n            'body-large-font',\n            'body-large-line-height',\n            'body-large-size',\n            'body-large-tracking',\n            'body-large-weight',\n            'body-medium',\n            'body-medium-font',\n            'body-medium-line-height',\n            'body-medium-size',\n            'body-medium-tracking',\n            'body-medium-weight',\n            'body-small',\n            'body-small-font',\n            'body-small-line-height',\n            'body-small-size',\n            'body-small-tracking',\n            'body-small-weight',\n            'display-large',\n            'display-large-font',\n            'display-large-line-height',\n            'display-large-size',\n            'display-large-tracking',\n            'display-large-weight',\n            'display-medium',\n            'display-medium-font',\n            'display-medium-line-height',\n            'display-medium-size',\n            'display-medium-tracking',\n            'display-medium-weight',\n            'display-small',\n            'display-small-font',\n            'display-small-line-height',\n            'display-small-size',\n            'display-small-tracking',\n            'display-small-weight',\n            'headline-large',\n            'headline-large-font',\n            'headline-large-line-height',\n            'headline-large-size',\n            'headline-large-tracking',\n            'headline-large-weight',\n            'headline-medium',\n            'headline-medium-font',\n            'headline-medium-line-height',\n            'headline-medium-size',\n            'headline-medium-tracking',\n            'headline-medium-weight',\n            'headline-small',\n            'headline-small-font',\n            'headline-small-line-height',\n            'headline-small-size',\n            'headline-small-tracking',\n            'headline-small-weight',\n            'label-large',\n            'label-large-font',\n            'label-large-line-height',\n            'label-large-size',\n            'label-large-tracking',\n            'label-large-weight',\n            'label-large-weight-prominent',\n            'label-medium',\n            'label-medium-font',\n            'label-medium-line-height',\n            'label-medium-size',\n            'label-medium-tracking',\n            'label-medium-weight',\n            'label-medium-weight-prominent',\n            'label-small',\n            'label-small-font',\n            'label-small-line-height',\n            'label-small-size',\n            'label-small-tracking',\n            'label-small-weight',\n            'title-large',\n            'title-large-font',\n            'title-large-line-height',\n            'title-large-size',\n            'title-large-tracking',\n            'title-large-weight',\n            'title-medium',\n            'title-medium-font',\n            'title-medium-line-height',\n            'title-medium-size',\n            'title-medium-tracking',\n            'title-medium-weight',\n            'title-small',\n            'title-small-font',\n            'title-small-line-height',\n            'title-small-size',\n            'title-small-tracking',\n            'title-small-weight'\n    );\n\n    @return create-map($keys, $prefix);\n  }\n  @return m3-token-definitions.md-sys-typescale-values($ref);\n}\n\n/// Generates a set of namespaced color tokens for all components.\n/// @param {String} $type The type of theme system (light or dark)\n/// @param {Map} $primary The primary palette\n/// @param {Map} $tertiary The tertiary palette\n/// @param {Map} $error The error palette\n/// @param {String} $system-variables-prefix The prefix of system tokens\n/// @return {Map} A map of namespaced color tokens\n@function generate-color-tokens($type, $primary, $tertiary, $error, $system-variables-prefix) {\n  $ref: (\n    md-ref-palette: _generate-ref-palette-tokens($primary, $tertiary, $error)\n  );\n\n  $sys-color: _get-sys-color($type, $ref, $system-variables-prefix);\n\n  @return _generate-tokens(map.merge($ref, (\n    md-sys-color: $sys-color,\n    // Because the elevation values are always combined with color values to create the box shadow,\n    // elevation needs to be part of the color dimension.\n    md-sys-elevation: m3-token-definitions.md-sys-elevation-values(),\n    // Because the state values are sometimes combined with color values to create rgba colors,\n    // state needs to be part of color dimension.\n    // TODO(mmalerba): If at some point we remove the need for these combined values, we can move\n    //  state to the base dimension.\n    md-sys-state: m3-token-definitions.md-sys-state-values(),\n  )));\n}\n\n/// Generates a set of namespaced color tokens for all components.\n/// @param {String|List} $brand The brand font-family\n/// @param {String|List} $plain The plain fort-family\n/// @param {String|Number} $bold The bold font-weight\n/// @param {String|Number} $medium The medium font-weight\n/// @param {String|Number} $regular The regular font-weight\n/// @param {String} $system-variables-prefix The prefix of system tokens\n/// @return {Map} A map of namespaced typography tokens\n@function generate-typography-tokens($brand, $plain, $bold, $medium, $regular,\n$system-variables-prefix) {\n  $ref: (\n    md-ref-typeface: _generate-ref-typeface-tokens($brand, $plain, $bold, $medium, $regular)\n  );\n  $sys-typeface: _get-sys-typeface($ref, $system-variables-prefix);\n  @return _generate-tokens((\n    md-sys-typescale: $sys-typeface\n  ));\n}\n\n/// Generates a set of namespaced density tokens for all components.\n/// @param {String|Number} $scale The regular font-weight\n/// @return {Map} A map of namespaced density tokens\n@function generate-density-tokens($scale) {\n  @return density.get-tokens-for-scale($scale);\n}\n\n/// Generates a set of namespaced tokens not related to color, typography, or density for all\n/// components.\n/// @return {Map} A map of namespaced tokens not related to color, typography, or density\n@function generate-base-tokens() {\n  // TODO(mmalerba): Exclude density tokens once implemented.\n  @return _generate-tokens((\n    md-sys-motion: m3-token-definitions.md-sys-motion-values(),\n    md-sys-shape: m3-token-definitions.md-sys-shape-values(),\n  ), $include-non-systemized: true);\n}\n", "// Made from here:\n// https://angular-material.dev/articles/angular-material-theme-builder\n// 1. Go here: https://themes.angular-material.dev/\n// 2. Click icon on bottom left to copy to material design 3 colors\n// 3. Replace the select with \"@mixin dark-system-vars()\"\n\n@mixin dark-system-vars() {\n  --sys-background:#0e1415;\n  --sys-on-background:#dee3e4;\n  --sys-surface:#0e1415;\n  --sys-surface-dim:#0e1415;\n  --sys-surface-bright:#343a3b;\n  --sys-surface-container-lowest:#090f10;\n  --sys-surface-container-low:#171d1e;\n  --sys-surface-container:#1b2122;\n  --sys-surface-container-high:#252b2c;\n  --sys-surface-container-highest:#303637;\n  --sys-on-surface:#dee3e4;\n  --sys-surface-variant:#3f4849;\n  --sys-on-surface-variant:#bec8c9;\n  --sys-inverse-surface:#dee3e4;\n  --sys-inverse-on-surface:#2b3132;\n  --sys-outline:#899393;\n  --sys-outline-variant:#3f4849;\n  --sys-shadow:#000000;\n  --sys-scrim:#000000;\n  --sys-surface-tint:#81d3df;\n  --sys-primary:#81d3df;\n  --sys-on-primary:#00363c;\n  --sys-primary-container:#004f57;\n  --sys-on-primary-container:#9ef0fc;\n  --sys-inverse-primary:#006973;\n  --sys-secondary:#81d3df;\n  --sys-on-secondary:#00363c;\n  --sys-secondary-container:#004f57;\n  --sys-on-secondary-container:#9df0fb;\n  --sys-tertiary:#afc6ff;\n  --sys-on-tertiary:#132f60;\n  --sys-tertiary-container:#2d4678;\n  --sys-on-tertiary-container:#d9e2ff;\n  --sys-error:#ffb4ab;\n  --sys-on-error:#561e19;\n  --sys-error-container:#73342d;\n  --sys-on-error-container:#ffdad5;\n  --sys-neutral:#727879;\n  --sys-neutral-variant:#6f797a;\n  --sys-primary-fixed:#9ef0fc;\n  --sys-primary-fixed-dim:#81d3df;\n  --sys-on-primary-fixed:#001f23;\n  --sys-on-primary-fixed-variant:#004f57;\n  --sys-secondary-fixed:#9df0fb;\n  --sys-secondary-fixed-dim:#81d3df;\n  --sys-on-secondary-fixed:#001f23;\n  --sys-on-secondary-fixed-variant:#004f57;\n  --sys-tertiary-fixed:#d9e2ff;\n  --sys-tertiary-fixed-dim:#afc6ff;\n  --sys-on-tertiary-fixed:#001943;\n  --sys-on-tertiary-fixed-variant:#2d4678;\n  --sys-inverse-secondary:#006973;\n  --sys-inverse-tertiary:#465d91;\n  --sys-inverse-error:#904a43;\n  --sys-error-fixed:#ffdad5;\n  --sys-error-fixed-dim:#ffb4ab;\n  --sys-on-error-fixed:#3b0907;\n  --sys-on-error-fixed-variant:#73342d;\n}\n", "@use './theming/theming';\n@use './theming/inspection';\n@use './theming/validation';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/sass-utils';\n@use './typography/typography';\n@use './tokens/token-utils';\n@use './tokens/m2/mat/app' as tokens-mat-app;\n@use './tokens/m2/mat/ripple' as tokens-mat-ripple;\n@use './tokens/m2/mat/option' as tokens-mat-option;\n@use './tokens/m2/mat/optgroup' as tokens-mat-optgroup;\n@use './tokens/m2/mat/full-pseudo-checkbox' as tokens-mat-full-pseudo-checkbox;\n@use './tokens/m2/mat/minimal-pseudo-checkbox' as tokens-mat-minimal-pseudo-checkbox;\n\n$_has-inserted-loaded-marker: false;\n\n@mixin _theme-loaded-marker {\n  @if not $_has-inserted-loaded-marker {\n    $_has-inserted-loaded-marker: true !global;\n\n    // Marker that is used to determine whether the user has added a theme to their page.\n    // Needs to be generated at the root, because themes may be nested inside classes.\n    @at-root {\n      .mat-theme-loaded-marker {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    @include ripple-theme.base($theme);\n    @include option-theme.base($theme);\n    @include optgroup-theme.base($theme);\n    @include pseudo-checkbox-theme.base($theme);\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-app.$prefix,\n        tokens-mat-app.get-unthemable-tokens());\n    }\n  }\n\n  // The marker is a concrete style no matter which Material version we're targeting.\n  @include _theme-loaded-marker;\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include ripple-theme.color($theme);\n    @include option-theme.color($theme);\n    @include optgroup-theme.color($theme);\n    @include pseudo-checkbox-theme.color($theme);\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-app.$prefix,\n        tokens-mat-app.get-color-tokens($theme));\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    @include option-theme.typography($theme);\n    @include optgroup-theme.typography($theme);\n    @include pseudo-checkbox-theme.typography($theme);\n    @include ripple-theme.typography($theme);\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    @include option-theme.density($theme);\n    @include optgroup-theme.density($theme);\n    @include pseudo-checkbox-theme.density($theme);\n    @include ripple-theme.density($theme);\n  }\n}\n\n// This theme is a special case where not all of the imported tokens are supported in `overrides`.\n// To aid the docs token extraction, we have to pull the `overrides` token config out into a\n// separate function.\n// !!!Important!!! renaming or removal of this function requires the `extract-tokens.ts` script to\n// be updated as well.\n@function _get-supported-overrides-tokens() {\n  $app-tokens: tokens-mat-app.get-token-slots();\n  $ripple-tokens: tokens-mat-ripple.get-token-slots();\n  $option-tokens: tokens-mat-option.get-token-slots();\n  $full-pseudo-checkbox-tokens: tokens-mat-full-pseudo-checkbox.get-token-slots();\n  $minimal-pseudo-checkbox-tokens: tokens-mat-minimal-pseudo-checkbox.get-token-slots();\n\n  @return (\n    (prefix: tokens-mat-app.$prefix, tokens: $app-tokens),\n    (prefix: tokens-mat-ripple.$prefix, tokens: $ripple-tokens),\n    (prefix: tokens-mat-option.$prefix, tokens: $option-tokens),\n    (prefix: tokens-mat-full-pseudo-checkbox.$prefix, tokens: $full-pseudo-checkbox-tokens),\n    (prefix: tokens-mat-minimal-pseudo-checkbox.$prefix, tokens: $minimal-pseudo-checkbox-tokens),\n  );\n}\n\n@mixin overrides($tokens: ()) {\n  @include token-utils.batch-create-token-values($tokens, _get-supported-overrides-tokens()...);\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme, $options...) {\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme), $options...);\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n\n  // The marker is a concrete style no matter which Material version we're targeting.\n  @include _theme-loaded-marker;\n}\n\n@mixin _theme-from-tokens($tokens, $options...) {\n  @include validation.selector-defined(\n      'Calls to Angular Material theme mixins with an M3 theme must be wrapped in a selector');\n  $mat-app-tokens: token-utils.get-tokens-for($tokens, tokens-mat-app.$prefix, $options...);\n  $mat-ripple-tokens: token-utils.get-tokens-for($tokens, tokens-mat-ripple.$prefix, $options...);\n  $mat-option-tokens: token-utils.get-tokens-for($tokens, tokens-mat-option.$prefix, $options...);\n  $mat-optgroup-tokens:\n    token-utils.get-tokens-for($tokens, tokens-mat-optgroup.$prefix, $options...);\n  $mat-full-pseudo-checkbox-tokens: token-utils.get-tokens-for($tokens,\n    tokens-mat-full-pseudo-checkbox.$prefix, $options...);\n  $mat-minimal-pseudo-checkbox-tokens: token-utils.get-tokens-for($tokens,\n    tokens-mat-minimal-pseudo-checkbox.$prefix, $options...);\n\n  @include token-utils.create-token-values(tokens-mat-app.$prefix, $mat-app-tokens);\n  @include token-utils.create-token-values(tokens-mat-ripple.$prefix, $mat-ripple-tokens);\n  @include token-utils.create-token-values(tokens-mat-option.$prefix, $mat-option-tokens);\n  @include token-utils.create-token-values(tokens-mat-optgroup.$prefix, $mat-optgroup-tokens);\n  @include token-utils.create-token-values(tokens-mat-full-pseudo-checkbox.$prefix,\n    $mat-full-pseudo-checkbox-tokens);\n  @include token-utils.create-token-values(tokens-mat-minimal-pseudo-checkbox.$prefix,\n    $mat-minimal-pseudo-checkbox-tokens);\n}\n", "// Made from here:\n// https://angular-material.dev/articles/angular-material-theme-builder\n// 1. Go here: https://themes.angular-material.dev/\n// 2. Click icon on bottom left to copy to material design 3 colors\n// 3. Replace the select with \"@mixin light-system-vars()\"\n\n@mixin light-system-vars() {\n  --sys-background:#f5fafb;\n  --sys-on-background:#171d1e;\n  --sys-surface:#f5fafb;\n  --sys-surface-dim:#d5dbdc;\n  --sys-surface-bright:#f5fafb;\n  --sys-surface-container-lowest:#ffffff;\n  --sys-surface-container-low:#eff5f6;\n  --sys-surface-container:#e9eff0;\n  --sys-surface-container-high:#e3e9ea;\n  --sys-surface-container-highest:#dee3e4;\n  --sys-on-surface:#171d1e;\n  --sys-surface-variant:#dae4e5;\n  --sys-on-surface-variant:#3f4849;\n  --sys-inverse-surface:#2b3132;\n  --sys-inverse-on-surface:#ecf2f3;\n  --sys-outline:#6f797a;\n  --sys-outline-variant:#bec8c9;\n  --sys-shadow:#000000;\n  --sys-scrim:#000000;\n  --sys-surface-tint:#006973;\n  --sys-primary:#006973;\n  --sys-on-primary:#ffffff;\n  --sys-primary-container:#9ef0fc;\n  --sys-on-primary-container:#004f57;\n  --sys-inverse-primary:#81d3df;\n  --sys-secondary:#006973;\n  --sys-on-secondary:#ffffff;\n  --sys-secondary-container:#9df0fb;\n  --sys-on-secondary-container:#004f57;\n  --sys-tertiary:#465d91;\n  --sys-on-tertiary:#ffffff;\n  --sys-tertiary-container:#d9e2ff;\n  --sys-on-tertiary-container:#2d4678;\n  --sys-error:#904a43;\n  --sys-on-error:#ffffff;\n  --sys-error-container:#ffdad5;\n  --sys-on-error-container:#73342d;\n  --sys-neutral:#727879;\n  --sys-neutral-variant:#6f797a;\n  --sys-primary-fixed:#9ef0fc;\n  --sys-primary-fixed-dim:#81d3df;\n  --sys-on-primary-fixed:#001f23;\n  --sys-on-primary-fixed-variant:#004f57;\n  --sys-secondary-fixed:#9df0fb;\n  --sys-secondary-fixed-dim:#81d3df;\n  --sys-on-secondary-fixed:#001f23;\n  --sys-on-secondary-fixed-variant:#004f57;\n  --sys-tertiary-fixed:#d9e2ff;\n  --sys-tertiary-fixed-dim:#afc6ff;\n  --sys-on-tertiary-fixed:#001943;\n  --sys-on-tertiary-fixed-variant:#2d4678;\n  --sys-inverse-secondary:#81d3df;\n  --sys-inverse-tertiary:#afc6ff;\n  --sys-inverse-error:#ffb4ab;\n  --sys-error-fixed:#ffdad5;\n  --sys-error-fixed-dim:#ffb4ab;\n  --sys-on-error-fixed:#3b0907;\n  --sys-on-error-fixed-variant:#73342d;\n}\n"],
  "mappings": "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,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,I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oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,I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",
  "names": []
}
